info Compiling with standard Scala 3.2.0 compiler front end...info Finished compiling                                       
info Preprocessing the symbols...                             info Preprocessing finished                                   
info Running phase ConstructsUsage                            info Running phase PartialFunctions                           info Running phase XlangLowering                              info Running phase InnerClasses                               info Running phase Laws                                       info Running phase SuperInvariants                            info Running phase SuperCalls                                 info Running phase Sealing                                    info Running phase MethodLifting                              info Running phase MergeInvariants                            info Running phase FieldAccessors                             info Running phase ValueClasses                               info Running phase MethodsLowering                            info Running phase EffectElaboration                          info Running phase AntiAliasing                               info Running phase ReturnElimination                          info Running phase ImperativeCodeElimination                  info Running phase ImperativeCleanup                          info Running phase AdtSpecialization                          info Running phase RefinementLifting                          info Running phase TypeEncoding                               info Running phase InvariantInitialization                    info Running phase FunctionClosure                            info Running phase FunctionSpecialization                     info Running phase UnfoldOpaque                               info Running phase CallSiteInline                             info Running phase ChooseInjector                             info Running phase ChooseEncoder                              info Running phase FunctionInlining                           info Running phase TraceInductElimination                     info Running phase SizedADTExtraction                         info Running phase InductElimination                          info Running phase MeasureInference                           info Inferring measure for size...                            info Inferring measure for isPrefix...                        info Inferring measure for last...                            info Inferring measure for ++...                              info Inferring measure for forall...                          info Inferring measure for filter...                          info Inferring measure for noDuplicate...                     info Inferring measure for -...                               info Running phase PartialEvaluation                          info Finished lowering the symbols                            
info Generating VCs for functions: isPrefix$0, removeLast$0, reverseList$0, getSuffix$0, getIndex$0, consecutiveSubseq$0, consecutiveSubseqAtHead$0, isSuffix$0, getPrefix$0, lemmaIsSuffixThenSubseq$0, lemmaIsSuffixThenTailIsSuffix$0, lemmaRemovingHeadOfSuffixThenGetPrefixLonger$0, subseqForall$0, lemmaConsecutiveSubseqThenSubseq$0, lemmaContainsAndNotHdThenTlContains$0, lemmaGetIndexBiggerAndHeadNotEqThenTailContains$0, lemmaSameIndexThenSameElement$0, lemmaGetIndexBiggerAndHeadEqThenTailContains$0, lemmaNotHeadSoGetIndexTailIsMinusOne$0, lemmaIsPrefixRefl$0, lemmaConcatTwoListThenFirstIsPrefix$0, lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref$0, lemmaConcatAssociativity$0, lemmaTwoListsConcatAssociativity$0, lemmaChangeCutStillConcatTotal$0, lemmaRemoveLastConcatenatedPrefixStillPrefix$0, lemmaRemoveLastPrefixStillPrefix$0, lemmaPrefixStaysPrefixWhenAddingToSuffix$0, lemmaRemoveLastPrefixDecreasesSize$0, lemmaIsPrefixSameLengthThenSameList$0, lemmaRemoveLastFromBothSidePreservesEq$0, lemmaRemoveLastFromLMakesItPrefix$0, lemmaSamePrefixThenSameSuffix$0, lemmaIsPrefixThenSmallerEqSize$0, lemmaAddHeadSuffixToPrefixStillPrefix$0, lemmaGetSuffixOnListWithItSelfIsEmpty$0, lemmaMoveElementToOtherListKeepsConcatEq$0, lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther$0, concatWithoutDuplicates$0, removeDuplicates$0, removeDuplicates$default$3$0, lemmaSubseqRefl$0, lemmaSubseqOfEmptyIsEmpty$0, lemmaTailIsSubseqOfList$0, lemmaTailIsSubseqOfListBis$0, lemmaTailIsSubseqOfBiggerList$0, lemmaSubSeqTransitive$0, lemmaSubSeqAddSameElmtPreserves$0, lemmaConcatThenFirstSubseqOfTot$0, lemmaConcatThenSecondSubseqOfTot$0, lemmaConcatTwoListsWhichNotContainThenTotNotContain$0, lemmaForallContainsThenInOtherList$0, lemmaForallThenDisjunction2$0, lemmaForallThenDisjunction1$0, lemmaForallContainsThenForEqualLists$0, lemmaForallContainsAndNoDuplicateThenSmallerList$0, lemmaForallContainsAddingInSndListPreserves$0, lemmaForallContainsAddingElmtInPreserves$0, lemmaForallContainsConcatPreserves$0, lemmaForallContainsPreservedRemoveElmt$0, lemmaForallContainsPreservedRemoveElmtInRefList$0, lemmaForallContainsPreservedIfSameContent$0, lemmaForallNotContainsForSubseq$0, lemmaForallNotContainsForConcat$0, lemmaForallNotContainsForConcat$1, lemmaForallNotContainsCannotContain$0, lemmaNoDuplicateConcatThenForallNotContains$0, lemmaForallNotContainsPreservedAddNewElmtInRefList$0, lemmaForallNotContainsNilRefList$0, lemmaForallNotContainedNoDupThenConcatNoDup$0, lemmaRemoveElmtContainedSizeSmaller$0, lemmaRemoveOneElmtNoDuplicateSizeMinusOne$0, noDuplicateConcatNotContainedPreserves$0, noDuplicateConcatListNotContainedPreserves$0, noDuplicateConcatListNotContainedPreservesBis$0, lemmaNoDuplicatePreservedSameContent$0, lemmaRemoveOneElmtNotContainedSameList$0, lemmaRemoveOneElmtPreservesNoDuplicate$0, lemmaSubsetContentThenForallContains$0, notContainsAddNotEqThenNotContains$0, notContainsAThenTailNotContains$0, lemmaListContainsThenFilterContainsNotEmpty$0, lemmaListNotContainsThenFilterContainsEmpty$0, lemmaSameContentSameSizeSmallerEqOneSameList$0...info Finished generating VCs
Starting verification...
info Verified: 0 / 982
debug:  - Checking cache: 'postcondition' VC for removeDuplicates$default$3 @582:24...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for removeDuplicates$default$3 @582:24...
info Verified: 1 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsAddingElmtInPreser... (require 1/2))' VC for lemmaForallContainsAddingElmtInPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a35bb77e
debug: Cache hit: 'precond. (call lemmaForallContainsAddingElmtInPreser... (require 1/2))' VC for lemmaForallContainsAddingElmtInPreserves @?:?...
info Verified: 2 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsAddingElmtInPreser... (require 2/2))' VC for lemmaForallContainsAddingElmtInPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@22a67fbf
debug: Cache hit: 'precond. (call lemmaForallContainsAddingElmtInPreser... (require 2/2))' VC for lemmaForallContainsAddingElmtInPreserves @?:?...
info Verified: 3 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallContainsAddingElmtInPreserves @875:23...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a197721f
debug: Cache hit: 'non-negative measure' VC for lemmaForallContainsAddingElmtInPreserves @875:23...
info Verified: 4 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsAddingElmtInPreserves' VC for lemmaForallContainsAddingElmtInPreserves @871:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f7ee20bd
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsAddingElmtInPreserves' VC for lemmaForallContainsAddingElmtInPreserves @871:9...
info Verified: 5 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsAddingElmtInPreserves' VC for lemmaForallContainsAddingElmtInPreserves @871:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@49d78ebe
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsAddingElmtInPreserves' VC for lemmaForallContainsAddingElmtInPreserves @871:9...
info Verified: 6 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallContainsAddingElmtInPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c5880a68
debug: Cache hit: 'measure decreases' VC for lemmaForallContainsAddingElmtInPreserves @?:?...
info Verified: 7 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsAddingElmtInPreserves @871:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@29f62445
debug: Cache hit: 'postcondition' VC for lemmaForallContainsAddingElmtInPreserves @871:9...
info Verified: 8 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsAddingElmtInPreserves @872:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@68d00932
debug: Cache hit: 'postcondition' VC for lemmaForallContainsAddingElmtInPreserves @872:21...
info Verified: 9 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallContainsAddingElmtInPreserves @869:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@927cc524
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallContainsAddingElmtInPreserves @869:5...
info Verified: 10 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsAddingElmtInPreserves @869:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@927cc524
debug: Cache hit: 'postcondition' VC for lemmaForallContainsAddingElmtInPreserves @869:5...
info Verified: 11 / 982
debug:  - Checking cache: 'precond. (call getIndex[B](l, e1))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @195:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@19045312
debug: Cache hit: 'precond. (call getIndex[B](l, e1))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @195:13...
info Verified: 12 / 982
debug:  - Checking cache: 'precond. (call getIndex[B](l, e2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @195:31...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@46f51e90
debug: Cache hit: 'precond. (call getIndex[B](l, e2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @195:31...
info Verified: 13 / 982
debug:  - Checking cache: 'precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 1/4))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e8e08885
debug: Cache hit: 'precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 1/4))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 14 / 982
debug:  - Checking cache: 'precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 2/4))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ff2fba6
debug: Cache hit: 'precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 2/4))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 15 / 982
debug:  - Checking cache: 'precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 3/4))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1613ccdd
debug: Cache hit: 'precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 3/4))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 16 / 982
debug:  - Checking cache: 'precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 4/4))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1c827d10
debug: Cache hit: 'precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 4/4))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 17 / 982
debug:  - Checking cache: 'precond. (call lemmaContainsAndNotHdThenTlContains[B... (require 1/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@14c1009
debug: Cache hit: 'precond. (call lemmaContainsAndNotHdThenTlContains[B... (require 1/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 18 / 982
debug:  - Checking cache: 'precond. (call lemmaContainsAndNotHdThenTlContains[B... (require 2/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b50ea71a
debug: Cache hit: 'precond. (call lemmaContainsAndNotHdThenTlContains[B... (require 2/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 19 / 982
debug:  - Checking cache: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 1/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@973a530d
debug: Cache hit: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 1/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 20 / 982
debug:  - Checking cache: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 2/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@25e17096
debug: Cache hit: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 2/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 21 / 982
debug:  - Checking cache: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 1/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@228b1182
debug: Cache hit: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 1/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 22 / 982
debug:  - Checking cache: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 2/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ef082700
debug: Cache hit: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 2/2))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 23 / 982
debug:  - Checking cache: 'precond. (call lemmaGetIndexBiggerAndHeadNotEqThenTa... (require 1/3))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9caa0c43
debug: Cache hit: 'precond. (call lemmaGetIndexBiggerAndHeadNotEqThenTa... (require 1/3))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 24 / 982
debug:  - Checking cache: 'precond. (call lemmaGetIndexBiggerAndHeadNotEqThenTa... (require 2/3))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d14b8450
debug: Cache hit: 'precond. (call lemmaGetIndexBiggerAndHeadNotEqThenTa... (require 2/3))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 25 / 982
debug:  - Checking cache: 'precond. (call lemmaGetIndexBiggerAndHeadNotEqThenTa... (require 3/3))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6b0a4ba6
debug: Cache hit: 'precond. (call lemmaGetIndexBiggerAndHeadNotEqThenTa... (require 3/3))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 26 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @212:12...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8109caae
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @212:12...
info Verified: 27 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @214:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5bbc2869
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @214:15...
info Verified: 28 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @202:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cc4dc94f
debug: Cache hit: 'body assertion' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @202:16...
info Verified: 29 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @212:12...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@84c1df72
debug: Cache hit: 'body assertion' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @212:12...
info Verified: 30 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @214:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ebea4676
debug: Cache hit: 'non-negative measure' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @214:15...
info Verified: 31 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @200:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bc0b50a6
debug: Cache hit: 'body assertion: Inlined precondition (1/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @200:9...
info Verified: 32 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @200:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5cd31366
debug: Cache hit: 'body assertion: Inlined precondition (2/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @200:9...
info Verified: 33 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @200:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1d4ab5ec
debug: Cache hit: 'body assertion: Inlined precondition (3/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @200:9...
info Verified: 34 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (4/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @200:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1c827d10
debug: Cache hit: 'body assertion: Inlined precondition (4/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @200:9...
info Verified: 35 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaContainsAndNotHdThenTlContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @204:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9dbc1438
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaContainsAndNotHdThenTlContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @204:9...
info Verified: 36 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaContainsAndNotHdThenTlContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @204:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@94f5f7da
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaContainsAndNotHdThenTlContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @204:9...
info Verified: 37 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @205:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7aeced63
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @205:9...
info Verified: 38 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @205:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2b0912f2
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @205:9...
info Verified: 39 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @206:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@51d5dcf
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @206:9...
info Verified: 40 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @206:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fb764184
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @206:9...
info Verified: 41 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/3) of lemmaGetIndexBiggerAndHeadNotEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @208:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cdeabdba
debug: Cache hit: 'body assertion: Inlined precondition (1/3) of lemmaGetIndexBiggerAndHeadNotEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @208:9...
info Verified: 42 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/3) of lemmaGetIndexBiggerAndHeadNotEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @208:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@50413db1
debug: Cache hit: 'body assertion: Inlined precondition (2/3) of lemmaGetIndexBiggerAndHeadNotEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @208:9...
info Verified: 43 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/3) of lemmaGetIndexBiggerAndHeadNotEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @208:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5c1d7f1b
debug: Cache hit: 'body assertion: Inlined precondition (3/3) of lemmaGetIndexBiggerAndHeadNotEqThenTailContains' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @208:9...
info Verified: 44 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5e41da3e
debug: Cache hit: 'measure decreases' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @?:?...
info Verified: 45 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of check' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @210:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e98e1496
debug: Cache hit: 'body assertion: Inlined precondition of check' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @210:21...
info Verified: 46 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @198:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5f58dee
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @198:5...
info Verified: 47 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @212:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@32e8f313
debug: Cache hit: 'postcondition' VC for lemmaGetIndexBiggerAndHeadNotEqThenTailContains @212:5...
info Verified: 48 / 982
debug:  - Checking cache: 'precond. (call head[B](l))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @251:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2ccd176c
debug: Cache hit: 'precond. (call head[B](l))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @251:13...
info Verified: 49 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @254:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c5a9819a
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @254:9...
info Verified: 50 / 982
debug:  - Checking cache: 'precond. (call head[B](tail[B](l)))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @254:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@56a036ed
debug: Cache hit: 'precond. (call head[B](tail[B](l)))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @254:9...
info Verified: 51 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @255:44...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@52f60a05
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @255:44...
info Verified: 52 / 982
debug:  - Checking cache: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 1/2))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@51895f1d
debug: Cache hit: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 1/2))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @?:?...
info Verified: 53 / 982
debug:  - Checking cache: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 2/2))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@58dd3b88
debug: Cache hit: 'precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 2/2))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @?:?...
info Verified: 54 / 982
debug:  - Checking cache: 'precond. (call getIndex[B](l, e))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@519e8836
debug: Cache hit: 'precond. (call getIndex[B](l, e))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:15...
info Verified: 55 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:42...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ad17f953
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:42...
info Verified: 56 / 982
debug:  - Checking cache: 'precond. (call getIndex[B](tail[B](l), e))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:33...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@503b4df1
debug: Cache hit: 'precond. (call getIndex[B](tail[B](l), e))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:33...
info Verified: 57 / 982
debug:  - Checking cache: 'precond. (call getIndex[B](l, e))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@42932ece
debug: Cache hit: 'precond. (call getIndex[B](l, e))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:15...
info Verified: 58 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:42...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ea953feb
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:42...
info Verified: 59 / 982
debug:  - Checking cache: 'precond. (call getIndex[B](tail[B](l), e))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:33...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a445e789
debug: Cache hit: 'precond. (call getIndex[B](tail[B](l), e))' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:33...
info Verified: 60 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:42...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@45746646
debug: Cache hit: 'non-negative measure' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @257:42...
info Verified: 61 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @255:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1ac6f309
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @255:7...
info Verified: 62 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @255:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@99dc40de
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaNotHeadSoGetIndexTailIsMinusOne' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @255:7...
info Verified: 63 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ae002e7f
debug: Cache hit: 'measure decreases' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @?:?...
info Verified: 64 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @255:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@70143d0e
debug: Cache hit: 'postcondition' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @255:7...
info Verified: 65 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @256:6...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ce8afb2b
debug: Cache hit: 'postcondition' VC for lemmaNotHeadSoGetIndexTailIsMinusOne @256:6...
info Verified: 66 / 982
debug:  - Checking cache: 'precond. (call lemmaIsPrefixRefl[B](l1, l2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'precond. (call lemmaIsPrefixRefl[B](l1, l2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @?:?...
info Verified: 67 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, l) (require 1/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f38d0b10
debug: Cache hit: 'precond. (call getSuffix[B](l, l) (require 1/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
info Verified: 68 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, l) (require 2/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cb2ad278
debug: Cache hit: 'precond. (call getSuffix[B](l, l) (require 2/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
info Verified: 69 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, l) (require 1/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5135c8ab
debug: Cache hit: 'precond. (call getSuffix[B](l, l) (require 1/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
info Verified: 70 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, l) (require 2/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9cddb7ff
debug: Cache hit: 'precond. (call getSuffix[B](l, l) (require 2/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
info Verified: 71 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, l) (require 1/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2d2988b1
debug: Cache hit: 'precond. (call getSuffix[B](l, l) (require 1/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
info Verified: 72 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, l) (require 2/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2d2988b1
debug: Cache hit: 'precond. (call getSuffix[B](l, l) (require 2/2))' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:15...
info Verified: 73 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@16897d10
debug: Cache hit: 'non-negative measure' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @520:28...
info Verified: 74 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaIsPrefixRefl' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @514:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: Inlined precondition of lemmaIsPrefixRefl' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @514:5...
info Verified: 75 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8ea5389f
debug: Cache hit: 'measure decreases' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @?:?...
info Verified: 76 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @517:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@22429b1d
debug: Cache hit: 'postcondition' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @517:28...
info Verified: 77 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @518:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2b3f42d3
debug: Cache hit: 'postcondition' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @518:28...
info Verified: 78 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @516:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2d2988b1
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @516:5...
info Verified: 79 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @516:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2d2988b1
debug: Cache hit: 'postcondition' VC for lemmaGetSuffixOnListWithItSelfIsEmpty @516:5...
info Verified: 80 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsAddingInSndListPre...)' VC for lemmaForallContainsAddingInSndListPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@92d3fa09
debug: Cache hit: 'precond. (call lemmaForallContainsAddingInSndListPre...)' VC for lemmaForallContainsAddingInSndListPreserves @?:?...
info Verified: 81 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallContainsAddingInSndListPreserves @856:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2c60f1aa
debug: Cache hit: 'non-negative measure' VC for lemmaForallContainsAddingInSndListPreserves @856:15...
info Verified: 82 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaForallContainsAddingInSndListPreserves' VC for lemmaForallContainsAddingInSndListPreserves @852:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fb28b267
debug: Cache hit: 'body assertion: Inlined precondition of lemmaForallContainsAddingInSndListPreserves' VC for lemmaForallContainsAddingInSndListPreserves @852:9...
info Verified: 83 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallContainsAddingInSndListPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fdbfcd3d
debug: Cache hit: 'measure decreases' VC for lemmaForallContainsAddingInSndListPreserves @?:?...
info Verified: 84 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsAddingInSndListPreserves @852:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@61f321a2
debug: Cache hit: 'postcondition' VC for lemmaForallContainsAddingInSndListPreserves @852:9...
info Verified: 85 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsAddingInSndListPreserves @853:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bb35be35
debug: Cache hit: 'postcondition' VC for lemmaForallContainsAddingInSndListPreserves @853:21...
info Verified: 86 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallContainsAddingInSndListPreserves @850:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cfe6892f
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallContainsAddingInSndListPreserves @850:5...
info Verified: 87 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsAddingInSndListPreserves @850:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cfe6892f
debug: Cache hit: 'postcondition' VC for lemmaForallContainsAddingInSndListPreserves @850:5...
info Verified: 88 / 982
debug:  - Checking cache: 'precond. (call lemmaTailIsSubseqOfBiggerList[B](l, l...)' VC for subseqForall @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9975c47a
debug: Cache hit: 'precond. (call lemmaTailIsSubseqOfBiggerList[B](l, l...)' VC for subseqForall @?:?...
info Verified: 89 / 982
debug:  - Checking cache: 'precond. (call subseqContains[B](lSub, l, (scrut.h):...)' VC for subseqForall @156:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4f3cab35
debug: Cache hit: 'precond. (call subseqContains[B](lSub, l, (scrut.h):...)' VC for subseqForall @156:9...
info Verified: 90 / 982
debug:  - Checking cache: 'precond. (call forallContained[B](l, p, (scrut.h): @...)' VC for subseqForall @157:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1bc388f7
debug: Cache hit: 'precond. (call forallContained[B](l, p, (scrut.h): @...)' VC for subseqForall @157:9...
info Verified: 91 / 982
debug:  - Checking cache: 'precond. (call subseqForall[B](l, lSub, p) (require 1/2))' VC for subseqForall @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8aaa6102
debug: Cache hit: 'precond. (call subseqForall[B](l, lSub, p) (require 1/2))' VC for subseqForall @?:?...
info Verified: 92 / 982
debug:  - Checking cache: 'precond. (call subseqForall[B](l, lSub, p) (require 2/2))' VC for subseqForall @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dfdac4de
debug: Cache hit: 'precond. (call subseqForall[B](l, lSub, p) (require 2/2))' VC for subseqForall @?:?...
info Verified: 93 / 982
debug:  - Checking cache: 'non-negative measure' VC for subseqForall @152:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7e2025a4
debug: Cache hit: 'non-negative measure' VC for subseqForall @152:15...
info Verified: 94 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaTailIsSubseqOfBiggerList' VC for subseqForall @155:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9975c47a
debug: Cache hit: 'body assertion: Inlined precondition of lemmaTailIsSubseqOfBiggerList' VC for subseqForall @155:9...
info Verified: 95 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of subseqForall' VC for subseqForall @158:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8881bff6
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of subseqForall' VC for subseqForall @158:9...
info Verified: 96 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of subseqForall' VC for subseqForall @158:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a88d84ec
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of subseqForall' VC for subseqForall @158:9...
info Verified: 97 / 982
debug:  - Checking cache: 'measure decreases' VC for subseqForall @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a7258bdd
debug: Cache hit: 'measure decreases' VC for subseqForall @?:?...
info Verified: 98 / 982
debug:  - Checking cache: 'postcondition' VC for subseqForall @158:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@97651062
debug: Cache hit: 'postcondition' VC for subseqForall @158:9...
info Verified: 99 / 982
debug:  - Checking cache: 'postcondition' VC for subseqForall @160:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f62743c5
debug: Cache hit: 'postcondition' VC for subseqForall @160:21...
info Verified: 100 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for subseqForall @153:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@391d7ad6
debug: Cache hit: 'body assertion: match exhaustiveness' VC for subseqForall @153:5...
info Verified: 101 / 982
debug:  - Checking cache: 'postcondition' VC for subseqForall @153:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@391d7ad6
debug: Cache hit: 'postcondition' VC for subseqForall @153:5...
info Verified: 102 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfBiggerList @662:29...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@637e0b25
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfBiggerList @662:29...
info Verified: 103 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaTailIsSubseqOfBiggerList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c7dd4a86
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaTailIsSubseqOfBiggerList @?:?...
info Verified: 104 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaTailIsSubseqOfBiggerList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d6b08914
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaTailIsSubseqOfBiggerList @?:?...
info Verified: 105 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfBiggerList @665:45...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3fa922d3
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfBiggerList @665:45...
info Verified: 106 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfBiggerList @665:45...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@aad11a00
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfBiggerList @665:45...
info Verified: 107 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaTailIsSubseqOfBiggerList @662:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e195edd2
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaTailIsSubseqOfBiggerList @662:7...
info Verified: 108 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaTailIsSubseqOfBiggerList @662:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@256460e3
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaTailIsSubseqOfBiggerList @662:7...
info Verified: 109 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTailIsSubseqOfBiggerList @662:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@23334f8e
debug: Cache hit: 'postcondition' VC for lemmaTailIsSubseqOfBiggerList @662:7...
info Verified: 110 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTailIsSubseqOfBiggerList @664:6...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4dbbf1ba
debug: Cache hit: 'postcondition' VC for lemmaTailIsSubseqOfBiggerList @664:6...
info Verified: 111 / 982
debug:  - Checking cache: 'precond. (call concatWithoutDuplicates[B](baseList, ...)' VC for concatWithoutDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@af8641b6
debug: Cache hit: 'precond. (call concatWithoutDuplicates[B](baseList, ...)' VC for concatWithoutDuplicates @?:?...
info Verified: 112 / 982
debug:  - Checking cache: 'precond. (call concatWithoutDuplicates[B](baseList, ...)' VC for concatWithoutDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@24531d29
debug: Cache hit: 'precond. (call concatWithoutDuplicates[B](baseList, ...)' VC for concatWithoutDuplicates @?:?...
info Verified: 113 / 982
debug:  - Checking cache: 'non-negative measure' VC for concatWithoutDuplicates @571:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@88e254c4
debug: Cache hit: 'non-negative measure' VC for concatWithoutDuplicates @571:15...
info Verified: 114 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of concatWithoutDuplicates' VC for concatWithoutDuplicates @575:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@af8641b6
debug: Cache hit: 'body assertion: Inlined precondition of concatWithoutDuplicates' VC for concatWithoutDuplicates @575:9...
info Verified: 115 / 982
debug:  - Checking cache: 'measure decreases' VC for concatWithoutDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b2dffba1
debug: Cache hit: 'measure decreases' VC for concatWithoutDuplicates @?:?...
info Verified: 116 / 982
debug:  - Checking cache: 'postcondition' VC for concatWithoutDuplicates @575:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e3eb502f
debug: Cache hit: 'postcondition' VC for concatWithoutDuplicates @575:9...
info Verified: 117 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of concatWithoutDuplicates' VC for concatWithoutDuplicates @577:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f23f0df7
debug: Cache hit: 'body assertion: Inlined precondition of concatWithoutDuplicates' VC for concatWithoutDuplicates @577:9...
info Verified: 118 / 982
debug:  - Checking cache: 'measure decreases' VC for concatWithoutDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@784cdcda
debug: Cache hit: 'measure decreases' VC for concatWithoutDuplicates @?:?...
info Verified: 119 / 982
debug:  - Checking cache: 'postcondition' VC for concatWithoutDuplicates @577:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b64a1d70
debug: Cache hit: 'postcondition' VC for concatWithoutDuplicates @577:9...
info Verified: 120 / 982
debug:  - Checking cache: 'postcondition' VC for concatWithoutDuplicates @580:51...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b4572660
debug: Cache hit: 'postcondition' VC for concatWithoutDuplicates @580:51...
info Verified: 121 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for concatWithoutDuplicates @573:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5bc60b
debug: Cache hit: 'body assertion: match exhaustiveness' VC for concatWithoutDuplicates @573:5...
info Verified: 122 / 982
debug:  - Checking cache: 'postcondition' VC for concatWithoutDuplicates @573:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9d3bb725
debug: Cache hit: 'postcondition' VC for concatWithoutDuplicates @573:5...
info Verified: 123 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @505:70...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3b050a2
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @505:70...
info Verified: 124 / 982
debug:  - Checking cache: 'precond. (call lemmaAddHeadSuffixToPrefixStillPrefix... (require 1/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ced6538c
debug: Cache hit: 'precond. (call lemmaAddHeadSuffixToPrefixStillPrefix... (require 1/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @?:?...
info Verified: 125 / 982
debug:  - Checking cache: 'precond. (call lemmaAddHeadSuffixToPrefixStillPrefix... (require 2/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c5030a47
debug: Cache hit: 'precond. (call lemmaAddHeadSuffixToPrefixStillPrefix... (require 2/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @?:?...
info Verified: 126 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, p) (require 1/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e17ec475
debug: Cache hit: 'precond. (call getSuffix[B](l, p) (require 1/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
info Verified: 127 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, p) (require 2/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e1f6a5e7
debug: Cache hit: 'precond. (call getSuffix[B](l, p) (require 2/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
info Verified: 128 / 982
debug:  - Checking cache: 'precond. (call head[B](getSuffix[B](l, p)))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d82031c0
debug: Cache hit: 'precond. (call head[B](getSuffix[B](l, p)))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
info Verified: 129 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, p) (require 1/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1e17cb35
debug: Cache hit: 'precond. (call getSuffix[B](l, p) (require 1/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
info Verified: 130 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, p) (require 2/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9fc86af0
debug: Cache hit: 'precond. (call getSuffix[B](l, p) (require 2/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
info Verified: 131 / 982
debug:  - Checking cache: 'precond. (call head[B](getSuffix[B](l, p)))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@993d1a02
debug: Cache hit: 'precond. (call head[B](getSuffix[B](l, p)))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
info Verified: 132 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, p) (require 1/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fe02eabb
debug: Cache hit: 'precond. (call getSuffix[B](l, p) (require 1/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
info Verified: 133 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](l, p) (require 2/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fe02eabb
debug: Cache hit: 'precond. (call getSuffix[B](l, p) (require 2/2))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
info Verified: 134 / 982
debug:  - Checking cache: 'precond. (call head[B](getSuffix[B](l, p)))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fe02eabb
debug: Cache hit: 'precond. (call head[B](getSuffix[B](l, p)))' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:34...
info Verified: 135 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:57...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b846649f
debug: Cache hit: 'non-negative measure' VC for lemmaAddHeadSuffixToPrefixStillPrefix @508:57...
info Verified: 136 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaAddHeadSuffixToPrefixStillPrefix' VC for lemmaAddHeadSuffixToPrefixStillPrefix @505:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a47ea79
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaAddHeadSuffixToPrefixStillPrefix' VC for lemmaAddHeadSuffixToPrefixStillPrefix @505:28...
info Verified: 137 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaAddHeadSuffixToPrefixStillPrefix' VC for lemmaAddHeadSuffixToPrefixStillPrefix @505:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3a140d1b
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaAddHeadSuffixToPrefixStillPrefix' VC for lemmaAddHeadSuffixToPrefixStillPrefix @505:28...
info Verified: 138 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaAddHeadSuffixToPrefixStillPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1262254f
debug: Cache hit: 'measure decreases' VC for lemmaAddHeadSuffixToPrefixStillPrefix @?:?...
info Verified: 139 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaAddHeadSuffixToPrefixStillPrefix @505:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b832ac04
debug: Cache hit: 'postcondition' VC for lemmaAddHeadSuffixToPrefixStillPrefix @505:28...
info Verified: 140 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaAddHeadSuffixToPrefixStillPrefix @506:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a2f89f
debug: Cache hit: 'postcondition' VC for lemmaAddHeadSuffixToPrefixStillPrefix @506:28...
info Verified: 141 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaAddHeadSuffixToPrefixStillPrefix @504:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fe02eabb
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaAddHeadSuffixToPrefixStillPrefix @504:5...
info Verified: 142 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaAddHeadSuffixToPrefixStillPrefix @504:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fe02eabb
debug: Cache hit: 'postcondition' VC for lemmaAddHeadSuffixToPrefixStillPrefix @504:5...
info Verified: 143 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsConcatPreserves[B]... (require 1/2))' VC for lemmaForallContainsConcatPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ca9f5ae2
debug: Cache hit: 'precond. (call lemmaForallContainsConcatPreserves[B]... (require 1/2))' VC for lemmaForallContainsConcatPreserves @?:?...
info Verified: 144 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsConcatPreserves[B]... (require 2/2))' VC for lemmaForallContainsConcatPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c8d4c46d
debug: Cache hit: 'precond. (call lemmaForallContainsConcatPreserves[B]... (require 2/2))' VC for lemmaForallContainsConcatPreserves @?:?...
info Verified: 145 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallContainsConcatPreserves @890:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4ed23d54
debug: Cache hit: 'non-negative measure' VC for lemmaForallContainsConcatPreserves @890:16...
info Verified: 146 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsConcatPreserves @885:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3677b2bd
debug: Cache hit: 'postcondition' VC for lemmaForallContainsConcatPreserves @885:21...
info Verified: 147 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsConcatPreserves' VC for lemmaForallContainsConcatPreserves @887:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1dbe1118
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsConcatPreserves' VC for lemmaForallContainsConcatPreserves @887:9...
info Verified: 148 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsConcatPreserves' VC for lemmaForallContainsConcatPreserves @887:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@34f78f8e
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsConcatPreserves' VC for lemmaForallContainsConcatPreserves @887:9...
info Verified: 149 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallContainsConcatPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@363b3416
debug: Cache hit: 'measure decreases' VC for lemmaForallContainsConcatPreserves @?:?...
info Verified: 150 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsConcatPreserves @887:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ac343949
debug: Cache hit: 'postcondition' VC for lemmaForallContainsConcatPreserves @887:9...
info Verified: 151 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallContainsConcatPreserves @884:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b7865720
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallContainsConcatPreserves @884:5...
info Verified: 152 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsConcatPreserves @884:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b7865720
debug: Cache hit: 'postcondition' VC for lemmaForallContainsConcatPreserves @884:5...
info Verified: 153 / 982
debug:  - Checking cache: 'postcondition' VC for noDuplicateConcatNotContainedPreserves @1018:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@38091e13
debug: Cache hit: 'postcondition' VC for noDuplicateConcatNotContainedPreserves @1018:7...
info Verified: 154 / 982
debug:  - Checking cache: 'precond. (call lemmaListNotContainsThenFilterContain... (require 1/2))' VC for lemmaListNotContainsThenFilterContainsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@92e908ec
debug: Cache hit: 'precond. (call lemmaListNotContainsThenFilterContain... (require 1/2))' VC for lemmaListNotContainsThenFilterContainsEmpty @?:?...
info Verified: 155 / 982
debug:  - Checking cache: 'precond. (call lemmaListNotContainsThenFilterContain... (require 2/2))' VC for lemmaListNotContainsThenFilterContainsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@87542795
debug: Cache hit: 'precond. (call lemmaListNotContainsThenFilterContain... (require 2/2))' VC for lemmaListNotContainsThenFilterContainsEmpty @?:?...
info Verified: 156 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaListNotContainsThenFilterContainsEmpty @1167:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9a609867
debug: Cache hit: 'non-negative measure' VC for lemmaListNotContainsThenFilterContainsEmpty @1167:15...
info Verified: 157 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaListNotContainsThenFilterContainsEmpty' VC for lemmaListNotContainsThenFilterContainsEmpty @1170:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bcc1867a
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaListNotContainsThenFilterContainsEmpty' VC for lemmaListNotContainsThenFilterContainsEmpty @1170:9...
info Verified: 158 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaListNotContainsThenFilterContainsEmpty' VC for lemmaListNotContainsThenFilterContainsEmpty @1170:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@87542795
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaListNotContainsThenFilterContainsEmpty' VC for lemmaListNotContainsThenFilterContainsEmpty @1170:9...
info Verified: 159 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaListNotContainsThenFilterContainsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1af0f4b2
debug: Cache hit: 'measure decreases' VC for lemmaListNotContainsThenFilterContainsEmpty @?:?...
info Verified: 160 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaListNotContainsThenFilterContainsEmpty @1170:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5f10ad8
debug: Cache hit: 'postcondition' VC for lemmaListNotContainsThenFilterContainsEmpty @1170:9...
info Verified: 161 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaListNotContainsThenFilterContainsEmpty @1172:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@af58263e
debug: Cache hit: 'postcondition' VC for lemmaListNotContainsThenFilterContainsEmpty @1172:21...
info Verified: 162 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaListNotContainsThenFilterContainsEmpty @1168:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7cd69bf8
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaListNotContainsThenFilterContainsEmpty @1168:5...
info Verified: 163 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaListNotContainsThenFilterContainsEmpty @1168:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7cd69bf8
debug: Cache hit: 'postcondition' VC for lemmaListNotContainsThenFilterContainsEmpty @1168:5...
info Verified: 164 / 982
debug:  - Checking cache: 'precond. (call tail[B](tot))' VC for lemmaConcatAssociativity @321:67...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fa81affc
debug: Cache hit: 'precond. (call tail[B](tot))' VC for lemmaConcatAssociativity @321:67...
info Verified: 165 / 982
debug:  - Checking cache: 'precond. (call lemmaConcatAssociativity[B](l1, elmt,...)' VC for lemmaConcatAssociativity @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b65ed80
debug: Cache hit: 'precond. (call lemmaConcatAssociativity[B](l1, elmt,...)' VC for lemmaConcatAssociativity @?:?...
info Verified: 166 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaConcatAssociativity @319:12...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2cb0307
debug: Cache hit: 'body assertion' VC for lemmaConcatAssociativity @319:12...
info Verified: 167 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaConcatAssociativity @324:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c6ae9f1b
debug: Cache hit: 'non-negative measure' VC for lemmaConcatAssociativity @324:15...
info Verified: 168 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaConcatAssociativity' VC for lemmaConcatAssociativity @321:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7b663d9c
debug: Cache hit: 'body assertion: Inlined precondition of lemmaConcatAssociativity' VC for lemmaConcatAssociativity @321:28...
info Verified: 169 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaConcatAssociativity @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9836b2e0
debug: Cache hit: 'measure decreases' VC for lemmaConcatAssociativity @?:?...
info Verified: 170 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatAssociativity @321:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2e1a5fb7
debug: Cache hit: 'postcondition' VC for lemmaConcatAssociativity @321:28...
info Verified: 171 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatAssociativity @322:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5a9a38d5
debug: Cache hit: 'postcondition' VC for lemmaConcatAssociativity @322:28...
info Verified: 172 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaConcatAssociativity @320:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@36c58f63
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaConcatAssociativity @320:5...
info Verified: 173 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatAssociativity @320:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@36c58f63
debug: Cache hit: 'postcondition' VC for lemmaConcatAssociativity @320:5...
info Verified: 174 / 982
debug:  - Checking cache: 'precond. (call lemmaConsecutiveSubseqThenSubseq[B](l...)' VC for lemmaConsecutiveSubseqThenSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fee5fef4
debug: Cache hit: 'precond. (call lemmaConsecutiveSubseqThenSubseq[B](l...)' VC for lemmaConsecutiveSubseqThenSubseq @?:?...
info Verified: 175 / 982
debug:  - Checking cache: 'precond. (call lemmaConsecutiveSubseqThenSubseq[B](l...)' VC for lemmaConsecutiveSubseqThenSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@616c451f
debug: Cache hit: 'precond. (call lemmaConsecutiveSubseqThenSubseq[B](l...)' VC for lemmaConsecutiveSubseqThenSubseq @?:?...
info Verified: 176 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaConsecutiveSubseqThenSubseq @167:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9ab5c4d8
debug: Cache hit: 'non-negative measure' VC for lemmaConsecutiveSubseqThenSubseq @167:15...
info Verified: 177 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaConsecutiveSubseqThenSubseq' VC for lemmaConsecutiveSubseqThenSubseq @170:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c10b2367
debug: Cache hit: 'body assertion: Inlined precondition of lemmaConsecutiveSubseqThenSubseq' VC for lemmaConsecutiveSubseqThenSubseq @170:9...
info Verified: 178 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaConsecutiveSubseqThenSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a60550a3
debug: Cache hit: 'measure decreases' VC for lemmaConsecutiveSubseqThenSubseq @?:?...
info Verified: 179 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConsecutiveSubseqThenSubseq @170:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ff88a0b8
debug: Cache hit: 'postcondition' VC for lemmaConsecutiveSubseqThenSubseq @170:9...
info Verified: 180 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaConsecutiveSubseqThenSubseq' VC for lemmaConsecutiveSubseqThenSubseq @172:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@45de8da0
debug: Cache hit: 'body assertion: Inlined precondition of lemmaConsecutiveSubseqThenSubseq' VC for lemmaConsecutiveSubseqThenSubseq @172:9...
info Verified: 181 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaConsecutiveSubseqThenSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c47ec955
debug: Cache hit: 'measure decreases' VC for lemmaConsecutiveSubseqThenSubseq @?:?...
info Verified: 182 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConsecutiveSubseqThenSubseq @172:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@98c497a
debug: Cache hit: 'postcondition' VC for lemmaConsecutiveSubseqThenSubseq @172:9...
info Verified: 183 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConsecutiveSubseqThenSubseq @173:17...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@625f3780
debug: Cache hit: 'postcondition' VC for lemmaConsecutiveSubseqThenSubseq @173:17...
info Verified: 184 / 982
debug:  - Checking cache: 'precond. (call tail[B](p2))' VC for lemmaIsPrefixSameLengthThenSameList @425:49...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b5d93dba
debug: Cache hit: 'precond. (call tail[B](p2))' VC for lemmaIsPrefixSameLengthThenSameList @425:49...
info Verified: 185 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaIsPrefixSameLengthThenSameList @425:58...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e369fc78
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaIsPrefixSameLengthThenSameList @425:58...
info Verified: 186 / 982
debug:  - Checking cache: 'precond. (call lemmaIsPrefixSameLengthThenSameList[B... (require 1/3))' VC for lemmaIsPrefixSameLengthThenSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5f4a7b37
debug: Cache hit: 'precond. (call lemmaIsPrefixSameLengthThenSameList[B... (require 1/3))' VC for lemmaIsPrefixSameLengthThenSameList @?:?...
info Verified: 187 / 982
debug:  - Checking cache: 'precond. (call lemmaIsPrefixSameLengthThenSameList[B... (require 2/3))' VC for lemmaIsPrefixSameLengthThenSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bc4a9c7c
debug: Cache hit: 'precond. (call lemmaIsPrefixSameLengthThenSameList[B... (require 2/3))' VC for lemmaIsPrefixSameLengthThenSameList @?:?...
info Verified: 188 / 982
debug:  - Checking cache: 'precond. (call lemmaIsPrefixSameLengthThenSameList[B... (require 3/3))' VC for lemmaIsPrefixSameLengthThenSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5ab5f74f
debug: Cache hit: 'precond. (call lemmaIsPrefixSameLengthThenSameList[B... (require 3/3))' VC for lemmaIsPrefixSameLengthThenSameList @?:?...
info Verified: 189 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaIsPrefixSameLengthThenSameList @425:58...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@446545f5
debug: Cache hit: 'non-negative measure' VC for lemmaIsPrefixSameLengthThenSameList @425:58...
info Verified: 190 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/3) of lemmaIsPrefixSameLengthThenSameList' VC for lemmaIsPrefixSameLengthThenSameList @425:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b173bccf
debug: Cache hit: 'body assertion: Inlined precondition (1/3) of lemmaIsPrefixSameLengthThenSameList' VC for lemmaIsPrefixSameLengthThenSameList @425:9...
info Verified: 191 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/3) of lemmaIsPrefixSameLengthThenSameList' VC for lemmaIsPrefixSameLengthThenSameList @425:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8c1f9e3e
debug: Cache hit: 'body assertion: Inlined precondition (2/3) of lemmaIsPrefixSameLengthThenSameList' VC for lemmaIsPrefixSameLengthThenSameList @425:9...
info Verified: 192 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/3) of lemmaIsPrefixSameLengthThenSameList' VC for lemmaIsPrefixSameLengthThenSameList @425:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2d284b53
debug: Cache hit: 'body assertion: Inlined precondition (3/3) of lemmaIsPrefixSameLengthThenSameList' VC for lemmaIsPrefixSameLengthThenSameList @425:9...
info Verified: 193 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaIsPrefixSameLengthThenSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2cacce32
debug: Cache hit: 'measure decreases' VC for lemmaIsPrefixSameLengthThenSameList @?:?...
info Verified: 194 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsPrefixSameLengthThenSameList @425:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2fc94775
debug: Cache hit: 'postcondition' VC for lemmaIsPrefixSameLengthThenSameList @425:9...
info Verified: 195 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsPrefixSameLengthThenSameList @426:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7e3eccd1
debug: Cache hit: 'postcondition' VC for lemmaIsPrefixSameLengthThenSameList @426:21...
info Verified: 196 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaIsPrefixSameLengthThenSameList @423:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d2fe3291
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaIsPrefixSameLengthThenSameList @423:5...
info Verified: 197 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsPrefixSameLengthThenSameList @423:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d2fe3291
debug: Cache hit: 'postcondition' VC for lemmaIsPrefixSameLengthThenSameList @423:5...
info Verified: 198 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsThenForEqualLists @797:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@80486a04
debug: Cache hit: 'postcondition' VC for lemmaForallContainsThenForEqualLists @797:7...
info Verified: 199 / 982
debug:  - Checking cache: 'precond. (call notContainsAddNotEqThenNotContains[B]... (require 1/2))' VC for notContainsAddNotEqThenNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1853696a
debug: Cache hit: 'precond. (call notContainsAddNotEqThenNotContains[B]... (require 1/2))' VC for notContainsAddNotEqThenNotContains @?:?...
info Verified: 200 / 982
debug:  - Checking cache: 'precond. (call notContainsAddNotEqThenNotContains[B]... (require 2/2))' VC for notContainsAddNotEqThenNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ae8298f8
debug: Cache hit: 'precond. (call notContainsAddNotEqThenNotContains[B]... (require 2/2))' VC for notContainsAddNotEqThenNotContains @?:?...
info Verified: 201 / 982
debug:  - Checking cache: 'non-negative measure' VC for notContainsAddNotEqThenNotContains @1127:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8d6f01a2
debug: Cache hit: 'non-negative measure' VC for notContainsAddNotEqThenNotContains @1127:15...
info Verified: 202 / 982
debug:  - Checking cache: 'postcondition' VC for notContainsAddNotEqThenNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1377a430
debug: Cache hit: 'postcondition' VC for notContainsAddNotEqThenNotContains @?:?...
info Verified: 203 / 982
debug:  - Checking cache: 'measure decreases' VC for notContainsAddNotEqThenNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4106e710
debug: Cache hit: 'measure decreases' VC for notContainsAddNotEqThenNotContains @?:?...
info Verified: 204 / 982
debug:  - Checking cache: 'postcondition' VC for notContainsAddNotEqThenNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@149043e7
debug: Cache hit: 'postcondition' VC for notContainsAddNotEqThenNotContains @?:?...
info Verified: 205 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for notContainsAddNotEqThenNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7cd69bf8
debug: Cache hit: 'body assertion: match exhaustiveness' VC for notContainsAddNotEqThenNotContains @?:?...
info Verified: 206 / 982
debug:  - Checking cache: 'postcondition' VC for notContainsAddNotEqThenNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7cd69bf8
debug: Cache hit: 'postcondition' VC for notContainsAddNotEqThenNotContains @?:?...
info Verified: 207 / 982
debug:  - Checking cache: 'precond. (call tail[B](p2))' VC for lemmaSamePrefixThenSameSuffix @479:47...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3c5255d0
debug: Cache hit: 'precond. (call tail[B](p2))' VC for lemmaSamePrefixThenSameSuffix @479:47...
info Verified: 208 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaSamePrefixThenSameSuffix @479:60...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@69e3148e
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaSamePrefixThenSameSuffix @479:60...
info Verified: 209 / 982
debug:  - Checking cache: 'precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 1/5))' VC for lemmaSamePrefixThenSameSuffix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@58af7d7f
debug: Cache hit: 'precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 1/5))' VC for lemmaSamePrefixThenSameSuffix @?:?...
info Verified: 210 / 982
debug:  - Checking cache: 'precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 2/5))' VC for lemmaSamePrefixThenSameSuffix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4106bb02
debug: Cache hit: 'precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 2/5))' VC for lemmaSamePrefixThenSameSuffix @?:?...
info Verified: 211 / 982
debug:  - Checking cache: 'precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 3/5))' VC for lemmaSamePrefixThenSameSuffix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d6a09d15
debug: Cache hit: 'precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 3/5))' VC for lemmaSamePrefixThenSameSuffix @?:?...
info Verified: 212 / 982
debug:  - Checking cache: 'precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 4/5))' VC for lemmaSamePrefixThenSameSuffix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ca0dfde0
debug: Cache hit: 'precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 4/5))' VC for lemmaSamePrefixThenSameSuffix @?:?...
info Verified: 213 / 982
debug:  - Checking cache: 'precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 5/5))' VC for lemmaSamePrefixThenSameSuffix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@83f54a09
debug: Cache hit: 'precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 5/5))' VC for lemmaSamePrefixThenSameSuffix @?:?...
info Verified: 214 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaSamePrefixThenSameSuffix @479:60...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@26864fca
debug: Cache hit: 'non-negative measure' VC for lemmaSamePrefixThenSameSuffix @479:60...
info Verified: 215 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/5) of lemmaSamePrefixThenSameSuffix' VC for lemmaSamePrefixThenSameSuffix @479:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7f2a2b24
debug: Cache hit: 'body assertion: Inlined precondition (1/5) of lemmaSamePrefixThenSameSuffix' VC for lemmaSamePrefixThenSameSuffix @479:9...
info Verified: 216 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/5) of lemmaSamePrefixThenSameSuffix' VC for lemmaSamePrefixThenSameSuffix @479:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4b4c6a8
debug: Cache hit: 'body assertion: Inlined precondition (2/5) of lemmaSamePrefixThenSameSuffix' VC for lemmaSamePrefixThenSameSuffix @479:9...
info Verified: 217 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/5) of lemmaSamePrefixThenSameSuffix' VC for lemmaSamePrefixThenSameSuffix @479:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1b52a4a1
debug: Cache hit: 'body assertion: Inlined precondition (3/5) of lemmaSamePrefixThenSameSuffix' VC for lemmaSamePrefixThenSameSuffix @479:9...
info Verified: 218 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (4/5) of lemmaSamePrefixThenSameSuffix' VC for lemmaSamePrefixThenSameSuffix @479:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2c7a81ce
debug: Cache hit: 'body assertion: Inlined precondition (4/5) of lemmaSamePrefixThenSameSuffix' VC for lemmaSamePrefixThenSameSuffix @479:9...
info Verified: 219 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (5/5) of lemmaSamePrefixThenSameSuffix' VC for lemmaSamePrefixThenSameSuffix @479:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d280b007
debug: Cache hit: 'body assertion: Inlined precondition (5/5) of lemmaSamePrefixThenSameSuffix' VC for lemmaSamePrefixThenSameSuffix @479:9...
info Verified: 220 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSamePrefixThenSameSuffix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1d6b86c6
debug: Cache hit: 'measure decreases' VC for lemmaSamePrefixThenSameSuffix @?:?...
info Verified: 221 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSamePrefixThenSameSuffix @479:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bfd1d12e
debug: Cache hit: 'postcondition' VC for lemmaSamePrefixThenSameSuffix @479:9...
info Verified: 222 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSamePrefixThenSameSuffix @480:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b0bce337
debug: Cache hit: 'postcondition' VC for lemmaSamePrefixThenSameSuffix @480:21...
info Verified: 223 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaSamePrefixThenSameSuffix @477:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@47087efa
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaSamePrefixThenSameSuffix @477:5...
info Verified: 224 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSamePrefixThenSameSuffix @477:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@47087efa
debug: Cache hit: 'postcondition' VC for lemmaSamePrefixThenSameSuffix @477:5...
info Verified: 225 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainedNoDupThenConca... (require 1/3))' VC for lemmaForallNotContainedNoDupThenConcatNoDup @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a40859db
debug: Cache hit: 'precond. (call lemmaForallNotContainedNoDupThenConca... (require 1/3))' VC for lemmaForallNotContainedNoDupThenConcatNoDup @?:?...
info Verified: 226 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainedNoDupThenConca... (require 2/3))' VC for lemmaForallNotContainedNoDupThenConcatNoDup @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@43b3a545
debug: Cache hit: 'precond. (call lemmaForallNotContainedNoDupThenConca... (require 2/3))' VC for lemmaForallNotContainedNoDupThenConcatNoDup @?:?...
info Verified: 227 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainedNoDupThenConca... (require 3/3))' VC for lemmaForallNotContainedNoDupThenConcatNoDup @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@17b728db
debug: Cache hit: 'precond. (call lemmaForallNotContainedNoDupThenConca... (require 3/3))' VC for lemmaForallNotContainedNoDupThenConcatNoDup @?:?...
info Verified: 228 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallNotContainedNoDupThenConcatNoDup @976:62...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a5bb1f0
debug: Cache hit: 'non-negative measure' VC for lemmaForallNotContainedNoDupThenConcatNoDup @976:62...
info Verified: 229 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainedNoDupThenConcatNoDup @981:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7ba6f0c4
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainedNoDupThenConcatNoDup @981:15...
info Verified: 230 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallNotContainedNoDupThenConcatNoDup @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b99b2fea
debug: Cache hit: 'measure decreases' VC for lemmaForallNotContainedNoDupThenConcatNoDup @?:?...
info Verified: 231 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainedNoDupThenConcatNoDup @981:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e8750b45
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainedNoDupThenConcatNoDup @981:15...
info Verified: 232 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainedNoDupThenConcatNoDup @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2acdcfd
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainedNoDupThenConcatNoDup @?:?...
info Verified: 233 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainedNoDupThenConcatNoDup @981:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2acdcfd
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainedNoDupThenConcatNoDup @981:15...
info Verified: 234 / 982
debug:  - Checking cache: 'precond. (call getIndex[B](l, e1))' VC for lemmaSameIndexThenSameElement @221:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@58b0ff5a
debug: Cache hit: 'precond. (call getIndex[B](l, e1))' VC for lemmaSameIndexThenSameElement @221:13...
info Verified: 235 / 982
debug:  - Checking cache: 'precond. (call getIndex[B](l, e2))' VC for lemmaSameIndexThenSameElement @221:32...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@86a1cad8
debug: Cache hit: 'precond. (call getIndex[B](l, e2))' VC for lemmaSameIndexThenSameElement @221:32...
info Verified: 236 / 982
debug:  - Checking cache: 'precond. (call getIndex[B](l, e1))' VC for lemmaSameIndexThenSameElement @224:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6c90cbdc
debug: Cache hit: 'precond. (call getIndex[B](l, e1))' VC for lemmaSameIndexThenSameElement @224:9...
info Verified: 237 / 982
debug:  - Checking cache: 'precond. (call head[B](l))' VC for lemmaSameIndexThenSameElement @225:14...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a54242f1
debug: Cache hit: 'precond. (call head[B](l))' VC for lemmaSameIndexThenSameElement @225:14...
info Verified: 238 / 982
debug:  - Checking cache: 'precond. (call head[B](l))' VC for lemmaSameIndexThenSameElement @226:14...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3aa6e82b
debug: Cache hit: 'precond. (call head[B](l))' VC for lemmaSameIndexThenSameElement @226:14...
info Verified: 239 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaSameIndexThenSameElement @229:37...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fe73a74b
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaSameIndexThenSameElement @229:37...
info Verified: 240 / 982
debug:  - Checking cache: 'precond. (call lemmaSameIndexThenSameElement[B](l, e... (require 1/3))' VC for lemmaSameIndexThenSameElement @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@444546fb
debug: Cache hit: 'precond. (call lemmaSameIndexThenSameElement[B](l, e... (require 1/3))' VC for lemmaSameIndexThenSameElement @?:?...
info Verified: 241 / 982
debug:  - Checking cache: 'precond. (call lemmaSameIndexThenSameElement[B](l, e... (require 2/3))' VC for lemmaSameIndexThenSameElement @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@72361279
debug: Cache hit: 'precond. (call lemmaSameIndexThenSameElement[B](l, e... (require 2/3))' VC for lemmaSameIndexThenSameElement @?:?...
info Verified: 242 / 982
debug:  - Checking cache: 'precond. (call lemmaSameIndexThenSameElement[B](l, e... (require 3/3))' VC for lemmaSameIndexThenSameElement @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e998f3e4
debug: Cache hit: 'precond. (call lemmaSameIndexThenSameElement[B](l, e... (require 3/3))' VC for lemmaSameIndexThenSameElement @?:?...
info Verified: 243 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaSameIndexThenSameElement @225:14...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4539edbc
debug: Cache hit: 'body assertion' VC for lemmaSameIndexThenSameElement @225:14...
info Verified: 244 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaSameIndexThenSameElement @226:14...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d8fb6fca
debug: Cache hit: 'body assertion' VC for lemmaSameIndexThenSameElement @226:14...
info Verified: 245 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaSameIndexThenSameElement @227:14...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cf3ff883
debug: Cache hit: 'body assertion' VC for lemmaSameIndexThenSameElement @227:14...
info Verified: 246 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaSameIndexThenSameElement @229:37...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ba1787e7
debug: Cache hit: 'non-negative measure' VC for lemmaSameIndexThenSameElement @229:37...
info Verified: 247 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSameIndexThenSameElement @225:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@89930cdf
debug: Cache hit: 'postcondition' VC for lemmaSameIndexThenSameElement @225:7...
info Verified: 248 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/3) of lemmaSameIndexThenSameElement' VC for lemmaSameIndexThenSameElement @229:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@374e05dc
debug: Cache hit: 'body assertion: Inlined precondition (1/3) of lemmaSameIndexThenSameElement' VC for lemmaSameIndexThenSameElement @229:7...
info Verified: 249 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/3) of lemmaSameIndexThenSameElement' VC for lemmaSameIndexThenSameElement @229:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5328b9e9
debug: Cache hit: 'body assertion: Inlined precondition (2/3) of lemmaSameIndexThenSameElement' VC for lemmaSameIndexThenSameElement @229:7...
info Verified: 250 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/3) of lemmaSameIndexThenSameElement' VC for lemmaSameIndexThenSameElement @229:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fa9a2423
debug: Cache hit: 'body assertion: Inlined precondition (3/3) of lemmaSameIndexThenSameElement' VC for lemmaSameIndexThenSameElement @229:7...
info Verified: 251 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSameIndexThenSameElement @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3109a2de
debug: Cache hit: 'measure decreases' VC for lemmaSameIndexThenSameElement @?:?...
info Verified: 252 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSameIndexThenSameElement @229:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@310e96f
debug: Cache hit: 'postcondition' VC for lemmaSameIndexThenSameElement @229:7...
info Verified: 253 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastPrefixDecreasesSize @409:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ea1171e4
debug: Cache hit: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastPrefixDecreasesSize @409:15...
info Verified: 254 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastPrefixDecreasesSize @407:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@284d1bb0
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastPrefixDecreasesSize @407:7...
info Verified: 255 / 982
debug:  - Checking cache: 'precond. (call tail[B](tot))' VC for lemmaMoveElementToOtherListKeepsConcatEq @535:65...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2a0ebc8a
debug: Cache hit: 'precond. (call tail[B](tot))' VC for lemmaMoveElementToOtherListKeepsConcatEq @535:65...
info Verified: 256 / 982
debug:  - Checking cache: 'precond. (call lemmaMoveElementToOtherListKeepsConca...)' VC for lemmaMoveElementToOtherListKeepsConcatEq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c4997c00
debug: Cache hit: 'precond. (call lemmaMoveElementToOtherListKeepsConca...)' VC for lemmaMoveElementToOtherListKeepsConcatEq @?:?...
info Verified: 257 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaMoveElementToOtherListKeepsConcatEq @539:43...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@971f1db1
debug: Cache hit: 'non-negative measure' VC for lemmaMoveElementToOtherListKeepsConcatEq @539:43...
info Verified: 258 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaMoveElementToOtherListKeepsConcatEq' VC for lemmaMoveElementToOtherListKeepsConcatEq @535:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a3171f3
debug: Cache hit: 'body assertion: Inlined precondition of lemmaMoveElementToOtherListKeepsConcatEq' VC for lemmaMoveElementToOtherListKeepsConcatEq @535:9...
info Verified: 259 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaMoveElementToOtherListKeepsConcatEq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2c1c25bf
debug: Cache hit: 'measure decreases' VC for lemmaMoveElementToOtherListKeepsConcatEq @?:?...
info Verified: 260 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaMoveElementToOtherListKeepsConcatEq @535:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@45dd9302
debug: Cache hit: 'postcondition' VC for lemmaMoveElementToOtherListKeepsConcatEq @535:9...
info Verified: 261 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaMoveElementToOtherListKeepsConcatEq @536:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2176e8de
debug: Cache hit: 'postcondition' VC for lemmaMoveElementToOtherListKeepsConcatEq @536:21...
info Verified: 262 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaMoveElementToOtherListKeepsConcatEq @533:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d021bcf1
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaMoveElementToOtherListKeepsConcatEq @533:5...
info Verified: 263 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaMoveElementToOtherListKeepsConcatEq @533:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d021bcf1
debug: Cache hit: 'postcondition' VC for lemmaMoveElementToOtherListKeepsConcatEq @533:5...
info Verified: 264 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @585:35...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d08e397f
debug: Cache hit: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @585:35...
info Verified: 265 / 982
debug:  - Checking cache: 'precond. (call lemmaIsSuffixThenTailIsSuffix[B](l, s...)' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3951f6ef
debug: Cache hit: 'precond. (call lemmaIsSuffixThenTailIsSuffix[B](l, s...)' VC for removeDuplicates @?:?...
info Verified: 266 / 982
debug:  - Checking cache: 'precond. (call lemmaRemovingHeadOfSuffixThenGetPrefi...)' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@317819ad
debug: Cache hit: 'precond. (call lemmaRemovingHeadOfSuffixThenGetPrefi...)' VC for removeDuplicates @?:?...
info Verified: 267 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @593:41...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f7103b09
debug: Cache hit: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @593:41...
info Verified: 268 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @594:36...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a2dbd3a6
debug: Cache hit: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @594:36...
info Verified: 269 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @594:62...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f632541a
debug: Cache hit: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @594:62...
info Verified: 270 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@78335ef9
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for removeDuplicates @?:?...
info Verified: 271 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@358d187
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for removeDuplicates @?:?...
info Verified: 272 / 982
debug:  - Checking cache: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 1/4))' VC for removeDuplicates @596:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f2492344
debug: Cache hit: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 1/4))' VC for removeDuplicates @596:9...
info Verified: 273 / 982
debug:  - Checking cache: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 2/4))' VC for removeDuplicates @596:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@65fe3234
debug: Cache hit: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 2/4))' VC for removeDuplicates @596:9...
info Verified: 274 / 982
debug:  - Checking cache: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 3/4))' VC for removeDuplicates @596:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1ef0478a
debug: Cache hit: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 3/4))' VC for removeDuplicates @596:9...
info Verified: 275 / 982
debug:  - Checking cache: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 4/4))' VC for removeDuplicates @596:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d00c4243
debug: Cache hit: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 4/4))' VC for removeDuplicates @596:9...
info Verified: 276 / 982
debug:  - Checking cache: 'precond. (call lemmaIsSuffixThenTailIsSuffix[B](l, s...)' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9f209c55
debug: Cache hit: 'precond. (call lemmaIsSuffixThenTailIsSuffix[B](l, s...)' VC for removeDuplicates @?:?...
info Verified: 277 / 982
debug:  - Checking cache: 'precond. (call lemmaRemovingHeadOfSuffixThenGetPrefi...)' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@48ebf187
debug: Cache hit: 'precond. (call lemmaRemovingHeadOfSuffixThenGetPrefi...)' VC for removeDuplicates @?:?...
info Verified: 278 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @601:41...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@207baef
debug: Cache hit: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @601:41...
info Verified: 279 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @602:36...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@64e1ec6b
debug: Cache hit: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @602:36...
info Verified: 280 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @602:62...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7b9c80b5
debug: Cache hit: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @602:62...
info Verified: 281 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@419a2154
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for removeDuplicates @?:?...
info Verified: 282 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ccbf93e2
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for removeDuplicates @?:?...
info Verified: 283 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @604:46...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b785897e
debug: Cache hit: 'precond. (call getPrefix[B](totList, list))' VC for removeDuplicates @604:46...
info Verified: 284 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1d4ab067
debug: Cache hit: 'precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)' VC for removeDuplicates @?:?...
info Verified: 285 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsPreservedAddNew... (require 1/2))' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9d9856e2
debug: Cache hit: 'precond. (call lemmaForallNotContainsPreservedAddNew... (require 1/2))' VC for removeDuplicates @?:?...
info Verified: 286 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsPreservedAddNew... (require 2/2))' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@add8394e
debug: Cache hit: 'precond. (call lemmaForallNotContainsPreservedAddNew... (require 2/2))' VC for removeDuplicates @?:?...
info Verified: 287 / 982
debug:  - Checking cache: 'precond. (call noDuplicateConcatListNotContainedPres... (require 1/4))' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@55239680
debug: Cache hit: 'precond. (call noDuplicateConcatListNotContainedPres... (require 1/4))' VC for removeDuplicates @?:?...
info Verified: 288 / 982
debug:  - Checking cache: 'precond. (call noDuplicateConcatListNotContainedPres... (require 2/4))' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2b704bb0
debug: Cache hit: 'precond. (call noDuplicateConcatListNotContainedPres... (require 2/4))' VC for removeDuplicates @?:?...
info Verified: 289 / 982
debug:  - Checking cache: 'precond. (call noDuplicateConcatListNotContainedPres... (require 3/4))' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7e5bbea2
debug: Cache hit: 'precond. (call noDuplicateConcatListNotContainedPres... (require 3/4))' VC for removeDuplicates @?:?...
info Verified: 290 / 982
debug:  - Checking cache: 'precond. (call noDuplicateConcatListNotContainedPres... (require 4/4))' VC for removeDuplicates @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1646d258
debug: Cache hit: 'precond. (call noDuplicateConcatListNotContainedPres... (require 4/4))' VC for removeDuplicates @?:?...
info Verified: 291 / 982
debug:  - Checking cache: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 1/4))' VC for removeDuplicates @610:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8eb866e5
debug: Cache hit: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 1/4))' VC for removeDuplicates @610:9...
info Verified: 292 / 982
debug:  - Checking cache: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 2/4))' VC for removeDuplicates @610:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@65aacfeb
debug: Cache hit: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 2/4))' VC for removeDuplicates @610:9...
info Verified: 293 / 982
debug:  - Checking cache: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 3/4))' VC for removeDuplicates @610:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ad50f761
debug: Cache hit: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 3/4))' VC for removeDuplicates @610:9...
info Verified: 294 / 982
debug:  - Checking cache: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 4/4))' VC for removeDuplicates @610:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f4c526e
debug: Cache hit: 'precond. (call removeDuplicates[B](totList, (scrut.t... (require 4/4))' VC for removeDuplicates @610:9...
info Verified: 295 / 982
debug:  - Checking cache: 'non-negative measure' VC for removeDuplicates @614:100...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@531b6f9c
debug: Cache hit: 'non-negative measure' VC for removeDuplicates @614:100...
info Verified: 296 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaIsSuffixThenTailIsSuffix' VC for removeDuplicates @591:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3951f6ef
debug: Cache hit: 'body assertion: Inlined precondition of lemmaIsSuffixThenTailIsSuffix' VC for removeDuplicates @591:9...
info Verified: 297 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaRemovingHeadOfSuffixThenGetPrefixLonger' VC for removeDuplicates @592:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dc55078
debug: Cache hit: 'body assertion: Inlined precondition of lemmaRemovingHeadOfSuffixThenGetPrefixLonger' VC for removeDuplicates @592:9...
info Verified: 298 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for removeDuplicates @594:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@820c3e7c
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for removeDuplicates @594:9...
info Verified: 299 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for removeDuplicates @594:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@410a3da8
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for removeDuplicates @594:9...
info Verified: 300 / 982
debug:  - Checking cache: 'measure decreases' VC for removeDuplicates @596:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@93e7fa17
debug: Cache hit: 'measure decreases' VC for removeDuplicates @596:9...
info Verified: 301 / 982
debug:  - Checking cache: 'postcondition' VC for removeDuplicates @596:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d8343740
debug: Cache hit: 'postcondition' VC for removeDuplicates @596:9...
info Verified: 302 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaIsSuffixThenTailIsSuffix' VC for removeDuplicates @599:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9f209c55
debug: Cache hit: 'body assertion: Inlined precondition of lemmaIsSuffixThenTailIsSuffix' VC for removeDuplicates @599:9...
info Verified: 303 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaRemovingHeadOfSuffixThenGetPrefixLonger' VC for removeDuplicates @600:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@87da5e53
debug: Cache hit: 'body assertion: Inlined precondition of lemmaRemovingHeadOfSuffixThenGetPrefixLonger' VC for removeDuplicates @600:9...
info Verified: 304 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for removeDuplicates @602:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6afa1e62
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for removeDuplicates @602:9...
info Verified: 305 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for removeDuplicates @602:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f9395b2d
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for removeDuplicates @602:9...
info Verified: 306 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves' VC for removeDuplicates @604:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6d5134dc
debug: Cache hit: 'body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves' VC for removeDuplicates @604:9...
info Verified: 307 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaForallNotContainsPreservedAddNewElmtInRefList' VC for removeDuplicates @607:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e34848a0
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaForallNotContainsPreservedAddNewElmtInRefList' VC for removeDuplicates @607:9...
info Verified: 308 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaForallNotContainsPreservedAddNewElmtInRefList' VC for removeDuplicates @607:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6609f972
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaForallNotContainsPreservedAddNewElmtInRefList' VC for removeDuplicates @607:9...
info Verified: 309 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/4) of noDuplicateConcatListNotContainedPreservesBis' VC for removeDuplicates @608:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@90ffb2ff
debug: Cache hit: 'body assertion: Inlined precondition (1/4) of noDuplicateConcatListNotContainedPreservesBis' VC for removeDuplicates @608:9...
info Verified: 310 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/4) of noDuplicateConcatListNotContainedPreservesBis' VC for removeDuplicates @608:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@508506e0
debug: Cache hit: 'body assertion: Inlined precondition (2/4) of noDuplicateConcatListNotContainedPreservesBis' VC for removeDuplicates @608:9...
info Verified: 311 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/4) of noDuplicateConcatListNotContainedPreservesBis' VC for removeDuplicates @608:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@998b4f80
debug: Cache hit: 'body assertion: Inlined precondition (3/4) of noDuplicateConcatListNotContainedPreservesBis' VC for removeDuplicates @608:9...
info Verified: 312 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (4/4) of noDuplicateConcatListNotContainedPreservesBis' VC for removeDuplicates @608:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1baf8f
debug: Cache hit: 'body assertion: Inlined precondition (4/4) of noDuplicateConcatListNotContainedPreservesBis' VC for removeDuplicates @608:9...
info Verified: 313 / 982
debug:  - Checking cache: 'measure decreases' VC for removeDuplicates @610:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@626337aa
debug: Cache hit: 'measure decreases' VC for removeDuplicates @610:9...
info Verified: 314 / 982
debug:  - Checking cache: 'postcondition' VC for removeDuplicates @610:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4021b424
debug: Cache hit: 'postcondition' VC for removeDuplicates @610:9...
info Verified: 315 / 982
debug:  - Checking cache: 'postcondition' VC for removeDuplicates @614:108...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@73230f69
debug: Cache hit: 'postcondition' VC for removeDuplicates @614:108...
info Verified: 316 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for removeDuplicates @589:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@68ad431f
debug: Cache hit: 'body assertion: match exhaustiveness' VC for removeDuplicates @589:5...
info Verified: 317 / 982
debug:  - Checking cache: 'postcondition' VC for removeDuplicates @589:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@68ad431f
debug: Cache hit: 'postcondition' VC for removeDuplicates @589:5...
info Verified: 318 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallNotContainsNilRefList @972:51...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@16897d10
debug: Cache hit: 'non-negative measure' VC for lemmaForallNotContainsNilRefList @972:51...
info Verified: 319 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsNilRefList @972:71...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4b779b
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsNilRefList @972:71...
info Verified: 320 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallNotContainsNilRefList @972:71...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3563ea78
debug: Cache hit: 'measure decreases' VC for lemmaForallNotContainsNilRefList @972:71...
info Verified: 321 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsNilRefList @972:71...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@45889792
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsNilRefList @972:71...
info Verified: 322 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsNilRefList @972:71...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsNilRefList @972:71...
info Verified: 323 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsNilRefList @972:71...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for lemmaForallNotContainsNilRefList @972:71...
info Verified: 324 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@69f6f4ad
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 325 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@580d68be
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 326 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@31e22742
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 327 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@34d52888
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 328 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f98d292a
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 329 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@918fac56
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 330 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@80b2bd55
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 331 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@90983a9f
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 332 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e3007bdb
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 333 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@17757c37
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 334 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2a029182
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 335 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2c0eb4bb
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 336 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a48e5f20
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 337 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@78d28f9d
debug: Cache hit: 'precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))' VC for lemmaSubSeqTransitive @?:?...
info Verified: 338 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ad3c4cf4
debug: Cache hit: 'non-negative measure' VC for lemmaSubSeqTransitive @?:?...
info Verified: 339 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @676:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1abc27a9
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @676:9...
info Verified: 340 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @676:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@46db4802
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @676:9...
info Verified: 341 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7b6e52ab
debug: Cache hit: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
info Verified: 342 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqTransitive @676:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c46e8882
debug: Cache hit: 'postcondition' VC for lemmaSubSeqTransitive @676:9...
info Verified: 343 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @682:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@31e22742
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @682:15...
info Verified: 344 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @682:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@34d52888
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @682:15...
info Verified: 345 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@254b0a23
debug: Cache hit: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
info Verified: 346 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqTransitive @682:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2bcabd30
debug: Cache hit: 'postcondition' VC for lemmaSubSeqTransitive @682:15...
info Verified: 347 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @684:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@80f94929
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @684:15...
info Verified: 348 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @684:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@918fac56
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @684:15...
info Verified: 349 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6753bb6
debug: Cache hit: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
info Verified: 350 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqTransitive @684:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e6071198
debug: Cache hit: 'postcondition' VC for lemmaSubSeqTransitive @684:15...
info Verified: 351 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @687:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1f8225b2
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @687:13...
info Verified: 352 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @687:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@90983a9f
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @687:13...
info Verified: 353 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2a9a60db
debug: Cache hit: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
info Verified: 354 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqTransitive @687:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@663d44d1
debug: Cache hit: 'postcondition' VC for lemmaSubSeqTransitive @687:13...
info Verified: 355 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @692:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@408215f
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @692:15...
info Verified: 356 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @692:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@387d21bb
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @692:15...
info Verified: 357 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ed9f0ee1
debug: Cache hit: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
info Verified: 358 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqTransitive @692:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1dcd34a2
debug: Cache hit: 'postcondition' VC for lemmaSubSeqTransitive @692:15...
info Verified: 359 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @694:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2716e67e
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @694:15...
info Verified: 360 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @694:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f8349e7f
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @694:15...
info Verified: 361 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7d0495cb
debug: Cache hit: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
info Verified: 362 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqTransitive @694:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@16327e66
debug: Cache hit: 'postcondition' VC for lemmaSubSeqTransitive @694:15...
info Verified: 363 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @697:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@59c6639c
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @697:13...
info Verified: 364 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @697:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@74188322
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive' VC for lemmaSubSeqTransitive @697:13...
info Verified: 365 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3699eaa9
debug: Cache hit: 'measure decreases' VC for lemmaSubSeqTransitive @?:?...
info Verified: 366 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqTransitive @697:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@75d9e9c4
debug: Cache hit: 'postcondition' VC for lemmaSubSeqTransitive @697:13...
info Verified: 367 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqTransitive @702:17...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@82859b8
debug: Cache hit: 'postcondition' VC for lemmaSubSeqTransitive @702:17...
info Verified: 368 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsForConcat[B](l,... (require 1/2))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6d843d10
debug: Cache hit: 'precond. (call lemmaForallNotContainsForConcat[B](l,... (require 1/2))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
info Verified: 369 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsForConcat[B](l,... (require 2/2))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6c68e0e1
debug: Cache hit: 'precond. (call lemmaForallNotContainsForConcat[B](l,... (require 2/2))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
info Verified: 370 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsForSubseq[B](l,...)' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@739ee989
debug: Cache hit: 'precond. (call lemmaForallNotContainsForSubseq[B](l,...)' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
info Verified: 371 / 982
debug:  - Checking cache: 'precond. (call noDuplicateConcatListNotContainedPres... (require 1/4))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@aef0bf78
debug: Cache hit: 'precond. (call noDuplicateConcatListNotContainedPres... (require 1/4))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
info Verified: 372 / 982
debug:  - Checking cache: 'precond. (call noDuplicateConcatListNotContainedPres... (require 2/4))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fb160c5b
debug: Cache hit: 'precond. (call noDuplicateConcatListNotContainedPres... (require 2/4))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
info Verified: 373 / 982
debug:  - Checking cache: 'precond. (call noDuplicateConcatListNotContainedPres... (require 3/4))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@975e9a90
debug: Cache hit: 'precond. (call noDuplicateConcatListNotContainedPres... (require 3/4))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
info Verified: 374 / 982
debug:  - Checking cache: 'precond. (call noDuplicateConcatListNotContainedPres... (require 4/4))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@17653be3
debug: Cache hit: 'precond. (call noDuplicateConcatListNotContainedPres... (require 4/4))' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
info Verified: 375 / 982
debug:  - Checking cache: 'body assertion' VC for noDuplicateConcatListNotContainedPreservesBis @1050:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@af644439
debug: Cache hit: 'body assertion' VC for noDuplicateConcatListNotContainedPreservesBis @1050:16...
info Verified: 376 / 982
debug:  - Checking cache: 'non-negative measure' VC for noDuplicateConcatListNotContainedPreservesBis @1057:35...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@48c62c8
debug: Cache hit: 'non-negative measure' VC for noDuplicateConcatListNotContainedPreservesBis @1057:35...
info Verified: 377 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaForallNotContainsForConcat' VC for noDuplicateConcatListNotContainedPreservesBis @1051:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@155f5c9f
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaForallNotContainsForConcat' VC for noDuplicateConcatListNotContainedPreservesBis @1051:9...
info Verified: 378 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaForallNotContainsForConcat' VC for noDuplicateConcatListNotContainedPreservesBis @1051:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@98a5e271
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaForallNotContainsForConcat' VC for noDuplicateConcatListNotContainedPreservesBis @1051:9...
info Verified: 379 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaForallNotContainsForSubseq' VC for noDuplicateConcatListNotContainedPreservesBis @1052:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@da465c7f
debug: Cache hit: 'body assertion: Inlined precondition of lemmaForallNotContainsForSubseq' VC for noDuplicateConcatListNotContainedPreservesBis @1052:9...
info Verified: 380 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/4) of noDuplicateConcatListNotContainedPreservesBis' VC for noDuplicateConcatListNotContainedPreservesBis @1053:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3d1f8e05
debug: Cache hit: 'body assertion: Inlined precondition (1/4) of noDuplicateConcatListNotContainedPreservesBis' VC for noDuplicateConcatListNotContainedPreservesBis @1053:9...
info Verified: 381 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/4) of noDuplicateConcatListNotContainedPreservesBis' VC for noDuplicateConcatListNotContainedPreservesBis @1053:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@82523071
debug: Cache hit: 'body assertion: Inlined precondition (2/4) of noDuplicateConcatListNotContainedPreservesBis' VC for noDuplicateConcatListNotContainedPreservesBis @1053:9...
info Verified: 382 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/4) of noDuplicateConcatListNotContainedPreservesBis' VC for noDuplicateConcatListNotContainedPreservesBis @1053:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@601519ad
debug: Cache hit: 'body assertion: Inlined precondition (3/4) of noDuplicateConcatListNotContainedPreservesBis' VC for noDuplicateConcatListNotContainedPreservesBis @1053:9...
info Verified: 383 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (4/4) of noDuplicateConcatListNotContainedPreservesBis' VC for noDuplicateConcatListNotContainedPreservesBis @1053:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c61bdfae
debug: Cache hit: 'body assertion: Inlined precondition (4/4) of noDuplicateConcatListNotContainedPreservesBis' VC for noDuplicateConcatListNotContainedPreservesBis @1053:9...
info Verified: 384 / 982
debug:  - Checking cache: 'measure decreases' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8111a978
debug: Cache hit: 'measure decreases' VC for noDuplicateConcatListNotContainedPreservesBis @?:?...
info Verified: 385 / 982
debug:  - Checking cache: 'postcondition' VC for noDuplicateConcatListNotContainedPreservesBis @1053:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bcee3751
debug: Cache hit: 'postcondition' VC for noDuplicateConcatListNotContainedPreservesBis @1053:9...
info Verified: 386 / 982
debug:  - Checking cache: 'postcondition' VC for noDuplicateConcatListNotContainedPreservesBis @1055:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6bcb11ca
debug: Cache hit: 'postcondition' VC for noDuplicateConcatListNotContainedPreservesBis @1055:21...
info Verified: 387 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for noDuplicateConcatListNotContainedPreservesBis @1048:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@78c3c200
debug: Cache hit: 'body assertion: match exhaustiveness' VC for noDuplicateConcatListNotContainedPreservesBis @1048:5...
info Verified: 388 / 982
debug:  - Checking cache: 'postcondition' VC for noDuplicateConcatListNotContainedPreservesBis @1048:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@78c3c200
debug: Cache hit: 'postcondition' VC for noDuplicateConcatListNotContainedPreservesBis @1048:5...
info Verified: 389 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsForSubseq[B]((s...)' VC for lemmaForallNotContainsForSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3d7cf86
debug: Cache hit: 'precond. (call lemmaForallNotContainsForSubseq[B]((s...)' VC for lemmaForallNotContainsForSubseq @?:?...
info Verified: 390 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallNotContainsForSubseq @926:50...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@faacee22
debug: Cache hit: 'non-negative measure' VC for lemmaForallNotContainsForSubseq @926:50...
info Verified: 391 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsForSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c34b8a56
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsForSubseq @?:?...
info Verified: 392 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallNotContainsForSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cb9202b8
debug: Cache hit: 'measure decreases' VC for lemmaForallNotContainsForSubseq @?:?...
info Verified: 393 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsForSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b7b204b1
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsForSubseq @?:?...
info Verified: 394 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsForSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f11ba6c8
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsForSubseq @?:?...
info Verified: 395 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsForSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f11ba6c8
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsForSubseq @?:?...
info Verified: 396 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsPreservedAddNew... (require 1/2))' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c8b86585
debug: Cache hit: 'precond. (call lemmaForallNotContainsPreservedAddNew... (require 1/2))' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
info Verified: 397 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsPreservedAddNew... (require 2/2))' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f1f8e147
debug: Cache hit: 'precond. (call lemmaForallNotContainsPreservedAddNew... (require 2/2))' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
info Verified: 398 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @964:69...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a9387a1f
debug: Cache hit: 'non-negative measure' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @964:69...
info Verified: 399 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d818cb50
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
info Verified: 400 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3861e135
debug: Cache hit: 'measure decreases' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
info Verified: 401 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c9460970
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
info Verified: 402 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bc61cd24
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
info Verified: 403 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bc61cd24
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsPreservedAddNewElmtInRefList @?:?...
info Verified: 404 / 982
debug:  - Checking cache: 'precond. (call lemmaConcatTwoListsWhichNotContainThe... (require 1/2))' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@875db516
debug: Cache hit: 'precond. (call lemmaConcatTwoListsWhichNotContainThe... (require 1/2))' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @?:?...
info Verified: 405 / 982
debug:  - Checking cache: 'precond. (call lemmaConcatTwoListsWhichNotContainThe... (require 2/2))' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@875db516
debug: Cache hit: 'precond. (call lemmaConcatTwoListsWhichNotContainThe... (require 2/2))' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @?:?...
info Verified: 406 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @763:17...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@39d6dca4
debug: Cache hit: 'non-negative measure' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @763:17...
info Verified: 407 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of check' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @758:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5e568146
debug: Cache hit: 'body assertion: Inlined precondition of check' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @758:39...
info Verified: 408 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @758:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@236bbfac
debug: Cache hit: 'postcondition' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @758:39...
info Verified: 409 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaConcatTwoListsWhichNotContainThenTotNotContain' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @760:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ec7e6990
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaConcatTwoListsWhichNotContainThenTotNotContain' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @760:9...
info Verified: 410 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaConcatTwoListsWhichNotContainThenTotNotContain' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @760:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@875db516
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaConcatTwoListsWhichNotContainThenTotNotContain' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @760:9...
info Verified: 411 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@97e64c44
debug: Cache hit: 'measure decreases' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @?:?...
info Verified: 412 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @760:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4c883445
debug: Cache hit: 'postcondition' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @760:9...
info Verified: 413 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @761:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ca28d440
debug: Cache hit: 'postcondition' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @761:21...
info Verified: 414 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @757:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@665e14a5
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @757:5...
info Verified: 415 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @757:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@665e14a5
debug: Cache hit: 'postcondition' VC for lemmaConcatTwoListsWhichNotContainThenTotNotContain @757:5...
info Verified: 416 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for notContainsAThenTailNotContains @1144:29...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@69eef56
debug: Cache hit: 'precond. (call tail[B](l))' VC for notContainsAThenTailNotContains @1144:29...
info Verified: 417 / 982
debug:  - Checking cache: 'precond. (call notContainsAThenTailNotContains[B]((s...)' VC for notContainsAThenTailNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f42c048b
debug: Cache hit: 'precond. (call notContainsAThenTailNotContains[B]((s...)' VC for notContainsAThenTailNotContains @?:?...
info Verified: 418 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for notContainsAThenTailNotContains @1144:29...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bbb24b0f
debug: Cache hit: 'precond. (call tail[B](l))' VC for notContainsAThenTailNotContains @1144:29...
info Verified: 419 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for notContainsAThenTailNotContains @1144:29...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7cd69bf8
debug: Cache hit: 'precond. (call tail[B](l))' VC for notContainsAThenTailNotContains @1144:29...
info Verified: 420 / 982
debug:  - Checking cache: 'non-negative measure' VC for notContainsAThenTailNotContains @1139:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b911dd9e
debug: Cache hit: 'non-negative measure' VC for notContainsAThenTailNotContains @1139:15...
info Verified: 421 / 982
debug:  - Checking cache: 'postcondition' VC for notContainsAThenTailNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5b2cc086
debug: Cache hit: 'postcondition' VC for notContainsAThenTailNotContains @?:?...
info Verified: 422 / 982
debug:  - Checking cache: 'measure decreases' VC for notContainsAThenTailNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e106cba8
debug: Cache hit: 'measure decreases' VC for notContainsAThenTailNotContains @?:?...
info Verified: 423 / 982
debug:  - Checking cache: 'postcondition' VC for notContainsAThenTailNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@11c63e67
debug: Cache hit: 'postcondition' VC for notContainsAThenTailNotContains @?:?...
info Verified: 424 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for notContainsAThenTailNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7cd69bf8
debug: Cache hit: 'body assertion: match exhaustiveness' VC for notContainsAThenTailNotContains @?:?...
info Verified: 425 / 982
debug:  - Checking cache: 'postcondition' VC for notContainsAThenTailNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7cd69bf8
debug: Cache hit: 'postcondition' VC for notContainsAThenTailNotContains @?:?...
info Verified: 426 / 982
debug:  - Checking cache: 'precond. (call forallContained[B](l1, (b: B) => cont...)' VC for lemmaForallContainsPreservedIfSameContent @918:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@91655024
debug: Cache hit: 'precond. (call forallContained[B](l1, (b: B) => cont...)' VC for lemmaForallContainsPreservedIfSameContent @918:9...
info Verified: 427 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsPreservedIfSameCon... (require 1/2))' VC for lemmaForallContainsPreservedIfSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6b1de77d
debug: Cache hit: 'precond. (call lemmaForallContainsPreservedIfSameCon... (require 1/2))' VC for lemmaForallContainsPreservedIfSameContent @?:?...
info Verified: 428 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsPreservedIfSameCon... (require 2/2))' VC for lemmaForallContainsPreservedIfSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@982de459
debug: Cache hit: 'precond. (call lemmaForallContainsPreservedIfSameCon... (require 2/2))' VC for lemmaForallContainsPreservedIfSameContent @?:?...
info Verified: 429 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallContainsPreservedIfSameContent @922:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8956a45
debug: Cache hit: 'non-negative measure' VC for lemmaForallContainsPreservedIfSameContent @922:15...
info Verified: 430 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsPreservedIfSameContent @916:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4fab1e43
debug: Cache hit: 'postcondition' VC for lemmaForallContainsPreservedIfSameContent @916:21...
info Verified: 431 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsPreservedIfSameContent' VC for lemmaForallContainsPreservedIfSameContent @919:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4af43e50
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsPreservedIfSameContent' VC for lemmaForallContainsPreservedIfSameContent @919:9...
info Verified: 432 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsPreservedIfSameContent' VC for lemmaForallContainsPreservedIfSameContent @919:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c4b897c0
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsPreservedIfSameContent' VC for lemmaForallContainsPreservedIfSameContent @919:9...
info Verified: 433 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallContainsPreservedIfSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ddd794bc
debug: Cache hit: 'measure decreases' VC for lemmaForallContainsPreservedIfSameContent @?:?...
info Verified: 434 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsPreservedIfSameContent @919:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@952c658b
debug: Cache hit: 'postcondition' VC for lemmaForallContainsPreservedIfSameContent @919:9...
info Verified: 435 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallContainsPreservedIfSameContent @915:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c487e32a
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallContainsPreservedIfSameContent @915:5...
info Verified: 436 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsPreservedIfSameContent @915:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c487e32a
debug: Cache hit: 'postcondition' VC for lemmaForallContainsPreservedIfSameContent @915:5...
info Verified: 437 / 982
debug:  - Checking cache: 'precond. (call tail[B](s1))' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @556:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@20cce14f
debug: Cache hit: 'precond. (call tail[B](s1))' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @556:11...
info Verified: 438 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @558:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c5ab63d3
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @558:11...
info Verified: 439 / 982
debug:  - Checking cache: 'precond. (call lemmaPrefixFromSameListAndStrictlySma... (require 1/3))' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9d7f45fe
debug: Cache hit: 'precond. (call lemmaPrefixFromSameListAndStrictlySma... (require 1/3))' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @?:?...
info Verified: 440 / 982
debug:  - Checking cache: 'precond. (call lemmaPrefixFromSameListAndStrictlySma... (require 2/3))' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@92e0df2f
debug: Cache hit: 'precond. (call lemmaPrefixFromSameListAndStrictlySma... (require 2/3))' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @?:?...
info Verified: 441 / 982
debug:  - Checking cache: 'precond. (call lemmaPrefixFromSameListAndStrictlySma... (require 3/3))' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8bcd41bb
debug: Cache hit: 'precond. (call lemmaPrefixFromSameListAndStrictlySma... (require 3/3))' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @?:?...
info Verified: 442 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @558:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7e51c1c0
debug: Cache hit: 'non-negative measure' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @558:11...
info Verified: 443 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/3) of lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @555:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5f52beab
debug: Cache hit: 'body assertion: Inlined precondition (1/3) of lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @555:9...
info Verified: 444 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/3) of lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @555:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4ea7005f
debug: Cache hit: 'body assertion: Inlined precondition (2/3) of lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @555:9...
info Verified: 445 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/3) of lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @555:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2e210e74
debug: Cache hit: 'body assertion: Inlined precondition (3/3) of lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @555:9...
info Verified: 446 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@37138b30
debug: Cache hit: 'measure decreases' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @?:?...
info Verified: 447 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @555:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@335034f8
debug: Cache hit: 'postcondition' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @555:9...
info Verified: 448 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @560:18...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@61f89182
debug: Cache hit: 'postcondition' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @560:18...
info Verified: 449 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @553:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@39a6a3f6
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @553:5...
info Verified: 450 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @553:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@39a6a3f6
debug: Cache hit: 'postcondition' VC for lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther @553:5...
info Verified: 451 / 982
debug:  - Checking cache: 'precond. (call lemmaNoDuplicateConcatThenForallNotCo...)' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7633e498
debug: Cache hit: 'precond. (call lemmaNoDuplicateConcatThenForallNotCo...)' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
info Verified: 452 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaNoDuplicateConcatThenForallNotContains @957:62...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a8444a76
debug: Cache hit: 'non-negative measure' VC for lemmaNoDuplicateConcatThenForallNotContains @957:62...
info Verified: 453 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e266dd2f
debug: Cache hit: 'postcondition' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
info Verified: 454 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@81ebb194
debug: Cache hit: 'measure decreases' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
info Verified: 455 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9a0b8027
debug: Cache hit: 'postcondition' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
info Verified: 456 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@853ea407
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
info Verified: 457 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@853ea407
debug: Cache hit: 'postcondition' VC for lemmaNoDuplicateConcatThenForallNotContains @?:?...
info Verified: 458 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaRemoveLastFromBothSidePreservesEq @443:74...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8f76e7d
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaRemoveLastFromBothSidePreservesEq @443:74...
info Verified: 459 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveLastFromBothSidePreservesE... (require 1/2))' VC for lemmaRemoveLastFromBothSidePreservesEq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@40ed7a4
debug: Cache hit: 'precond. (call lemmaRemoveLastFromBothSidePreservesE... (require 1/2))' VC for lemmaRemoveLastFromBothSidePreservesEq @?:?...
info Verified: 460 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveLastFromBothSidePreservesE... (require 2/2))' VC for lemmaRemoveLastFromBothSidePreservesEq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@826f1230
debug: Cache hit: 'precond. (call lemmaRemoveLastFromBothSidePreservesE... (require 2/2))' VC for lemmaRemoveLastFromBothSidePreservesEq @?:?...
info Verified: 461 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](s))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:20...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@eb1ba0ca
debug: Cache hit: 'precond. (call removeLast[B](s))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:20...
info Verified: 462 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:37...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7f57f265
debug: Cache hit: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:37...
info Verified: 463 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](s))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:20...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a0a0f7c
debug: Cache hit: 'precond. (call removeLast[B](s))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:20...
info Verified: 464 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:37...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@abd27165
debug: Cache hit: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:37...
info Verified: 465 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](s))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:20...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a0a0f7c
debug: Cache hit: 'precond. (call removeLast[B](s))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:20...
info Verified: 466 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:37...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a0a0f7c
debug: Cache hit: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromBothSidePreservesEq @446:37...
info Verified: 467 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaRemoveLastFromBothSidePreservesEq @446:48...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@583d87ba
debug: Cache hit: 'non-negative measure' VC for lemmaRemoveLastFromBothSidePreservesEq @446:48...
info Verified: 468 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaRemoveLastFromBothSidePreservesEq' VC for lemmaRemoveLastFromBothSidePreservesEq @443:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b4482836
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaRemoveLastFromBothSidePreservesEq' VC for lemmaRemoveLastFromBothSidePreservesEq @443:28...
info Verified: 469 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaRemoveLastFromBothSidePreservesEq' VC for lemmaRemoveLastFromBothSidePreservesEq @443:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@826f1230
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaRemoveLastFromBothSidePreservesEq' VC for lemmaRemoveLastFromBothSidePreservesEq @443:28...
info Verified: 470 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaRemoveLastFromBothSidePreservesEq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e506c0c5
debug: Cache hit: 'measure decreases' VC for lemmaRemoveLastFromBothSidePreservesEq @?:?...
info Verified: 471 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastFromBothSidePreservesEq @443:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4f25bbbe
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastFromBothSidePreservesEq @443:28...
info Verified: 472 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastFromBothSidePreservesEq @444:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4fb459fe
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastFromBothSidePreservesEq @444:28...
info Verified: 473 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaRemoveLastFromBothSidePreservesEq @442:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a0a0f7c
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaRemoveLastFromBothSidePreservesEq @442:5...
info Verified: 474 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastFromBothSidePreservesEq @442:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a0a0f7c
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastFromBothSidePreservesEq @442:5...
info Verified: 475 / 982
debug:  - Checking cache: 'precond. (call lemmaIsSuffixThenTailIsSuffix[B](l, s...)' VC for lemmaIsSuffixThenTailIsSuffix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@64472c11
debug: Cache hit: 'precond. (call lemmaIsSuffixThenTailIsSuffix[B](l, s...)' VC for lemmaIsSuffixThenTailIsSuffix @?:?...
info Verified: 476 / 982
debug:  - Checking cache: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @130:42...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@433e19a0
debug: Cache hit: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @130:42...
info Verified: 477 / 982
debug:  - Checking cache: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @130:42...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@480987a9
debug: Cache hit: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @130:42...
info Verified: 478 / 982
debug:  - Checking cache: 'precond. (call head[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @122:18...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cf63fff4
debug: Cache hit: 'precond. (call head[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @122:18...
info Verified: 479 / 982
debug:  - Checking cache: 'precond. (call head[B](l))' VC for lemmaIsSuffixThenTailIsSuffix @122:33...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@74428278
debug: Cache hit: 'precond. (call head[B](l))' VC for lemmaIsSuffixThenTailIsSuffix @122:33...
info Verified: 480 / 982
debug:  - Checking cache: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @123:18...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d76ba3f7
debug: Cache hit: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @123:18...
info Verified: 481 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaIsSuffixThenTailIsSuffix @123:33...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7c4a267b
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaIsSuffixThenTailIsSuffix @123:33...
info Verified: 482 / 982
debug:  - Checking cache: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @124:27...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@af076ee6
debug: Cache hit: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @124:27...
info Verified: 483 / 982
debug:  - Checking cache: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @130:42...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e151524d
debug: Cache hit: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @130:42...
info Verified: 484 / 982
debug:  - Checking cache: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @130:42...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@89a6e194
debug: Cache hit: 'precond. (call tail[B](suffix))' VC for lemmaIsSuffixThenTailIsSuffix @130:42...
info Verified: 485 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaIsSuffixThenTailIsSuffix @117:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@78bf963
debug: Cache hit: 'body assertion' VC for lemmaIsSuffixThenTailIsSuffix @117:16...
info Verified: 486 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaIsSuffixThenTailIsSuffix @119:18...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2f365574
debug: Cache hit: 'body assertion' VC for lemmaIsSuffixThenTailIsSuffix @119:18...
info Verified: 487 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaIsSuffixThenTailIsSuffix @122:18...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@38e0fe0c
debug: Cache hit: 'body assertion' VC for lemmaIsSuffixThenTailIsSuffix @122:18...
info Verified: 488 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaIsSuffixThenTailIsSuffix @123:18...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f3e8fe3b
debug: Cache hit: 'body assertion' VC for lemmaIsSuffixThenTailIsSuffix @123:18...
info Verified: 489 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaIsSuffixThenTailIsSuffix @124:18...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ddb0cb94
debug: Cache hit: 'body assertion' VC for lemmaIsSuffixThenTailIsSuffix @124:18...
info Verified: 490 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaIsSuffixThenTailIsSuffix @113:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c53e7d56
debug: Cache hit: 'non-negative measure' VC for lemmaIsSuffixThenTailIsSuffix @113:15...
info Verified: 491 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaIsSuffixThenTailIsSuffix' VC for lemmaIsSuffixThenTailIsSuffix @115:59...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2368e7a
debug: Cache hit: 'body assertion: Inlined precondition of lemmaIsSuffixThenTailIsSuffix' VC for lemmaIsSuffixThenTailIsSuffix @115:59...
info Verified: 492 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaIsSuffixThenTailIsSuffix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9c32f241
debug: Cache hit: 'measure decreases' VC for lemmaIsSuffixThenTailIsSuffix @?:?...
info Verified: 493 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsSuffixThenTailIsSuffix @115:59...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@701cd998
debug: Cache hit: 'postcondition' VC for lemmaIsSuffixThenTailIsSuffix @115:59...
info Verified: 494 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsSuffixThenTailIsSuffix @119:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@93c5256a
debug: Cache hit: 'postcondition' VC for lemmaIsSuffixThenTailIsSuffix @119:11...
info Verified: 495 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsSuffixThenTailIsSuffix @122:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@40b9ed45
debug: Cache hit: 'postcondition' VC for lemmaIsSuffixThenTailIsSuffix @122:11...
info Verified: 496 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaIsSuffixThenTailIsSuffix @114:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fc924e9a
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaIsSuffixThenTailIsSuffix @114:5...
info Verified: 497 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsSuffixThenTailIsSuffix @114:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bf49e6d9
debug: Cache hit: 'postcondition' VC for lemmaIsSuffixThenTailIsSuffix @114:5...
info Verified: 498 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@39d2d86d
debug: Cache hit: 'precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
info Verified: 499 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fc0eb549
debug: Cache hit: 'precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
info Verified: 500 / 982
debug:  - Checking cache: 'precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2071075d
debug: Cache hit: 'precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
info Verified: 501 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaSubSeqAddSameElmtPreserves @719:18...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@206f9e1b
debug: Cache hit: 'body assertion' VC for lemmaSubSeqAddSameElmtPreserves @719:18...
info Verified: 502 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaSubSeqAddSameElmtPreserves @711:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e6bbd062
debug: Cache hit: 'non-negative measure' VC for lemmaSubSeqAddSameElmtPreserves @711:15...
info Verified: 503 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqAddSameElmtPreserves @713:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d0870bf6
debug: Cache hit: 'postcondition' VC for lemmaSubSeqAddSameElmtPreserves @713:39...
info Verified: 504 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves' VC for lemmaSubSeqAddSameElmtPreserves @714:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4620efeb
debug: Cache hit: 'body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves' VC for lemmaSubSeqAddSameElmtPreserves @714:39...
info Verified: 505 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b21a44d1
debug: Cache hit: 'measure decreases' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
info Verified: 506 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqAddSameElmtPreserves @714:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@49b3cf06
debug: Cache hit: 'postcondition' VC for lemmaSubSeqAddSameElmtPreserves @714:39...
info Verified: 507 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves' VC for lemmaSubSeqAddSameElmtPreserves @717:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@989111be
debug: Cache hit: 'body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves' VC for lemmaSubSeqAddSameElmtPreserves @717:11...
info Verified: 508 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@58d2c606
debug: Cache hit: 'measure decreases' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
info Verified: 509 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqAddSameElmtPreserves @717:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1d599586
debug: Cache hit: 'postcondition' VC for lemmaSubSeqAddSameElmtPreserves @717:11...
info Verified: 510 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves' VC for lemmaSubSeqAddSameElmtPreserves @720:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2071075d
debug: Cache hit: 'body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves' VC for lemmaSubSeqAddSameElmtPreserves @720:11...
info Verified: 511 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ab8634db
debug: Cache hit: 'measure decreases' VC for lemmaSubSeqAddSameElmtPreserves @?:?...
info Verified: 512 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqAddSameElmtPreserves @720:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f1e1a99
debug: Cache hit: 'postcondition' VC for lemmaSubSeqAddSameElmtPreserves @720:11...
info Verified: 513 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaSubSeqAddSameElmtPreserves @712:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cb8faf68
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaSubSeqAddSameElmtPreserves @712:5...
info Verified: 514 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubSeqAddSameElmtPreserves @712:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@20dfeb71
debug: Cache hit: 'postcondition' VC for lemmaSubSeqAddSameElmtPreserves @712:5...
info Verified: 515 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaConcatThenFirstSubseqOfTot @729:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5aa5e2dc
debug: Cache hit: 'non-negative measure' VC for lemmaConcatThenFirstSubseqOfTot @729:15...
info Verified: 516 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaConcatThenFirstSubseqOfTot @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3863fe02
debug: Cache hit: 'measure decreases' VC for lemmaConcatThenFirstSubseqOfTot @?:?...
info Verified: 517 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatThenFirstSubseqOfTot @731:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9bf8a3a4
debug: Cache hit: 'postcondition' VC for lemmaConcatThenFirstSubseqOfTot @731:28...
info Verified: 518 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatThenFirstSubseqOfTot @732:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b6b95386
debug: Cache hit: 'postcondition' VC for lemmaConcatThenFirstSubseqOfTot @732:28...
info Verified: 519 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaConcatThenFirstSubseqOfTot @730:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: match exhaustiveness' VC for lemmaConcatThenFirstSubseqOfTot @730:5...
info Verified: 520 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatThenFirstSubseqOfTot @730:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for lemmaConcatThenFirstSubseqOfTot @730:5...
info Verified: 521 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsForConcat[B]((s... (require 1/2))' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a7ee28e6
debug: Cache hit: 'precond. (call lemmaForallNotContainsForConcat[B]((s... (require 1/2))' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 522 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsForConcat[B]((s... (require 2/2))' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@60396aba
debug: Cache hit: 'precond. (call lemmaForallNotContainsForConcat[B]((s... (require 2/2))' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 523 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallNotContainsForConcat @941:50...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@776cf2f0
debug: Cache hit: 'non-negative measure' VC for lemmaForallNotContainsForConcat @941:50...
info Verified: 524 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cf86648b
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 525 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4cf466ea
debug: Cache hit: 'measure decreases' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 526 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a3141a9f
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 527 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@54f3d5fc
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 528 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@54f3d5fc
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 529 / 982
debug:  - Checking cache: 'precond. (call lemmaListContainsThenFilterContainsNo... (require 1/2))' VC for lemmaListContainsThenFilterContainsNotEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a4e1e535
debug: Cache hit: 'precond. (call lemmaListContainsThenFilterContainsNo... (require 1/2))' VC for lemmaListContainsThenFilterContainsNotEmpty @?:?...
info Verified: 530 / 982
debug:  - Checking cache: 'precond. (call lemmaListContainsThenFilterContainsNo... (require 2/2))' VC for lemmaListContainsThenFilterContainsNotEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d7aa33aa
debug: Cache hit: 'precond. (call lemmaListContainsThenFilterContainsNo... (require 2/2))' VC for lemmaListContainsThenFilterContainsNotEmpty @?:?...
info Verified: 531 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaListContainsThenFilterContainsNotEmpty @1151:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3edc517e
debug: Cache hit: 'non-negative measure' VC for lemmaListContainsThenFilterContainsNotEmpty @1151:15...
info Verified: 532 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaListContainsThenFilterContainsNotEmpty' VC for lemmaListContainsThenFilterContainsNotEmpty @1155:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@12145d22
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaListContainsThenFilterContainsNotEmpty' VC for lemmaListContainsThenFilterContainsNotEmpty @1155:11...
info Verified: 533 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaListContainsThenFilterContainsNotEmpty' VC for lemmaListContainsThenFilterContainsNotEmpty @1155:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d7aa33aa
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaListContainsThenFilterContainsNotEmpty' VC for lemmaListContainsThenFilterContainsNotEmpty @1155:11...
info Verified: 534 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaListContainsThenFilterContainsNotEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c817396c
debug: Cache hit: 'measure decreases' VC for lemmaListContainsThenFilterContainsNotEmpty @?:?...
info Verified: 535 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaListContainsThenFilterContainsNotEmpty @1155:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@507b4b39
debug: Cache hit: 'postcondition' VC for lemmaListContainsThenFilterContainsNotEmpty @1155:11...
info Verified: 536 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaListContainsThenFilterContainsNotEmpty @1156:10...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c6c19633
debug: Cache hit: 'postcondition' VC for lemmaListContainsThenFilterContainsNotEmpty @1156:10...
info Verified: 537 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of check' VC for lemmaListContainsThenFilterContainsNotEmpty @1158:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1d7b68e8
debug: Cache hit: 'body assertion: Inlined precondition of check' VC for lemmaListContainsThenFilterContainsNotEmpty @1158:21...
info Verified: 538 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaListContainsThenFilterContainsNotEmpty @1158:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f522aec7
debug: Cache hit: 'postcondition' VC for lemmaListContainsThenFilterContainsNotEmpty @1158:21...
info Verified: 539 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaListContainsThenFilterContainsNotEmpty @1152:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c8c643f1
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaListContainsThenFilterContainsNotEmpty @1152:5...
info Verified: 540 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaListContainsThenFilterContainsNotEmpty @1152:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c8c643f1
debug: Cache hit: 'postcondition' VC for lemmaListContainsThenFilterContainsNotEmpty @1152:5...
info Verified: 541 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaConcatThenSecondSubseqOfTot @739:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5aa5e2dc
debug: Cache hit: 'non-negative measure' VC for lemmaConcatThenSecondSubseqOfTot @739:15...
info Verified: 542 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaConcatThenSecondSubseqOfTot @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3863fe02
debug: Cache hit: 'measure decreases' VC for lemmaConcatThenSecondSubseqOfTot @?:?...
info Verified: 543 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatThenSecondSubseqOfTot @741:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2f44a0d1
debug: Cache hit: 'postcondition' VC for lemmaConcatThenSecondSubseqOfTot @741:28...
info Verified: 544 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatThenSecondSubseqOfTot @742:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cde3fb8f
debug: Cache hit: 'postcondition' VC for lemmaConcatThenSecondSubseqOfTot @742:28...
info Verified: 545 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaConcatThenSecondSubseqOfTot @740:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: match exhaustiveness' VC for lemmaConcatThenSecondSubseqOfTot @740:5...
info Verified: 546 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatThenSecondSubseqOfTot @740:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for lemmaConcatThenSecondSubseqOfTot @740:5...
info Verified: 547 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsCannotContain[B... (require 1/2))' VC for lemmaForallNotContainsCannotContain @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@829769d3
debug: Cache hit: 'precond. (call lemmaForallNotContainsCannotContain[B... (require 1/2))' VC for lemmaForallNotContainsCannotContain @?:?...
info Verified: 548 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsCannotContain[B... (require 2/2))' VC for lemmaForallNotContainsCannotContain @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d48f4ed0
debug: Cache hit: 'precond. (call lemmaForallNotContainsCannotContain[B... (require 2/2))' VC for lemmaForallNotContainsCannotContain @?:?...
info Verified: 549 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallNotContainsCannotContain @949:54...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@961effd9
debug: Cache hit: 'non-negative measure' VC for lemmaForallNotContainsCannotContain @949:54...
info Verified: 550 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsCannotContain @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@763190aa
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsCannotContain @?:?...
info Verified: 551 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallNotContainsCannotContain @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8a942753
debug: Cache hit: 'measure decreases' VC for lemmaForallNotContainsCannotContain @?:?...
info Verified: 552 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsCannotContain @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@418c234c
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsCannotContain @?:?...
info Verified: 553 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsCannotContain @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f51bce66
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsCannotContain @?:?...
info Verified: 554 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsCannotContain @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f51bce66
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsCannotContain @?:?...
info Verified: 555 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaRemoveLastPrefixStillPrefix @382:65...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@690096a2
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaRemoveLastPrefixStillPrefix @382:65...
info Verified: 556 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveLastPrefixStillPrefix[B](p... (require 1/3))' VC for lemmaRemoveLastPrefixStillPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@63e39ee1
debug: Cache hit: 'precond. (call lemmaRemoveLastPrefixStillPrefix[B](p... (require 1/3))' VC for lemmaRemoveLastPrefixStillPrefix @?:?...
info Verified: 557 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveLastPrefixStillPrefix[B](p... (require 2/3))' VC for lemmaRemoveLastPrefixStillPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4676b2dd
debug: Cache hit: 'precond. (call lemmaRemoveLastPrefixStillPrefix[B](p... (require 2/3))' VC for lemmaRemoveLastPrefixStillPrefix @?:?...
info Verified: 558 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveLastPrefixStillPrefix[B](p... (require 3/3))' VC for lemmaRemoveLastPrefixStillPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c6d2386c
debug: Cache hit: 'precond. (call lemmaRemoveLastPrefixStillPrefix[B](p... (require 3/3))' VC for lemmaRemoveLastPrefixStillPrefix @?:?...
info Verified: 559 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastPrefixStillPrefix @386:27...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e7b43bf6
debug: Cache hit: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastPrefixStillPrefix @386:27...
info Verified: 560 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastPrefixStillPrefix @386:27...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6ff56245
debug: Cache hit: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastPrefixStillPrefix @386:27...
info Verified: 561 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastPrefixStillPrefix @386:27...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6ff56245
debug: Cache hit: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastPrefixStillPrefix @386:27...
info Verified: 562 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaRemoveLastPrefixStillPrefix @386:38...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e2b4d2fa
debug: Cache hit: 'non-negative measure' VC for lemmaRemoveLastPrefixStillPrefix @386:38...
info Verified: 563 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/3) of lemmaRemoveLastPrefixStillPrefix' VC for lemmaRemoveLastPrefixStillPrefix @382:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6d2d041c
debug: Cache hit: 'body assertion: Inlined precondition (1/3) of lemmaRemoveLastPrefixStillPrefix' VC for lemmaRemoveLastPrefixStillPrefix @382:28...
info Verified: 564 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/3) of lemmaRemoveLastPrefixStillPrefix' VC for lemmaRemoveLastPrefixStillPrefix @382:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7be2573e
debug: Cache hit: 'body assertion: Inlined precondition (2/3) of lemmaRemoveLastPrefixStillPrefix' VC for lemmaRemoveLastPrefixStillPrefix @382:28...
info Verified: 565 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/3) of lemmaRemoveLastPrefixStillPrefix' VC for lemmaRemoveLastPrefixStillPrefix @382:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7cbd2b5a
debug: Cache hit: 'body assertion: Inlined precondition (3/3) of lemmaRemoveLastPrefixStillPrefix' VC for lemmaRemoveLastPrefixStillPrefix @382:28...
info Verified: 566 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaRemoveLastPrefixStillPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4111a00c
debug: Cache hit: 'measure decreases' VC for lemmaRemoveLastPrefixStillPrefix @?:?...
info Verified: 567 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastPrefixStillPrefix @382:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@76f960ed
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastPrefixStillPrefix @382:28...
info Verified: 568 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastPrefixStillPrefix @383:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1e318007
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastPrefixStillPrefix @383:28...
info Verified: 569 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaRemoveLastPrefixStillPrefix @381:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6ff56245
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaRemoveLastPrefixStillPrefix @381:5...
info Verified: 570 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastPrefixStillPrefix @381:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6ff56245
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastPrefixStillPrefix @381:5...
info Verified: 571 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsThenInOtherList[B]... (require 1/2))' VC for lemmaForallContainsThenInOtherList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e71e612d
debug: Cache hit: 'precond. (call lemmaForallContainsThenInOtherList[B]... (require 1/2))' VC for lemmaForallContainsThenInOtherList @?:?...
info Verified: 572 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsThenInOtherList[B]... (require 2/2))' VC for lemmaForallContainsThenInOtherList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d7c2e9be
debug: Cache hit: 'precond. (call lemmaForallContainsThenInOtherList[B]... (require 2/2))' VC for lemmaForallContainsThenInOtherList @?:?...
info Verified: 573 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallContainsThenInOtherList @776:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fea404ed
debug: Cache hit: 'non-negative measure' VC for lemmaForallContainsThenInOtherList @776:5...
info Verified: 574 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsThenInOtherList @777:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@953c938d
debug: Cache hit: 'postcondition' VC for lemmaForallContainsThenInOtherList @777:39...
info Verified: 575 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsThenInOtherList' VC for lemmaForallContainsThenInOtherList @778:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@39dd60e9
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsThenInOtherList' VC for lemmaForallContainsThenInOtherList @778:39...
info Verified: 576 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsThenInOtherList' VC for lemmaForallContainsThenInOtherList @778:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e3152e7d
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsThenInOtherList' VC for lemmaForallContainsThenInOtherList @778:39...
info Verified: 577 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallContainsThenInOtherList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d83e12d
debug: Cache hit: 'measure decreases' VC for lemmaForallContainsThenInOtherList @?:?...
info Verified: 578 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsThenInOtherList @778:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3d8afe2d
debug: Cache hit: 'postcondition' VC for lemmaForallContainsThenInOtherList @778:39...
info Verified: 579 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsThenInOtherList @779:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bee6c9fa
debug: Cache hit: 'postcondition' VC for lemmaForallContainsThenInOtherList @779:39...
info Verified: 580 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallContainsThenInOtherList @776:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1b174ee6
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallContainsThenInOtherList @776:5...
info Verified: 581 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsThenInOtherList @776:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1b174ee6
debug: Cache hit: 'postcondition' VC for lemmaForallContainsThenInOtherList @776:5...
info Verified: 582 / 982
debug:  - Checking cache: 'precond. (call head[B](l2))' VC for lemmaChangeCutStillConcatTotal @353:47...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@76d924b8
debug: Cache hit: 'precond. (call head[B](l2))' VC for lemmaChangeCutStillConcatTotal @353:47...
info Verified: 583 / 982
debug:  - Checking cache: 'precond. (call tail[B](l2))' VC for lemmaChangeCutStillConcatTotal @353:57...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@76d924b8
debug: Cache hit: 'precond. (call tail[B](l2))' VC for lemmaChangeCutStillConcatTotal @353:57...
info Verified: 584 / 982
debug:  - Checking cache: 'precond. (call head[B](l2))' VC for lemmaChangeCutStillConcatTotal @355:27...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@82f23aea
debug: Cache hit: 'precond. (call head[B](l2))' VC for lemmaChangeCutStillConcatTotal @355:27...
info Verified: 585 / 982
debug:  - Checking cache: 'precond. (call tail[B](l2))' VC for lemmaChangeCutStillConcatTotal @355:40...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f67df6ea
debug: Cache hit: 'precond. (call tail[B](l2))' VC for lemmaChangeCutStillConcatTotal @355:40...
info Verified: 586 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaChangeCutStillConcatTotal @353:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1ae89ab6
debug: Cache hit: 'postcondition' VC for lemmaChangeCutStillConcatTotal @353:5...
info Verified: 587 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaTwoListsConcatAssociativity @333:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5aa5e2dc
debug: Cache hit: 'non-negative measure' VC for lemmaTwoListsConcatAssociativity @333:15...
info Verified: 588 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaTwoListsConcatAssociativity @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3863fe02
debug: Cache hit: 'measure decreases' VC for lemmaTwoListsConcatAssociativity @?:?...
info Verified: 589 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTwoListsConcatAssociativity @336:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5b1a9e3b
debug: Cache hit: 'postcondition' VC for lemmaTwoListsConcatAssociativity @336:9...
info Verified: 590 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTwoListsConcatAssociativity @338:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3f5b7f25
debug: Cache hit: 'postcondition' VC for lemmaTwoListsConcatAssociativity @338:21...
info Verified: 591 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaTwoListsConcatAssociativity @334:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: match exhaustiveness' VC for lemmaTwoListsConcatAssociativity @334:5...
info Verified: 592 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTwoListsConcatAssociativity @334:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for lemmaTwoListsConcatAssociativity @334:5...
info Verified: 593 / 982
debug:  - Checking cache: 'non-negative measure' VC for reverseList @30:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@16897d10
debug: Cache hit: 'non-negative measure' VC for reverseList @30:5...
info Verified: 594 / 982
debug:  - Checking cache: 'measure decreases' VC for reverseList @31:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bce88d7a
debug: Cache hit: 'measure decreases' VC for reverseList @31:28...
info Verified: 595 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for reverseList @30:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: match exhaustiveness' VC for reverseList @30:5...
info Verified: 596 / 982
debug:  - Checking cache: 'precond. (call tail[B](scrut._1))' VC for lemmaIsPrefixThenSmallerEqSize @493:57...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a28fed46
debug: Cache hit: 'precond. (call tail[B](scrut._1))' VC for lemmaIsPrefixThenSmallerEqSize @493:57...
info Verified: 597 / 982
debug:  - Checking cache: 'precond. (call tail[B](scrut._2))' VC for lemmaIsPrefixThenSmallerEqSize @493:66...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@476e6fca
debug: Cache hit: 'precond. (call tail[B](scrut._2))' VC for lemmaIsPrefixThenSmallerEqSize @493:66...
info Verified: 598 / 982
debug:  - Checking cache: 'precond. (call lemmaIsPrefixThenSmallerEqSize[B](p, l))' VC for lemmaIsPrefixThenSmallerEqSize @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ff6ebb3d
debug: Cache hit: 'precond. (call lemmaIsPrefixThenSmallerEqSize[B](p, l))' VC for lemmaIsPrefixThenSmallerEqSize @?:?...
info Verified: 599 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaIsPrefixThenSmallerEqSize @495:25...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b44f2323
debug: Cache hit: 'non-negative measure' VC for lemmaIsPrefixThenSmallerEqSize @495:25...
info Verified: 600 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsPrefixThenSmallerEqSize @491:26...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6b8c5b4
debug: Cache hit: 'postcondition' VC for lemmaIsPrefixThenSmallerEqSize @491:26...
info Verified: 601 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsPrefixThenSmallerEqSize @492:26...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@37bf7113
debug: Cache hit: 'postcondition' VC for lemmaIsPrefixThenSmallerEqSize @492:26...
info Verified: 602 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaIsPrefixThenSmallerEqSize' VC for lemmaIsPrefixThenSmallerEqSize @493:26...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bc2dc095
debug: Cache hit: 'body assertion: Inlined precondition of lemmaIsPrefixThenSmallerEqSize' VC for lemmaIsPrefixThenSmallerEqSize @493:26...
info Verified: 603 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaIsPrefixThenSmallerEqSize @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e57bf289
debug: Cache hit: 'measure decreases' VC for lemmaIsPrefixThenSmallerEqSize @?:?...
info Verified: 604 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsPrefixThenSmallerEqSize @493:26...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2e2215e0
debug: Cache hit: 'postcondition' VC for lemmaIsPrefixThenSmallerEqSize @493:26...
info Verified: 605 / 982
debug:  - Checking cache: 'precond. (call head[B](l2))' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1189:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b375b49e
debug: Cache hit: 'precond. (call head[B](l2))' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1189:16...
info Verified: 606 / 982
debug:  - Checking cache: 'precond. (call tail[B](l2))' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1191:58...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5120fc15
debug: Cache hit: 'precond. (call tail[B](l2))' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1191:58...
info Verified: 607 / 982
debug:  - Checking cache: 'precond. (call lemmaSameContentSameSizeSmallerEqOneS... (require 1/3))' VC for lemmaSameContentSameSizeSmallerEqOneSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3f834904
debug: Cache hit: 'precond. (call lemmaSameContentSameSizeSmallerEqOneS... (require 1/3))' VC for lemmaSameContentSameSizeSmallerEqOneSameList @?:?...
info Verified: 608 / 982
debug:  - Checking cache: 'precond. (call lemmaSameContentSameSizeSmallerEqOneS... (require 2/3))' VC for lemmaSameContentSameSizeSmallerEqOneSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@882f0850
debug: Cache hit: 'precond. (call lemmaSameContentSameSizeSmallerEqOneS... (require 2/3))' VC for lemmaSameContentSameSizeSmallerEqOneSameList @?:?...
info Verified: 609 / 982
debug:  - Checking cache: 'precond. (call lemmaSameContentSameSizeSmallerEqOneS... (require 3/3))' VC for lemmaSameContentSameSizeSmallerEqOneSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ac8e9598
debug: Cache hit: 'precond. (call lemmaSameContentSameSizeSmallerEqOneS... (require 3/3))' VC for lemmaSameContentSameSizeSmallerEqOneSameList @?:?...
info Verified: 610 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1186:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bacb4bd7
debug: Cache hit: 'body assertion' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1186:16...
info Verified: 611 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1189:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bd23b3ca
debug: Cache hit: 'body assertion' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1189:16...
info Verified: 612 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1190:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@39a34abc
debug: Cache hit: 'body assertion' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1190:16...
info Verified: 613 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1182:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@faa27fbb
debug: Cache hit: 'non-negative measure' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1182:15...
info Verified: 614 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1186:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ca966da
debug: Cache hit: 'postcondition' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1186:9...
info Verified: 615 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/3) of lemmaSameContentSameSizeSmallerEqOneSameList' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1191:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@99c9a187
debug: Cache hit: 'body assertion: Inlined precondition (1/3) of lemmaSameContentSameSizeSmallerEqOneSameList' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1191:9...
info Verified: 616 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/3) of lemmaSameContentSameSizeSmallerEqOneSameList' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1191:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dcd1164e
debug: Cache hit: 'body assertion: Inlined precondition (2/3) of lemmaSameContentSameSizeSmallerEqOneSameList' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1191:9...
info Verified: 617 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/3) of lemmaSameContentSameSizeSmallerEqOneSameList' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1191:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@27774905
debug: Cache hit: 'body assertion: Inlined precondition (3/3) of lemmaSameContentSameSizeSmallerEqOneSameList' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1191:9...
info Verified: 618 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSameContentSameSizeSmallerEqOneSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c5bb1fda
debug: Cache hit: 'measure decreases' VC for lemmaSameContentSameSizeSmallerEqOneSameList @?:?...
info Verified: 619 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1191:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@834520
debug: Cache hit: 'postcondition' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1191:9...
info Verified: 620 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1184:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dc3bc8f7
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1184:5...
info Verified: 621 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1184:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dc3bc8f7
debug: Cache hit: 'postcondition' VC for lemmaSameContentSameSizeSmallerEqOneSameList @1184:5...
info Verified: 622 / 982
debug:  - Checking cache: 'precond. (call lemmaSubseqOfEmptyIsEmpty[B]((scrut.t... (require 1/2))' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@68fb987b
debug: Cache hit: 'precond. (call lemmaSubseqOfEmptyIsEmpty[B]((scrut.t... (require 1/2))' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
info Verified: 623 / 982
debug:  - Checking cache: 'precond. (call lemmaSubseqOfEmptyIsEmpty[B]((scrut.t... (require 2/2))' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@617d09ff
debug: Cache hit: 'precond. (call lemmaSubseqOfEmptyIsEmpty[B]((scrut.t... (require 2/2))' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
info Verified: 624 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaSubseqOfEmptyIsEmpty @628:44...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1491cf2f
debug: Cache hit: 'non-negative measure' VC for lemmaSubseqOfEmptyIsEmpty @628:44...
info Verified: 625 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4ea18507
debug: Cache hit: 'postcondition' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
info Verified: 626 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9b4c579f
debug: Cache hit: 'measure decreases' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
info Verified: 627 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f0211e17
debug: Cache hit: 'postcondition' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
info Verified: 628 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7e1f8dda
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
info Verified: 629 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7e1f8dda
debug: Cache hit: 'postcondition' VC for lemmaSubseqOfEmptyIsEmpty @?:?...
info Verified: 630 / 982
debug:  - Checking cache: 'precond. (call lemmaSubsetContentThenForallContains[...)' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@18a85b02
debug: Cache hit: 'precond. (call lemmaSubsetContentThenForallContains[...)' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 631 / 982
debug:  - Checking cache: 'precond. (call lemmaSubsetContentThenForallContains[...)' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@22253f8e
debug: Cache hit: 'precond. (call lemmaSubsetContentThenForallContains[...)' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 632 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveOneElmtPreservesNoDuplicat...)' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4984b7e1
debug: Cache hit: 'precond. (call lemmaRemoveOneElmtPreservesNoDuplicat...)' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 633 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 1/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b153ce3c
debug: Cache hit: 'precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 1/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 634 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 2/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e46c0489
debug: Cache hit: 'precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 2/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 635 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsPreservedRemoveElm...)' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ecda7ae3
debug: Cache hit: 'precond. (call lemmaForallContainsPreservedRemoveElm...)' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 636 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 1/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a3bfcee
debug: Cache hit: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 1/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 637 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 2/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c0e98ee6
debug: Cache hit: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 2/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 638 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 1/3))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c4e61453
debug: Cache hit: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 1/3))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 639 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 2/3))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5ca737c3
debug: Cache hit: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 2/3))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 640 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 3/3))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2b8d884
debug: Cache hit: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 3/3))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 641 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 1/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a507302f
debug: Cache hit: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 1/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 642 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 2/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7462b9c
debug: Cache hit: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 2/2))' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 643 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)' VC for lemmaNoDuplicatePreservedSameContent @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5245ec76
debug: Cache hit: 'precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)' VC for lemmaNoDuplicatePreservedSameContent @?:?...
info Verified: 644 / 982
debug:  - Checking cache: 'precond. (call lemmaNoDuplicatePreservedSameContent[... (require 1/3))' VC for lemmaNoDuplicatePreservedSameContent @1098:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5a557c2b
debug: Cache hit: 'precond. (call lemmaNoDuplicatePreservedSameContent[... (require 1/3))' VC for lemmaNoDuplicatePreservedSameContent @1098:9...
info Verified: 645 / 982
debug:  - Checking cache: 'precond. (call lemmaNoDuplicatePreservedSameContent[... (require 2/3))' VC for lemmaNoDuplicatePreservedSameContent @1098:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b2d30977
debug: Cache hit: 'precond. (call lemmaNoDuplicatePreservedSameContent[... (require 2/3))' VC for lemmaNoDuplicatePreservedSameContent @1098:9...
info Verified: 646 / 982
debug:  - Checking cache: 'precond. (call lemmaNoDuplicatePreservedSameContent[... (require 3/3))' VC for lemmaNoDuplicatePreservedSameContent @1098:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cf1ab331
debug: Cache hit: 'precond. (call lemmaNoDuplicatePreservedSameContent[... (require 3/3))' VC for lemmaNoDuplicatePreservedSameContent @1098:9...
info Verified: 647 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1067:12...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1c1241bb
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1067:12...
info Verified: 648 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1068:12...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cf360771
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1068:12...
info Verified: 649 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1072:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@82c67784
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1072:16...
info Verified: 650 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1077:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9eb45c11
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1077:16...
info Verified: 651 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1079:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@70bbe480
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1079:16...
info Verified: 652 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1081:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2946886e
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1081:16...
info Verified: 653 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1082:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@38380e1b
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1082:16...
info Verified: 654 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1083:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1ee62e24
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1083:16...
info Verified: 655 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1084:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a66196a
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1084:16...
info Verified: 656 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1089:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fd4f8383
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1089:16...
info Verified: 657 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1092:18...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3e64a775
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1092:18...
info Verified: 658 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1093:18...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3c990561
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1093:18...
info Verified: 659 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1094:18...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d030633f
debug: Cache hit: 'body assertion' VC for lemmaNoDuplicatePreservedSameContent @1094:18...
info Verified: 660 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaNoDuplicatePreservedSameContent @1101:37...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cf402844
debug: Cache hit: 'non-negative measure' VC for lemmaNoDuplicatePreservedSameContent @1101:37...
info Verified: 661 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaSubsetContentThenForallContains' VC for lemmaNoDuplicatePreservedSameContent @1065:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@91f18597
debug: Cache hit: 'body assertion: Inlined precondition of lemmaSubsetContentThenForallContains' VC for lemmaNoDuplicatePreservedSameContent @1065:5...
info Verified: 662 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaSubsetContentThenForallContains' VC for lemmaNoDuplicatePreservedSameContent @1066:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4caa71bd
debug: Cache hit: 'body assertion: Inlined precondition of lemmaSubsetContentThenForallContains' VC for lemmaNoDuplicatePreservedSameContent @1066:5...
info Verified: 663 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaNoDuplicatePreservedSameContent @1101:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b1767c88
debug: Cache hit: 'postcondition' VC for lemmaNoDuplicatePreservedSameContent @1101:15...
info Verified: 664 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaRemoveOneElmtPreservesNoDuplicate' VC for lemmaNoDuplicatePreservedSameContent @1074:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9b8c2ef4
debug: Cache hit: 'body assertion: Inlined precondition of lemmaRemoveOneElmtPreservesNoDuplicate' VC for lemmaNoDuplicatePreservedSameContent @1074:9...
info Verified: 665 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne' VC for lemmaNoDuplicatePreservedSameContent @1075:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5bd55f13
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne' VC for lemmaNoDuplicatePreservedSameContent @1075:9...
info Verified: 666 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne' VC for lemmaNoDuplicatePreservedSameContent @1075:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4db37b49
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne' VC for lemmaNoDuplicatePreservedSameContent @1075:9...
info Verified: 667 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaForallContainsPreservedRemoveElmt' VC for lemmaNoDuplicatePreservedSameContent @1078:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5f46483f
debug: Cache hit: 'body assertion: Inlined precondition of lemmaForallContainsPreservedRemoveElmt' VC for lemmaNoDuplicatePreservedSameContent @1078:9...
info Verified: 668 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaNoDuplicatePreservedSameContent @1080:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f3410f8b
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaNoDuplicatePreservedSameContent @1080:9...
info Verified: 669 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaNoDuplicatePreservedSameContent @1080:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fd920cbf
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaNoDuplicatePreservedSameContent @1080:9...
info Verified: 670 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/3) of lemmaForallContainsPreservedRemoveElmtInRefList' VC for lemmaNoDuplicatePreservedSameContent @1086:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9c695a40
debug: Cache hit: 'body assertion: Inlined precondition (1/3) of lemmaForallContainsPreservedRemoveElmtInRefList' VC for lemmaNoDuplicatePreservedSameContent @1086:9...
info Verified: 671 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/3) of lemmaForallContainsPreservedRemoveElmtInRefList' VC for lemmaNoDuplicatePreservedSameContent @1086:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@180d9e8c
debug: Cache hit: 'body assertion: Inlined precondition (2/3) of lemmaForallContainsPreservedRemoveElmtInRefList' VC for lemmaNoDuplicatePreservedSameContent @1086:9...
info Verified: 672 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/3) of lemmaForallContainsPreservedRemoveElmtInRefList' VC for lemmaNoDuplicatePreservedSameContent @1086:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ce613d09
debug: Cache hit: 'body assertion: Inlined precondition (3/3) of lemmaForallContainsPreservedRemoveElmtInRefList' VC for lemmaNoDuplicatePreservedSameContent @1086:9...
info Verified: 673 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of check' VC for lemmaNoDuplicatePreservedSameContent @1087:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1b9c391
debug: Cache hit: 'body assertion: Inlined precondition of check' VC for lemmaNoDuplicatePreservedSameContent @1087:9...
info Verified: 674 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaNoDuplicatePreservedSameContent @1088:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2eee685a
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaNoDuplicatePreservedSameContent @1088:9...
info Verified: 675 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaNoDuplicatePreservedSameContent @1088:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1e4b333c
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaNoDuplicatePreservedSameContent @1088:9...
info Verified: 676 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller' VC for lemmaNoDuplicatePreservedSameContent @1091:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5245ec76
debug: Cache hit: 'body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller' VC for lemmaNoDuplicatePreservedSameContent @1091:11...
info Verified: 677 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of check' VC for lemmaNoDuplicatePreservedSameContent @1095:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d00750a8
debug: Cache hit: 'body assertion: Inlined precondition of check' VC for lemmaNoDuplicatePreservedSameContent @1095:11...
info Verified: 678 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaNoDuplicatePreservedSameContent @1098:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@52790cd8
debug: Cache hit: 'measure decreases' VC for lemmaNoDuplicatePreservedSameContent @1098:9...
info Verified: 679 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaNoDuplicatePreservedSameContent @1101:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9b8fbf74
debug: Cache hit: 'postcondition' VC for lemmaNoDuplicatePreservedSameContent @1101:15...
info Verified: 680 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaNoDuplicatePreservedSameContent @1069:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4f6cb87f
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaNoDuplicatePreservedSameContent @1069:5...
info Verified: 681 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaNoDuplicatePreservedSameContent @1101:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4f6cb87f
debug: Cache hit: 'postcondition' VC for lemmaNoDuplicatePreservedSameContent @1101:15...
info Verified: 682 / 982
debug:  - Checking cache: 'precond. (call forallContainsSubset[B](lIn, l))' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @822:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e96674b8
debug: Cache hit: 'precond. (call forallContainsSubset[B](lIn, l))' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @822:9...
info Verified: 683 / 982
debug:  - Checking cache: 'precond. (call subsetContains[B]((scrut.t): @DropVCs...)' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @827:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@45b02ce2
debug: Cache hit: 'precond. (call subsetContains[B]((scrut.t): @DropVCs...)' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @827:9...
info Verified: 684 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 1/2))' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a600cce0
debug: Cache hit: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 1/2))' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @?:?...
info Verified: 685 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 2/2))' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a20f6fcf
debug: Cache hit: 'precond. (call lemmaForallContainsAndNoDuplicateThen... (require 2/2))' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @?:?...
info Verified: 686 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fe7aa92f
debug: Cache hit: 'precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @?:?...
info Verified: 687 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @823:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b0edea17
debug: Cache hit: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @823:16...
info Verified: 688 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @824:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1881f548
debug: Cache hit: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @824:16...
info Verified: 689 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @826:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3ee2e5c4
debug: Cache hit: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @826:16...
info Verified: 690 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @829:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dbe3e5d9
debug: Cache hit: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @829:16...
info Verified: 691 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @830:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5ffd05d
debug: Cache hit: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @830:16...
info Verified: 692 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @831:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e3ff6dcd
debug: Cache hit: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @831:16...
info Verified: 693 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @832:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a422e9f5
debug: Cache hit: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @832:16...
info Verified: 694 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @834:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2531509a
debug: Cache hit: 'body assertion' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @834:16...
info Verified: 695 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @817:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2d70d39d
debug: Cache hit: 'non-negative measure' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @817:15...
info Verified: 696 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @828:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c5da7dc1
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @828:9...
info Verified: 697 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @828:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d77ddd6b
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaForallContainsAndNoDuplicateThenSmallerList' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @828:9...
info Verified: 698 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@55f12122
debug: Cache hit: 'measure decreases' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @?:?...
info Verified: 699 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @833:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fe7aa92f
debug: Cache hit: 'body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @833:9...
info Verified: 700 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @834:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c516204a
debug: Cache hit: 'postcondition' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @834:9...
info Verified: 701 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @836:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8815a8aa
debug: Cache hit: 'postcondition' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @836:21...
info Verified: 702 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @819:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6b760d97
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @819:5...
info Verified: 703 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @819:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6b760d97
debug: Cache hit: 'postcondition' VC for lemmaForallContainsAndNoDuplicateThenSmallerList @819:5...
info Verified: 704 / 982
debug:  - Checking cache: 'precond. (call lemmaSubsetContentThenForallContains[...)' VC for lemmaSubsetContentThenForallContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@88b98470
debug: Cache hit: 'precond. (call lemmaSubsetContentThenForallContains[...)' VC for lemmaSubsetContentThenForallContains @?:?...
info Verified: 705 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaSubsetContentThenForallContains @1119:55...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@81ff3928
debug: Cache hit: 'non-negative measure' VC for lemmaSubsetContentThenForallContains @1119:55...
info Verified: 706 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubsetContentThenForallContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3db0a5cd
debug: Cache hit: 'postcondition' VC for lemmaSubsetContentThenForallContains @?:?...
info Verified: 707 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubsetContentThenForallContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d51f75e2
debug: Cache hit: 'measure decreases' VC for lemmaSubsetContentThenForallContains @?:?...
info Verified: 708 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubsetContentThenForallContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9814ac2d
debug: Cache hit: 'postcondition' VC for lemmaSubsetContentThenForallContains @?:?...
info Verified: 709 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaSubsetContentThenForallContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e50ae479
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaSubsetContentThenForallContains @?:?...
info Verified: 710 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubsetContentThenForallContains @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e50ae479
debug: Cache hit: 'postcondition' VC for lemmaSubsetContentThenForallContains @?:?...
info Verified: 711 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 1/3))' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a04be5e1
debug: Cache hit: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 1/3))' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
info Verified: 712 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 2/3))' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cc8a3e47
debug: Cache hit: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 2/3))' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
info Verified: 713 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 3/3))' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@df1ac2fd
debug: Cache hit: 'precond. (call lemmaForallContainsPreservedRemoveElm... (require 3/3))' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
info Verified: 714 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallContainsPreservedRemoveElmtInRefList @901:66...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6f14ea6b
debug: Cache hit: 'non-negative measure' VC for lemmaForallContainsPreservedRemoveElmtInRefList @901:66...
info Verified: 715 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d8734ede
debug: Cache hit: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
info Verified: 716 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c9a04ee5
debug: Cache hit: 'measure decreases' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
info Verified: 717 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f1c17fd7
debug: Cache hit: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
info Verified: 718 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b4a493f8
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
info Verified: 719 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b4a493f8
debug: Cache hit: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmtInRefList @?:?...
info Verified: 720 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)' VC for lemmaRemoveElmtContainedSizeSmaller @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9093e04a
debug: Cache hit: 'precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)' VC for lemmaRemoveElmtContainedSizeSmaller @?:?...
info Verified: 721 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)' VC for lemmaRemoveElmtContainedSizeSmaller @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6dfcb733
debug: Cache hit: 'precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)' VC for lemmaRemoveElmtContainedSizeSmaller @?:?...
info Verified: 722 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaRemoveElmtContainedSizeSmaller @991:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5a66538f
debug: Cache hit: 'body assertion' VC for lemmaRemoveElmtContainedSizeSmaller @991:16...
info Verified: 723 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaRemoveElmtContainedSizeSmaller @999:30...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6c487874
debug: Cache hit: 'non-negative measure' VC for lemmaRemoveElmtContainedSizeSmaller @999:30...
info Verified: 724 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller' VC for lemmaRemoveElmtContainedSizeSmaller @993:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9093e04a
debug: Cache hit: 'body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller' VC for lemmaRemoveElmtContainedSizeSmaller @993:11...
info Verified: 725 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaRemoveElmtContainedSizeSmaller @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7c9c0329
debug: Cache hit: 'measure decreases' VC for lemmaRemoveElmtContainedSizeSmaller @?:?...
info Verified: 726 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveElmtContainedSizeSmaller @993:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c557eb73
debug: Cache hit: 'postcondition' VC for lemmaRemoveElmtContainedSizeSmaller @993:11...
info Verified: 727 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveElmtContainedSizeSmaller @994:10...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4a90447d
debug: Cache hit: 'postcondition' VC for lemmaRemoveElmtContainedSizeSmaller @994:10...
info Verified: 728 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller' VC for lemmaRemoveElmtContainedSizeSmaller @996:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@47315e35
debug: Cache hit: 'body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller' VC for lemmaRemoveElmtContainedSizeSmaller @996:28...
info Verified: 729 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaRemoveElmtContainedSizeSmaller @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@942b5057
debug: Cache hit: 'measure decreases' VC for lemmaRemoveElmtContainedSizeSmaller @?:?...
info Verified: 730 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveElmtContainedSizeSmaller @996:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@15112a2a
debug: Cache hit: 'postcondition' VC for lemmaRemoveElmtContainedSizeSmaller @996:28...
info Verified: 731 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of check' VC for lemmaRemoveElmtContainedSizeSmaller @997:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@98f1dbb6
debug: Cache hit: 'body assertion: Inlined precondition of check' VC for lemmaRemoveElmtContainedSizeSmaller @997:28...
info Verified: 732 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveElmtContainedSizeSmaller @997:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b8694c9e
debug: Cache hit: 'postcondition' VC for lemmaRemoveElmtContainedSizeSmaller @997:28...
info Verified: 733 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaRemoveElmtContainedSizeSmaller @989:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@427314b4
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaRemoveElmtContainedSizeSmaller @989:5...
info Verified: 734 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveElmtContainedSizeSmaller @989:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@427314b4
debug: Cache hit: 'postcondition' VC for lemmaRemoveElmtContainedSizeSmaller @989:5...
info Verified: 735 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveOneElmtNotContainedSameLis...)' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@eb0f71c4
debug: Cache hit: 'precond. (call lemmaRemoveOneElmtNotContainedSameLis...)' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @?:?...
info Verified: 736 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 1/2))' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2aa8b152
debug: Cache hit: 'precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 1/2))' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @?:?...
info Verified: 737 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 2/2))' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f2274de7
debug: Cache hit: 'precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 2/2))' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @?:?...
info Verified: 738 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1014:44...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@62badc1
debug: Cache hit: 'non-negative measure' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1014:44...
info Verified: 739 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1009:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a94b2caa
debug: Cache hit: 'postcondition' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1009:39...
info Verified: 740 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaRemoveOneElmtNotContainedSameList' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1010:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fe27bbda
debug: Cache hit: 'body assertion: Inlined precondition of lemmaRemoveOneElmtNotContainedSameList' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1010:39...
info Verified: 741 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1010:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f294a058
debug: Cache hit: 'postcondition' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1010:39...
info Verified: 742 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1011:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7e06cb93
debug: Cache hit: 'body assertion: Inlined precondition (1/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1011:39...
info Verified: 743 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1011:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ce717aa9
debug: Cache hit: 'body assertion: Inlined precondition (2/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1011:39...
info Verified: 744 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@397ad951
debug: Cache hit: 'measure decreases' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @?:?...
info Verified: 745 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1011:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1b17e78
debug: Cache hit: 'postcondition' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1011:39...
info Verified: 746 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1008:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f59e947a
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1008:5...
info Verified: 747 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1008:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f59e947a
debug: Cache hit: 'postcondition' VC for lemmaRemoveOneElmtNoDuplicateSizeMinusOne @1008:5...
info Verified: 748 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveOneElmtNotContainedSameLis...)' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f42c048b
debug: Cache hit: 'precond. (call lemmaRemoveOneElmtNotContainedSameLis...)' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
info Verified: 749 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaRemoveOneElmtNotContainedSameList @1105:57...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b911dd9e
debug: Cache hit: 'non-negative measure' VC for lemmaRemoveOneElmtNotContainedSameList @1105:57...
info Verified: 750 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6393e15
debug: Cache hit: 'postcondition' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
info Verified: 751 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e106cba8
debug: Cache hit: 'measure decreases' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
info Verified: 752 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b9a8a476
debug: Cache hit: 'postcondition' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
info Verified: 753 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7cd69bf8
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
info Verified: 754 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7cd69bf8
debug: Cache hit: 'postcondition' VC for lemmaRemoveOneElmtNotContainedSameList @?:?...
info Verified: 755 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveOneElmtPreservesNoDuplicat...)' VC for lemmaRemoveOneElmtPreservesNoDuplicate @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9b2a1ec3
debug: Cache hit: 'precond. (call lemmaRemoveOneElmtPreservesNoDuplicat...)' VC for lemmaRemoveOneElmtPreservesNoDuplicate @?:?...
info Verified: 756 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaRemoveOneElmtPreservesNoDuplicate @1112:57...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d3da3aa1
debug: Cache hit: 'non-negative measure' VC for lemmaRemoveOneElmtPreservesNoDuplicate @1112:57...
info Verified: 757 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveOneElmtPreservesNoDuplicate @1115:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ce129bb1
debug: Cache hit: 'postcondition' VC for lemmaRemoveOneElmtPreservesNoDuplicate @1115:15...
info Verified: 758 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaRemoveOneElmtPreservesNoDuplicate @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c9ca67c2
debug: Cache hit: 'measure decreases' VC for lemmaRemoveOneElmtPreservesNoDuplicate @?:?...
info Verified: 759 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveOneElmtPreservesNoDuplicate @1115:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@11c7c00d
debug: Cache hit: 'postcondition' VC for lemmaRemoveOneElmtPreservesNoDuplicate @1115:15...
info Verified: 760 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaRemoveOneElmtPreservesNoDuplicate @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@19931c59
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaRemoveOneElmtPreservesNoDuplicate @?:?...
info Verified: 761 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveOneElmtPreservesNoDuplicate @1115:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@19931c59
debug: Cache hit: 'postcondition' VC for lemmaRemoveOneElmtPreservesNoDuplicate @1115:15...
info Verified: 762 / 982
debug:  - Checking cache: 'precond. (call head[B](l))' VC for lemmaContainsAndNotHdThenTlContains @182:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2ccd176c
debug: Cache hit: 'precond. (call head[B](l))' VC for lemmaContainsAndNotHdThenTlContains @182:13...
info Verified: 763 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaContainsAndNotHdThenTlContains @184:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c5a9819a
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaContainsAndNotHdThenTlContains @184:15...
info Verified: 764 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaContainsAndNotHdThenTlContains @180:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@835bc1b0
debug: Cache hit: 'postcondition' VC for lemmaContainsAndNotHdThenTlContains @180:7...
info Verified: 765 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfListBis @654:45...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@16904324
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfListBis @654:45...
info Verified: 766 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfListBis @654:45...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@411acf3a
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfListBis @654:45...
info Verified: 767 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfListBis @654:45...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'precond. (call tail[B](l))' VC for lemmaTailIsSubseqOfListBis @654:45...
info Verified: 768 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTailIsSubseqOfListBis @651:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8c06e567
debug: Cache hit: 'postcondition' VC for lemmaTailIsSubseqOfListBis @651:28...
info Verified: 769 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTailIsSubseqOfListBis @652:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f0b9ff5f
debug: Cache hit: 'postcondition' VC for lemmaTailIsSubseqOfListBis @652:28...
info Verified: 770 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaTailIsSubseqOfListBis @650:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: match exhaustiveness' VC for lemmaTailIsSubseqOfListBis @650:5...
info Verified: 771 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTailIsSubseqOfListBis @650:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for lemmaTailIsSubseqOfListBis @650:5...
info Verified: 772 / 982
debug:  - Checking cache: 'precond. (call subseqTail[B](l, l))' VC for lemmaTailIsSubseqOfList @640:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@157f4b6f
debug: Cache hit: 'precond. (call subseqTail[B](l, l))' VC for lemmaTailIsSubseqOfList @640:9...
info Verified: 773 / 982
debug:  - Checking cache: 'body assertion' VC for lemmaTailIsSubseqOfList @641:16...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b7544b03
debug: Cache hit: 'body assertion' VC for lemmaTailIsSubseqOfList @641:16...
info Verified: 774 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTailIsSubseqOfList @637:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d0839da7
debug: Cache hit: 'postcondition' VC for lemmaTailIsSubseqOfList @637:21...
info Verified: 775 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTailIsSubseqOfList @641:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e45f3dcd
debug: Cache hit: 'postcondition' VC for lemmaTailIsSubseqOfList @641:9...
info Verified: 776 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTailIsSubseqOfList @643:42...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c2e888e5
debug: Cache hit: 'postcondition' VC for lemmaTailIsSubseqOfList @643:42...
info Verified: 777 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaTailIsSubseqOfList @636:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: match exhaustiveness' VC for lemmaTailIsSubseqOfList @636:5...
info Verified: 778 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaTailIsSubseqOfList @636:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for lemmaTailIsSubseqOfList @636:5...
info Verified: 779 / 982
debug:  - Checking cache: 'precond. (call tail[B](l2))' VC for lemmaIsPrefixRefl @265:50...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e1a99b44
debug: Cache hit: 'precond. (call tail[B](l2))' VC for lemmaIsPrefixRefl @265:50...
info Verified: 780 / 982
debug:  - Checking cache: 'precond. (call lemmaIsPrefixRefl[B](l1, l2))' VC for lemmaIsPrefixRefl @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d7d79c32
debug: Cache hit: 'precond. (call lemmaIsPrefixRefl[B](l1, l2))' VC for lemmaIsPrefixRefl @?:?...
info Verified: 781 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaIsPrefixRefl @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dedc8586
debug: Cache hit: 'non-negative measure' VC for lemmaIsPrefixRefl @?:?...
info Verified: 782 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaIsPrefixRefl' VC for lemmaIsPrefixRefl @265:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c7bf3e07
debug: Cache hit: 'body assertion: Inlined precondition of lemmaIsPrefixRefl' VC for lemmaIsPrefixRefl @265:28...
info Verified: 783 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaIsPrefixRefl @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9ea8d155
debug: Cache hit: 'measure decreases' VC for lemmaIsPrefixRefl @?:?...
info Verified: 784 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsPrefixRefl @265:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@471435c3
debug: Cache hit: 'postcondition' VC for lemmaIsPrefixRefl @265:28...
info Verified: 785 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsPrefixRefl @266:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@eaa51f8b
debug: Cache hit: 'postcondition' VC for lemmaIsPrefixRefl @266:28...
info Verified: 786 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaIsPrefixRefl @264:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: match exhaustiveness' VC for lemmaIsPrefixRefl @264:5...
info Verified: 787 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsPrefixRefl @264:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for lemmaIsPrefixRefl @264:5...
info Verified: 788 / 982
debug:  - Checking cache: 'non-negative measure' VC for consecutiveSubseq @61:49...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@16897d10
debug: Cache hit: 'non-negative measure' VC for consecutiveSubseq @61:49...
info Verified: 789 / 982
debug:  - Checking cache: 'measure decreases' VC for consecutiveSubseq @60:46...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@960a3dde
debug: Cache hit: 'measure decreases' VC for consecutiveSubseq @60:46...
info Verified: 790 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for consecutiveSubseq @58:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: match exhaustiveness' VC for consecutiveSubseq @58:5...
info Verified: 791 / 982
debug:  - Checking cache: 'non-negative measure' VC for consecutiveSubseqAtHead @67:6...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@16897d10
debug: Cache hit: 'non-negative measure' VC for consecutiveSubseqAtHead @67:6...
info Verified: 792 / 982
debug:  - Checking cache: 'measure decreases' VC for consecutiveSubseqAtHead @70:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9e5cb808
debug: Cache hit: 'measure decreases' VC for consecutiveSubseqAtHead @70:9...
info Verified: 793 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @400:54...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bb818fc
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @400:54...
info Verified: 794 / 982
debug:  - Checking cache: 'precond. (call lemmaPrefixStaysPrefixWhenAddingToSuf...)' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c4d9613f
debug: Cache hit: 'precond. (call lemmaPrefixStaysPrefixWhenAddingToSuf...)' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @?:?...
info Verified: 795 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @403:27...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b44f2323
debug: Cache hit: 'non-negative measure' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @403:27...
info Verified: 796 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaPrefixStaysPrefixWhenAddingToSuffix' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @400:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9a934919
debug: Cache hit: 'body assertion: Inlined precondition of lemmaPrefixStaysPrefixWhenAddingToSuffix' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @400:9...
info Verified: 797 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@299b15c6
debug: Cache hit: 'measure decreases' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @?:?...
info Verified: 798 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @400:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ea1532c4
debug: Cache hit: 'postcondition' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @400:9...
info Verified: 799 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @401:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@aa889865
debug: Cache hit: 'postcondition' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @401:21...
info Verified: 800 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @398:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@66757719
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @398:5...
info Verified: 801 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @398:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@66757719
debug: Cache hit: 'postcondition' VC for lemmaPrefixStaysPrefixWhenAddingToSuffix @398:5...
info Verified: 802 / 982
debug:  - Checking cache: 'precond. (call lemmaForallThenDisjunction2[B]((scrut...)' VC for lemmaForallThenDisjunction2 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9f6cdd93
debug: Cache hit: 'precond. (call lemmaForallThenDisjunction2[B]((scrut...)' VC for lemmaForallThenDisjunction2 @?:?...
info Verified: 803 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallThenDisjunction2 @785:46...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9bfec040
debug: Cache hit: 'non-negative measure' VC for lemmaForallThenDisjunction2 @785:46...
info Verified: 804 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallThenDisjunction2 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8a388446
debug: Cache hit: 'postcondition' VC for lemmaForallThenDisjunction2 @?:?...
info Verified: 805 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallThenDisjunction2 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dc1d9b56
debug: Cache hit: 'measure decreases' VC for lemmaForallThenDisjunction2 @?:?...
info Verified: 806 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallThenDisjunction2 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c8113d53
debug: Cache hit: 'postcondition' VC for lemmaForallThenDisjunction2 @?:?...
info Verified: 807 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallThenDisjunction2 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c229fc5
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallThenDisjunction2 @?:?...
info Verified: 808 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallThenDisjunction2 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c229fc5
debug: Cache hit: 'postcondition' VC for lemmaForallThenDisjunction2 @?:?...
info Verified: 809 / 982
debug:  - Checking cache: 'precond. (call head[B](l))' VC for lemmaGetIndexBiggerAndHeadEqThenTailContains @242:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7358482f
debug: Cache hit: 'precond. (call head[B](l))' VC for lemmaGetIndexBiggerAndHeadEqThenTailContains @242:13...
info Verified: 810 / 982
debug:  - Checking cache: 'precond. (call getIndex[B](l, e1))' VC for lemmaGetIndexBiggerAndHeadEqThenTailContains @243:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4e6e89c3
debug: Cache hit: 'precond. (call getIndex[B](l, e1))' VC for lemmaGetIndexBiggerAndHeadEqThenTailContains @243:13...
info Verified: 811 / 982
debug:  - Checking cache: 'precond. (call getIndex[B](l, e2))' VC for lemmaGetIndexBiggerAndHeadEqThenTailContains @243:31...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7c5f5541
debug: Cache hit: 'precond. (call getIndex[B](l, e2))' VC for lemmaGetIndexBiggerAndHeadEqThenTailContains @243:31...
info Verified: 812 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaGetIndexBiggerAndHeadEqThenTailContains @245:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@30b502e3
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaGetIndexBiggerAndHeadEqThenTailContains @245:15...
info Verified: 813 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaGetIndexBiggerAndHeadEqThenTailContains @235:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e4443d30
debug: Cache hit: 'postcondition' VC for lemmaGetIndexBiggerAndHeadEqThenTailContains @235:7...
info Verified: 814 / 982
debug:  - Checking cache: 'precond. (call getIndex[B]((scrut.t): @DropVCs , e))' VC for getIndex @51:43...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@de28fe91
debug: Cache hit: 'precond. (call getIndex[B]((scrut.t): @DropVCs , e))' VC for getIndex @51:43...
info Verified: 815 / 982
debug:  - Checking cache: 'non-negative measure' VC for getIndex @49:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6c487874
debug: Cache hit: 'non-negative measure' VC for getIndex @49:5...
info Verified: 816 / 982
debug:  - Checking cache: 'postcondition' VC for getIndex @50:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7ad13154
debug: Cache hit: 'postcondition' VC for getIndex @50:39...
info Verified: 817 / 982
debug:  - Checking cache: 'measure decreases' VC for getIndex @51:43...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3e84c135
debug: Cache hit: 'measure decreases' VC for getIndex @51:43...
info Verified: 818 / 982
debug:  - Checking cache: 'postcondition' VC for getIndex @51:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a7a85935
debug: Cache hit: 'postcondition' VC for getIndex @51:39...
info Verified: 819 / 982
debug:  - Checking cache: 'postcondition' VC for getIndex @52:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@45c80056
debug: Cache hit: 'postcondition' VC for getIndex @52:39...
info Verified: 820 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for getIndex @49:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@da2eabf0
debug: Cache hit: 'body assertion: match exhaustiveness' VC for getIndex @49:5...
info Verified: 821 / 982
debug:  - Checking cache: 'postcondition' VC for getIndex @49:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9f38466e
debug: Cache hit: 'postcondition' VC for getIndex @49:5...
info Verified: 822 / 982
debug:  - Checking cache: 'precond. (call lemmaIsSuffixThenSubseq[B](l1, l2))' VC for lemmaIsSuffixThenSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@64472c11
debug: Cache hit: 'precond. (call lemmaIsSuffixThenSubseq[B](l1, l2))' VC for lemmaIsSuffixThenSubseq @?:?...
info Verified: 823 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaIsSuffixThenSubseq @99:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@71b1cede
debug: Cache hit: 'non-negative measure' VC for lemmaIsSuffixThenSubseq @99:15...
info Verified: 824 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaIsSuffixThenSubseq' VC for lemmaIsSuffixThenSubseq @101:56...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2368e7a
debug: Cache hit: 'body assertion: Inlined precondition of lemmaIsSuffixThenSubseq' VC for lemmaIsSuffixThenSubseq @101:56...
info Verified: 825 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaIsSuffixThenSubseq @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@845afb2b
debug: Cache hit: 'measure decreases' VC for lemmaIsSuffixThenSubseq @?:?...
info Verified: 826 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsSuffixThenSubseq @101:56...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2b8f0775
debug: Cache hit: 'postcondition' VC for lemmaIsSuffixThenSubseq @101:56...
info Verified: 827 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsSuffixThenSubseq @102:56...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ff1551
debug: Cache hit: 'postcondition' VC for lemmaIsSuffixThenSubseq @102:56...
info Verified: 828 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaIsSuffixThenSubseq @103:56...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6e30563c
debug: Cache hit: 'postcondition' VC for lemmaIsSuffixThenSubseq @103:56...
info Verified: 829 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for getSuffix @41:38...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@411a578b
debug: Cache hit: 'precond. (call tail[B](l))' VC for getSuffix @41:38...
info Verified: 830 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](tail[B](l), (scrut.t): @... (require 1/2))' VC for getSuffix @41:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a8f43c99
debug: Cache hit: 'precond. (call getSuffix[B](tail[B](l), (scrut.t): @... (require 1/2))' VC for getSuffix @41:28...
info Verified: 831 / 982
debug:  - Checking cache: 'precond. (call getSuffix[B](tail[B](l), (scrut.t): @... (require 2/2))' VC for getSuffix @41:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1a9350b0
debug: Cache hit: 'precond. (call getSuffix[B](tail[B](l), (scrut.t): @... (require 2/2))' VC for getSuffix @41:28...
info Verified: 832 / 982
debug:  - Checking cache: 'non-negative measure' VC for getSuffix @44:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8d0a7d0
debug: Cache hit: 'non-negative measure' VC for getSuffix @44:34...
info Verified: 833 / 982
debug:  - Checking cache: 'measure decreases' VC for getSuffix @41:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c7512ee5
debug: Cache hit: 'measure decreases' VC for getSuffix @41:28...
info Verified: 834 / 982
debug:  - Checking cache: 'postcondition' VC for getSuffix @41:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@265c3273
debug: Cache hit: 'postcondition' VC for getSuffix @41:28...
info Verified: 835 / 982
debug:  - Checking cache: 'postcondition' VC for getSuffix @44:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@249a6826
debug: Cache hit: 'postcondition' VC for getSuffix @44:34...
info Verified: 836 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for getSuffix @40:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cbc73892
debug: Cache hit: 'body assertion: match exhaustiveness' VC for getSuffix @40:5...
info Verified: 837 / 982
debug:  - Checking cache: 'postcondition' VC for getSuffix @40:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cbc73892
debug: Cache hit: 'postcondition' VC for getSuffix @40:5...
info Verified: 838 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsForConcat[B]((s... (require 1/2))' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@86aea3b7
debug: Cache hit: 'precond. (call lemmaForallNotContainsForConcat[B]((s... (require 1/2))' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 839 / 982
debug:  - Checking cache: 'precond. (call lemmaForallNotContainsForConcat[B]((s... (require 2/2))' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@639aee09
debug: Cache hit: 'precond. (call lemmaForallNotContainsForConcat[B]((s... (require 2/2))' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 840 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallNotContainsForConcat @933:50...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2330795
debug: Cache hit: 'non-negative measure' VC for lemmaForallNotContainsForConcat @933:50...
info Verified: 841 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@96243855
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 842 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@646534cc
debug: Cache hit: 'measure decreases' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 843 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@347f5082
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 844 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@87dd0abb
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 845 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@87dd0abb
debug: Cache hit: 'postcondition' VC for lemmaForallNotContainsForConcat @?:?...
info Verified: 846 / 982
debug:  - Checking cache: 'precond. (call noDuplicateConcatListNotContainedPres... (require 1/3))' VC for noDuplicateConcatListNotContainedPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8c3e1161
debug: Cache hit: 'precond. (call noDuplicateConcatListNotContainedPres... (require 1/3))' VC for noDuplicateConcatListNotContainedPreserves @?:?...
info Verified: 847 / 982
debug:  - Checking cache: 'precond. (call noDuplicateConcatListNotContainedPres... (require 2/3))' VC for noDuplicateConcatListNotContainedPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3252de80
debug: Cache hit: 'precond. (call noDuplicateConcatListNotContainedPres... (require 2/3))' VC for noDuplicateConcatListNotContainedPreserves @?:?...
info Verified: 848 / 982
debug:  - Checking cache: 'precond. (call noDuplicateConcatListNotContainedPres... (require 3/3))' VC for noDuplicateConcatListNotContainedPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f5ba126a
debug: Cache hit: 'precond. (call noDuplicateConcatListNotContainedPres... (require 3/3))' VC for noDuplicateConcatListNotContainedPreserves @?:?...
info Verified: 849 / 982
debug:  - Checking cache: 'non-negative measure' VC for noDuplicateConcatListNotContainedPreserves @1037:35...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f131375c
debug: Cache hit: 'non-negative measure' VC for noDuplicateConcatListNotContainedPreserves @1037:35...
info Verified: 850 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/3) of noDuplicateConcatListNotContainedPreserves' VC for noDuplicateConcatListNotContainedPreserves @1033:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cea574ba
debug: Cache hit: 'body assertion: Inlined precondition (1/3) of noDuplicateConcatListNotContainedPreserves' VC for noDuplicateConcatListNotContainedPreserves @1033:28...
info Verified: 851 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/3) of noDuplicateConcatListNotContainedPreserves' VC for noDuplicateConcatListNotContainedPreserves @1033:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c152247
debug: Cache hit: 'body assertion: Inlined precondition (2/3) of noDuplicateConcatListNotContainedPreserves' VC for noDuplicateConcatListNotContainedPreserves @1033:28...
info Verified: 852 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/3) of noDuplicateConcatListNotContainedPreserves' VC for noDuplicateConcatListNotContainedPreserves @1033:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@69596d8f
debug: Cache hit: 'body assertion: Inlined precondition (3/3) of noDuplicateConcatListNotContainedPreserves' VC for noDuplicateConcatListNotContainedPreserves @1033:28...
info Verified: 853 / 982
debug:  - Checking cache: 'measure decreases' VC for noDuplicateConcatListNotContainedPreserves @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d58cdf7b
debug: Cache hit: 'measure decreases' VC for noDuplicateConcatListNotContainedPreserves @?:?...
info Verified: 854 / 982
debug:  - Checking cache: 'postcondition' VC for noDuplicateConcatListNotContainedPreserves @1033:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8b37d9b7
debug: Cache hit: 'postcondition' VC for noDuplicateConcatListNotContainedPreserves @1033:28...
info Verified: 855 / 982
debug:  - Checking cache: 'postcondition' VC for noDuplicateConcatListNotContainedPreserves @1034:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f67b8c58
debug: Cache hit: 'postcondition' VC for noDuplicateConcatListNotContainedPreserves @1034:28...
info Verified: 856 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for noDuplicateConcatListNotContainedPreserves @1032:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c5c50e11
debug: Cache hit: 'body assertion: match exhaustiveness' VC for noDuplicateConcatListNotContainedPreserves @1032:5...
info Verified: 857 / 982
debug:  - Checking cache: 'postcondition' VC for noDuplicateConcatListNotContainedPreserves @1032:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c5c50e11
debug: Cache hit: 'postcondition' VC for noDuplicateConcatListNotContainedPreserves @1032:5...
info Verified: 858 / 982
debug:  - Checking cache: 'precond. (call tail[B](tot))' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @368:64...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4c5609e4
debug: Cache hit: 'precond. (call tail[B](tot))' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @368:64...
info Verified: 859 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveLastConcatenatedPrefixStil...)' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@96d524f
debug: Cache hit: 'precond. (call lemmaRemoveLastConcatenatedPrefixStil...)' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @?:?...
info Verified: 860 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @371:24...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@edd51d85
debug: Cache hit: 'non-negative measure' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @371:24...
info Verified: 861 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaRemoveLastConcatenatedPrefixStillPrefix' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @368:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@71d8b1d4
debug: Cache hit: 'body assertion: Inlined precondition of lemmaRemoveLastConcatenatedPrefixStillPrefix' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @368:9...
info Verified: 862 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a5d0e1b6
debug: Cache hit: 'measure decreases' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @?:?...
info Verified: 863 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @368:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2575e713
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @368:9...
info Verified: 864 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @369:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@432f6f81
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @369:21...
info Verified: 865 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @366:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9057be27
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @366:5...
info Verified: 866 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @366:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9057be27
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastConcatenatedPrefixStillPrefix @366:5...
info Verified: 867 / 982
debug:  - Checking cache: 'precond. (call lemmaForallContainsPreservedRemoveElm...)' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2c19bdb9
debug: Cache hit: 'precond. (call lemmaForallContainsPreservedRemoveElm...)' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
info Verified: 868 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallContainsPreservedRemoveElmt @894:57...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2c60f1aa
debug: Cache hit: 'non-negative measure' VC for lemmaForallContainsPreservedRemoveElmt @894:57...
info Verified: 869 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ddf8f0eb
debug: Cache hit: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
info Verified: 870 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@847df640
debug: Cache hit: 'measure decreases' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
info Verified: 871 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b3939f09
debug: Cache hit: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
info Verified: 872 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cfe6892f
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
info Verified: 873 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cfe6892f
debug: Cache hit: 'postcondition' VC for lemmaForallContainsPreservedRemoveElmt @?:?...
info Verified: 874 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaSubseqRefl @619:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5aa5e2dc
debug: Cache hit: 'non-negative measure' VC for lemmaSubseqRefl @619:15...
info Verified: 875 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubseqRefl @621:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a33dc964
debug: Cache hit: 'postcondition' VC for lemmaSubseqRefl @621:28...
info Verified: 876 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaSubseqRefl @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@528b7de0
debug: Cache hit: 'measure decreases' VC for lemmaSubseqRefl @?:?...
info Verified: 877 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubseqRefl @622:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@21da8854
debug: Cache hit: 'postcondition' VC for lemmaSubseqRefl @622:28...
info Verified: 878 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaSubseqRefl @620:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: match exhaustiveness' VC for lemmaSubseqRefl @620:5...
info Verified: 879 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaSubseqRefl @620:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for lemmaSubseqRefl @620:5...
info Verified: 880 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromLMakesItPrefix @459:24...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromLMakesItPrefix @459:24...
info Verified: 881 / 982
debug:  - Checking cache: 'precond. (call lemmaRemoveLastFromLMakesItPrefix[B](l))' VC for lemmaRemoveLastFromLMakesItPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'precond. (call lemmaRemoveLastFromLMakesItPrefix[B](l))' VC for lemmaRemoveLastFromLMakesItPrefix @?:?...
info Verified: 882 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromLMakesItPrefix @459:24...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@7f23159d
debug: Cache hit: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromLMakesItPrefix @459:24...
info Verified: 883 / 982
debug:  - Checking cache: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromLMakesItPrefix @459:24...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'precond. (call removeLast[B](l))' VC for lemmaRemoveLastFromLMakesItPrefix @459:24...
info Verified: 884 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaRemoveLastFromLMakesItPrefix @459:39...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dc283cb1
debug: Cache hit: 'non-negative measure' VC for lemmaRemoveLastFromLMakesItPrefix @459:39...
info Verified: 885 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastFromLMakesItPrefix @455:31...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@46a1cbf
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastFromLMakesItPrefix @455:31...
info Verified: 886 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaRemoveLastFromLMakesItPrefix' VC for lemmaRemoveLastFromLMakesItPrefix @456:31...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5d7d5ccc
debug: Cache hit: 'body assertion: Inlined precondition of lemmaRemoveLastFromLMakesItPrefix' VC for lemmaRemoveLastFromLMakesItPrefix @456:31...
info Verified: 887 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaRemoveLastFromLMakesItPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ef7d5c78
debug: Cache hit: 'measure decreases' VC for lemmaRemoveLastFromLMakesItPrefix @?:?...
info Verified: 888 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastFromLMakesItPrefix @456:31...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cbe9b524
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastFromLMakesItPrefix @456:31...
info Verified: 889 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaRemoveLastFromLMakesItPrefix @454:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@41da8b2b
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaRemoveLastFromLMakesItPrefix @454:5...
info Verified: 890 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemoveLastFromLMakesItPrefix @454:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1091c8b
debug: Cache hit: 'postcondition' VC for lemmaRemoveLastFromLMakesItPrefix @454:5...
info Verified: 891 / 982
debug:  - Checking cache: 'precond. (call last[B](l))' VC for removeLast @26:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'precond. (call last[B](l))' VC for removeLast @26:34...
info Verified: 892 / 982
debug:  - Checking cache: 'precond. (call removeLast[B]((scrut.t): @DropVCs ))' VC for removeLast @23:40...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5d7d5ccc
debug: Cache hit: 'precond. (call removeLast[B]((scrut.t): @DropVCs ))' VC for removeLast @23:40...
info Verified: 893 / 982
debug:  - Checking cache: 'precond. (call last[B](l))' VC for removeLast @26:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@eae6a9cd
debug: Cache hit: 'precond. (call last[B](l))' VC for removeLast @26:34...
info Verified: 894 / 982
debug:  - Checking cache: 'precond. (call last[B](l))' VC for removeLast @26:34...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'precond. (call last[B](l))' VC for removeLast @26:34...
info Verified: 895 / 982
debug:  - Checking cache: 'non-negative measure' VC for removeLast @26:45...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dc283cb1
debug: Cache hit: 'non-negative measure' VC for removeLast @26:45...
info Verified: 896 / 982
debug:  - Checking cache: 'postcondition' VC for removeLast @22:31...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@2b6b8994
debug: Cache hit: 'postcondition' VC for removeLast @22:31...
info Verified: 897 / 982
debug:  - Checking cache: 'measure decreases' VC for removeLast @23:40...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@85e9709
debug: Cache hit: 'measure decreases' VC for removeLast @23:40...
info Verified: 898 / 982
debug:  - Checking cache: 'postcondition' VC for removeLast @23:31...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cee0069b
debug: Cache hit: 'postcondition' VC for removeLast @23:31...
info Verified: 899 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for removeLast @21:24...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@41da8b2b
debug: Cache hit: 'body assertion: match exhaustiveness' VC for removeLast @21:24...
info Verified: 900 / 982
debug:  - Checking cache: 'postcondition' VC for removeLast @21:24...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@61e461fe
debug: Cache hit: 'postcondition' VC for removeLast @21:24...
info Verified: 901 / 982
debug:  - Checking cache: 'precond. (call lemmaForallThenDisjunction1[B]((scrut...)' VC for lemmaForallThenDisjunction1 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9f6cdd93
debug: Cache hit: 'precond. (call lemmaForallThenDisjunction1[B]((scrut...)' VC for lemmaForallThenDisjunction1 @?:?...
info Verified: 902 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaForallThenDisjunction1 @791:46...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9bfec040
debug: Cache hit: 'non-negative measure' VC for lemmaForallThenDisjunction1 @791:46...
info Verified: 903 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallThenDisjunction1 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5b530fbe
debug: Cache hit: 'postcondition' VC for lemmaForallThenDisjunction1 @?:?...
info Verified: 904 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaForallThenDisjunction1 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dc1d9b56
debug: Cache hit: 'measure decreases' VC for lemmaForallThenDisjunction1 @?:?...
info Verified: 905 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallThenDisjunction1 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9ce34adf
debug: Cache hit: 'postcondition' VC for lemmaForallThenDisjunction1 @?:?...
info Verified: 906 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaForallThenDisjunction1 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c229fc5
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaForallThenDisjunction1 @?:?...
info Verified: 907 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaForallThenDisjunction1 @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c229fc5
debug: Cache hit: 'postcondition' VC for lemmaForallThenDisjunction1 @?:?...
info Verified: 908 / 982
debug:  - Checking cache: 'precond. (call tail[B](p2))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @301:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@3919d6b4
debug: Cache hit: 'precond. (call tail[B](p2))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @301:11...
info Verified: 909 / 982
debug:  - Checking cache: 'precond. (call tail[B](l))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @302:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ddf85938
debug: Cache hit: 'precond. (call tail[B](l))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @302:11...
info Verified: 910 / 982
debug:  - Checking cache: 'precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 1/4))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4093c69a
debug: Cache hit: 'precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 1/4))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @?:?...
info Verified: 911 / 982
debug:  - Checking cache: 'precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 2/4))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b14b1a39
debug: Cache hit: 'precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 2/4))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @?:?...
info Verified: 912 / 982
debug:  - Checking cache: 'precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 3/4))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8da96a1b
debug: Cache hit: 'precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 3/4))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @?:?...
info Verified: 913 / 982
debug:  - Checking cache: 'precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 4/4))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@549dc235
debug: Cache hit: 'precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 4/4))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @?:?...
info Verified: 914 / 982
debug:  - Checking cache: 'precond. (call head[B](s1))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @306:27...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@96cb4be3
debug: Cache hit: 'precond. (call head[B](s1))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @306:27...
info Verified: 915 / 982
debug:  - Checking cache: 'precond. (call head[B](s1))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @306:27...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6c24a4f2
debug: Cache hit: 'precond. (call head[B](s1))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @306:27...
info Verified: 916 / 982
debug:  - Checking cache: 'precond. (call head[B](s1))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @306:27...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ebfae3ef
debug: Cache hit: 'precond. (call head[B](s1))' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @306:27...
info Verified: 917 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @302:11...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@87f0bb51
debug: Cache hit: 'non-negative measure' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @302:11...
info Verified: 918 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (1/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @298:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e1e8aae6
debug: Cache hit: 'body assertion: Inlined precondition (1/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @298:9...
info Verified: 919 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (2/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @298:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b996672a
debug: Cache hit: 'body assertion: Inlined precondition (2/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @298:9...
info Verified: 920 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (3/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @298:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a75e0896
debug: Cache hit: 'body assertion: Inlined precondition (3/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @298:9...
info Verified: 921 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition (4/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @298:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@4883ae94
debug: Cache hit: 'body assertion: Inlined precondition (4/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @298:9...
info Verified: 922 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@665c4260
debug: Cache hit: 'measure decreases' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @?:?...
info Verified: 923 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @298:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dfb7761e
debug: Cache hit: 'postcondition' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @298:9...
info Verified: 924 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @304:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@caa8b6a8
debug: Cache hit: 'postcondition' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @304:21...
info Verified: 925 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @296:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ebfae3ef
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @296:5...
info Verified: 926 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @296:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@ebfae3ef
debug: Cache hit: 'postcondition' VC for lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref @296:5...
info Verified: 927 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaConcatTwoListThenFirstIsPrefix @278:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@16897d10
debug: Cache hit: 'non-negative measure' VC for lemmaConcatTwoListThenFirstIsPrefix @278:28...
info Verified: 928 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaConcatTwoListThenFirstIsPrefix @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@bce88d7a
debug: Cache hit: 'measure decreases' VC for lemmaConcatTwoListThenFirstIsPrefix @?:?...
info Verified: 929 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatTwoListThenFirstIsPrefix @275:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@537e2f67
debug: Cache hit: 'postcondition' VC for lemmaConcatTwoListThenFirstIsPrefix @275:28...
info Verified: 930 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatTwoListThenFirstIsPrefix @276:28...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8d9c4a4c
debug: Cache hit: 'postcondition' VC for lemmaConcatTwoListThenFirstIsPrefix @276:28...
info Verified: 931 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaConcatTwoListThenFirstIsPrefix @274:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'body assertion: match exhaustiveness' VC for lemmaConcatTwoListThenFirstIsPrefix @274:5...
info Verified: 932 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaConcatTwoListThenFirstIsPrefix @274:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for lemmaConcatTwoListThenFirstIsPrefix @274:5...
info Verified: 933 / 982
debug:  - Checking cache: 'precond. (call head[B](scrut._1))' VC for isPrefix @14:13...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@adab87db
debug: Cache hit: 'precond. (call head[B](scrut._1))' VC for isPrefix @14:13...
info Verified: 934 / 982
debug:  - Checking cache: 'precond. (call head[B](scrut._2))' VC for isPrefix @14:24...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6eb650a9
debug: Cache hit: 'precond. (call head[B](scrut._2))' VC for isPrefix @14:24...
info Verified: 935 / 982
debug:  - Checking cache: 'precond. (call tail[B](scrut._1))' VC for isPrefix @14:42...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@94ae2d42
debug: Cache hit: 'precond. (call tail[B](scrut._1))' VC for isPrefix @14:42...
info Verified: 936 / 982
debug:  - Checking cache: 'precond. (call tail[B](scrut._2))' VC for isPrefix @14:51...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@55b8f610
debug: Cache hit: 'precond. (call tail[B](scrut._2))' VC for isPrefix @14:51...
info Verified: 937 / 982
debug:  - Checking cache: 'non-negative measure' VC for isPrefix @9:7...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1727e1ce
debug: Cache hit: 'non-negative measure' VC for isPrefix @9:7...
info Verified: 938 / 982
debug:  - Checking cache: 'postcondition' VC for isPrefix @16:31...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@df3e9b28
debug: Cache hit: 'postcondition' VC for isPrefix @16:31...
info Verified: 939 / 982
debug:  - Checking cache: 'postcondition' VC for isPrefix @16:58...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for isPrefix @16:58...
info Verified: 940 / 982
debug:  - Checking cache: 'postcondition' VC for isPrefix @16:31...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@142ed9ec
debug: Cache hit: 'postcondition' VC for isPrefix @16:31...
info Verified: 941 / 982
debug:  - Checking cache: 'postcondition' VC for isPrefix @16:58...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for isPrefix @16:58...
info Verified: 942 / 982
debug:  - Checking cache: 'measure decreases' VC for isPrefix @14:33...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5fc459b2
debug: Cache hit: 'measure decreases' VC for isPrefix @14:33...
info Verified: 943 / 982
debug:  - Checking cache: 'postcondition' VC for isPrefix @16:31...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@45765925
debug: Cache hit: 'postcondition' VC for isPrefix @16:31...
info Verified: 944 / 982
debug:  - Checking cache: 'postcondition' VC for isPrefix @16:58...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@c498b377
debug: Cache hit: 'postcondition' VC for isPrefix @16:58...
info Verified: 945 / 982
debug:  - Checking cache: 'postcondition' VC for isPrefix @16:31...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b40e9f2f
debug: Cache hit: 'postcondition' VC for isPrefix @16:31...
info Verified: 946 / 982
debug:  - Checking cache: 'postcondition' VC for isPrefix @16:58...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a1f1804f
debug: Cache miss: 'postcondition' VC for isPrefix @16:58...
info Verified: 947 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](l, suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:33...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@424e7ebe
debug: Cache hit: 'precond. (call getPrefix[B](l, suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:33...
info Verified: 948 / 982
debug:  - Checking cache: 'precond. (call head[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:62...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@23d0c94a
debug: Cache hit: 'precond. (call head[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:62...
info Verified: 949 / 982
debug:  - Checking cache: 'precond. (call tail[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:91...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a2edef5
debug: Cache hit: 'precond. (call tail[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:91...
info Verified: 950 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](l, tail[B](suffix)))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:78...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f41df139
debug: Cache hit: 'precond. (call getPrefix[B](l, tail[B](suffix)))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:78...
info Verified: 951 / 982
debug:  - Checking cache: 'precond. (call lemmaRemovingHeadOfSuffixThenGetPrefi...)' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@e76ea225
debug: Cache hit: 'precond. (call lemmaRemovingHeadOfSuffixThenGetPrefi...)' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @?:?...
info Verified: 952 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](l, suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:33...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@cfe0f703
debug: Cache hit: 'precond. (call getPrefix[B](l, suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:33...
info Verified: 953 / 982
debug:  - Checking cache: 'precond. (call head[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:62...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a5c0bc24
debug: Cache hit: 'precond. (call head[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:62...
info Verified: 954 / 982
debug:  - Checking cache: 'precond. (call tail[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:91...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8b77c2de
debug: Cache hit: 'precond. (call tail[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:91...
info Verified: 955 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](l, tail[B](suffix)))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:78...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@8f058fe5
debug: Cache hit: 'precond. (call getPrefix[B](l, tail[B](suffix)))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:78...
info Verified: 956 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](l, suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:33...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@dddcb1e2
debug: Cache hit: 'precond. (call getPrefix[B](l, suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:33...
info Verified: 957 / 982
debug:  - Checking cache: 'precond. (call head[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:62...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@1e89b8d2
debug: Cache hit: 'precond. (call head[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:62...
info Verified: 958 / 982
debug:  - Checking cache: 'precond. (call tail[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:91...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@557605f
debug: Cache hit: 'precond. (call tail[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:91...
info Verified: 959 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](l, tail[B](suffix)))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:78...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@fe6a54b4
debug: Cache hit: 'precond. (call getPrefix[B](l, tail[B](suffix)))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:78...
info Verified: 960 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](l, suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:33...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@505a860e
debug: Cache hit: 'precond. (call getPrefix[B](l, suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:33...
info Verified: 961 / 982
debug:  - Checking cache: 'precond. (call head[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:62...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@505a860e
debug: Cache hit: 'precond. (call head[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:62...
info Verified: 962 / 982
debug:  - Checking cache: 'precond. (call tail[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:91...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@505a860e
debug: Cache hit: 'precond. (call tail[B](suffix))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:91...
info Verified: 963 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B](l, tail[B](suffix)))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:78...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@505a860e
debug: Cache hit: 'precond. (call getPrefix[B](l, tail[B](suffix)))' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @145:78...
info Verified: 964 / 982
debug:  - Checking cache: 'non-negative measure' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @135:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6034ad7c
debug: Cache hit: 'non-negative measure' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @135:15...
info Verified: 965 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @138:55...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@d1901058
debug: Cache hit: 'postcondition' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @138:55...
info Verified: 966 / 982
debug:  - Checking cache: 'body assertion: Inlined precondition of lemmaRemovingHeadOfSuffixThenGetPrefixLonger' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @140:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@606f048d
debug: Cache hit: 'body assertion: Inlined precondition of lemmaRemovingHeadOfSuffixThenGetPrefixLonger' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @140:9...
info Verified: 967 / 982
debug:  - Checking cache: 'measure decreases' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @?:?...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@938004cb
debug: Cache hit: 'measure decreases' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @?:?...
info Verified: 968 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @140:9...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@179a7a16
debug: Cache hit: 'postcondition' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @140:9...
info Verified: 969 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @142:21...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@9e691a76
debug: Cache hit: 'postcondition' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @142:21...
info Verified: 970 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @137:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@505a860e
debug: Cache hit: 'body assertion: match exhaustiveness' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @137:5...
info Verified: 971 / 982
debug:  - Checking cache: 'postcondition' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @137:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@505a860e
debug: Cache hit: 'postcondition' VC for lemmaRemovingHeadOfSuffixThenGetPrefixLonger @137:5...
info Verified: 972 / 982
debug:  - Checking cache: 'precond. (call getPrefix[B]((scrut.t): @DropVCs , su...)' VC for getPrefix @90:64...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@606f048d
debug: Cache hit: 'precond. (call getPrefix[B]((scrut.t): @DropVCs , su...)' VC for getPrefix @90:64...
info Verified: 973 / 982
debug:  - Checking cache: 'non-negative measure' VC for getPrefix @87:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@6034ad7c
debug: Cache hit: 'non-negative measure' VC for getPrefix @87:15...
info Verified: 974 / 982
debug:  - Checking cache: 'postcondition' VC for getPrefix @89:55...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@f6ffcbdd
debug: Cache hit: 'postcondition' VC for getPrefix @89:55...
info Verified: 975 / 982
debug:  - Checking cache: 'measure decreases' VC for getPrefix @90:64...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@b84b0623
debug: Cache hit: 'measure decreases' VC for getPrefix @90:64...
info Verified: 976 / 982
debug:  - Checking cache: 'postcondition' VC for getPrefix @90:55...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@eb5d8176
debug: Cache hit: 'postcondition' VC for getPrefix @90:55...
info Verified: 977 / 982
debug:  - Checking cache: 'postcondition' VC for getPrefix @91:55...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@909fa457
debug: Cache hit: 'postcondition' VC for getPrefix @91:55...
info Verified: 978 / 982
debug:  - Checking cache: 'body assertion: match exhaustiveness' VC for getPrefix @88:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@505a860e
debug: Cache hit: 'body assertion: match exhaustiveness' VC for getPrefix @88:5...
info Verified: 979 / 982
debug:  - Checking cache: 'postcondition' VC for getPrefix @88:5...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@505a860e
debug: Cache hit: 'postcondition' VC for getPrefix @88:5...
info Verified: 980 / 982
debug:  - Checking cache: 'non-negative measure' VC for isSuffix @76:15...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@5aa5e2dc
debug: Cache hit: 'non-negative measure' VC for isSuffix @76:15...
info Verified: 981 / 982
debug:  - Checking cache: 'measure decreases' VC for isSuffix @78:62...
DEBUG SAM: tested key = inox.utils.Serializer$SerializationResult@a6e7dfde
debug: Cache hit: 'measure decreases' VC for isSuffix @78:62...
info Verified: 982 / 982
Done in 29.65s
  
 stainless summary 
                                                                                                                                                                                                                  
                           concatWithoutDuplicates                                           measure decreases                                                                                               valid from cache     0.0 
                           concatWithoutDuplicates                                           measure decreases                                                                                               valid from cache     0.0 
                           concatWithoutDuplicates                                           precond. (call concatWithoutDuplicates[B](baseList, ...)                                                        valid from cache     0.0 
                           concatWithoutDuplicates                                           precond. (call concatWithoutDuplicates[B](baseList, ...)                                                        valid from cache     0.0 
ListUtils.scala:571:15:    concatWithoutDuplicates                                           non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:573:5:     concatWithoutDuplicates                                           body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:573:5:     concatWithoutDuplicates                                           postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:575:9:     concatWithoutDuplicates                                           body assertion: Inlined precondition of concatWithoutDuplicates                                                 valid from cache     0.0 
ListUtils.scala:575:9:     concatWithoutDuplicates                                           postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:577:9:     concatWithoutDuplicates                                           body assertion: Inlined precondition of concatWithoutDuplicates                                                 valid from cache     0.0 
ListUtils.scala:577:9:     concatWithoutDuplicates                                           postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:580:51:    concatWithoutDuplicates                                           postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:58:5:      consecutiveSubseq                                                 body assertion: match exhaustiveness                                                                            trivial              0.0 
ListUtils.scala:60:46:     consecutiveSubseq                                                 measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:61:49:     consecutiveSubseq                                                 non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:67:6:      consecutiveSubseqAtHead                                           non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:70:9:      consecutiveSubseqAtHead                                           measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:49:5:      getIndex                                                          body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:49:5:      getIndex                                                          non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:49:5:      getIndex                                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:50:39:     getIndex                                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:51:39:     getIndex                                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:51:43:     getIndex                                                          measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:51:43:     getIndex                                                          precond. (call getIndex[B]((scrut.t): @DropVCs , e))                                                            valid from cache     0.0 
ListUtils.scala:52:39:     getIndex                                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:87:15:     getPrefix                                                         non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:88:5:      getPrefix                                                         body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:88:5:      getPrefix                                                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:89:55:     getPrefix                                                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:90:55:     getPrefix                                                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:90:64:     getPrefix                                                         measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:90:64:     getPrefix                                                         precond. (call getPrefix[B]((scrut.t): @DropVCs , su...)                                                        valid from cache     0.0 
ListUtils.scala:91:55:     getPrefix                                                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:40:5:      getSuffix                                                         body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:40:5:      getSuffix                                                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:41:28:     getSuffix                                                         measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:41:28:     getSuffix                                                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:41:28:     getSuffix                                                         precond. (call getSuffix[B](tail[B](l), (scrut.t): @... (require 1/2))                                          valid from cache     0.0 
ListUtils.scala:41:28:     getSuffix                                                         precond. (call getSuffix[B](tail[B](l), (scrut.t): @... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:41:38:     getSuffix                                                         precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:44:34:     getSuffix                                                         non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:44:34:     getSuffix                                                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:9:7:       isPrefix                                                          non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:14:13:     isPrefix                                                          precond. (call head[B](scrut._1))                                                                               valid from cache     0.0 
ListUtils.scala:14:24:     isPrefix                                                          precond. (call head[B](scrut._2))                                                                               valid from cache     0.0 
ListUtils.scala:14:33:     isPrefix                                                          measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:14:42:     isPrefix                                                          precond. (call tail[B](scrut._1))                                                                               valid from cache     0.0 
ListUtils.scala:14:51:     isPrefix                                                          precond. (call tail[B](scrut._2))                                                                               valid from cache     0.0 
ListUtils.scala:16:31:     isPrefix                                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:16:31:     isPrefix                                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:16:31:     isPrefix                                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:16:31:     isPrefix                                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:16:58:     isPrefix                                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:16:58:     isPrefix                                                          postcondition                                                                                                   trivial              0.0 
ListUtils.scala:16:58:     isPrefix                                                          postcondition                                                                                                   trivial              0.0 
ListUtils.scala:16:58:     isPrefix                                                          postcondition                                                                                                   trivial              0.0 
ListUtils.scala:76:15:     isSuffix                                                          non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:78:62:     isSuffix                                                          measure decreases                                                                                               valid from cache     0.0 
                           lemmaAddHeadSuffixToPrefixStillPrefix                             measure decreases                                                                                               valid from cache     0.0 
                           lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call lemmaAddHeadSuffixToPrefixStillPrefix... (require 1/2))                                          valid from cache     0.0 
                           lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call lemmaAddHeadSuffixToPrefixStillPrefix... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:504:5:     lemmaAddHeadSuffixToPrefixStillPrefix                             body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:504:5:     lemmaAddHeadSuffixToPrefixStillPrefix                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:505:28:    lemmaAddHeadSuffixToPrefixStillPrefix                             body assertion: Inlined precondition (1/2) of lemmaAddHeadSuffixToPrefixStillPrefix                             valid from cache     0.0 
ListUtils.scala:505:28:    lemmaAddHeadSuffixToPrefixStillPrefix                             body assertion: Inlined precondition (2/2) of lemmaAddHeadSuffixToPrefixStillPrefix                             valid from cache     0.0 
ListUtils.scala:505:28:    lemmaAddHeadSuffixToPrefixStillPrefix                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:505:70:    lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:506:28:    lemmaAddHeadSuffixToPrefixStillPrefix                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:508:34:    lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call getSuffix[B](l, p) (require 1/2))                                                                valid from cache     0.0 
ListUtils.scala:508:34:    lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call getSuffix[B](l, p) (require 1/2))                                                                valid from cache     0.0 
ListUtils.scala:508:34:    lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call getSuffix[B](l, p) (require 1/2))                                                                valid from cache     0.0 
ListUtils.scala:508:34:    lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call getSuffix[B](l, p) (require 2/2))                                                                valid from cache     0.0 
ListUtils.scala:508:34:    lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call getSuffix[B](l, p) (require 2/2))                                                                valid from cache     0.0 
ListUtils.scala:508:34:    lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call getSuffix[B](l, p) (require 2/2))                                                                valid from cache     0.0 
ListUtils.scala:508:34:    lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call head[B](getSuffix[B](l, p)))                                                                     valid from cache     0.0 
ListUtils.scala:508:34:    lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call head[B](getSuffix[B](l, p)))                                                                     valid from cache     0.0 
ListUtils.scala:508:34:    lemmaAddHeadSuffixToPrefixStillPrefix                             precond. (call head[B](getSuffix[B](l, p)))                                                                     valid from cache     0.0 
ListUtils.scala:508:57:    lemmaAddHeadSuffixToPrefixStillPrefix                             non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:353:5:     lemmaChangeCutStillConcatTotal                                    postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:353:47:    lemmaChangeCutStillConcatTotal                                    precond. (call head[B](l2))                                                                                     valid from cache     0.0 
ListUtils.scala:353:57:    lemmaChangeCutStillConcatTotal                                    precond. (call tail[B](l2))                                                                                     valid from cache     0.0 
ListUtils.scala:355:27:    lemmaChangeCutStillConcatTotal                                    precond. (call head[B](l2))                                                                                     valid from cache     0.0 
ListUtils.scala:355:40:    lemmaChangeCutStillConcatTotal                                    precond. (call tail[B](l2))                                                                                     valid from cache     0.0 
                           lemmaConcatAssociativity                                          measure decreases                                                                                               valid from cache     0.0 
                           lemmaConcatAssociativity                                          precond. (call lemmaConcatAssociativity[B](l1, elmt,...)                                                        valid from cache     0.0 
ListUtils.scala:319:12:    lemmaConcatAssociativity                                          body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:320:5:     lemmaConcatAssociativity                                          body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:320:5:     lemmaConcatAssociativity                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:321:28:    lemmaConcatAssociativity                                          body assertion: Inlined precondition of lemmaConcatAssociativity                                                valid from cache     0.0 
ListUtils.scala:321:28:    lemmaConcatAssociativity                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:321:67:    lemmaConcatAssociativity                                          precond. (call tail[B](tot))                                                                                    valid from cache     0.0 
ListUtils.scala:322:28:    lemmaConcatAssociativity                                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:324:15:    lemmaConcatAssociativity                                          non-negative measure                                                                                            valid from cache     0.0 
                           lemmaConcatThenFirstSubseqOfTot                                   measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:729:15:    lemmaConcatThenFirstSubseqOfTot                                   non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:730:5:     lemmaConcatThenFirstSubseqOfTot                                   body assertion: match exhaustiveness                                                                            trivial              0.0 
ListUtils.scala:730:5:     lemmaConcatThenFirstSubseqOfTot                                   postcondition                                                                                                   trivial              0.0 
ListUtils.scala:731:28:    lemmaConcatThenFirstSubseqOfTot                                   postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:732:28:    lemmaConcatThenFirstSubseqOfTot                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaConcatThenSecondSubseqOfTot                                  measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:739:15:    lemmaConcatThenSecondSubseqOfTot                                  non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:740:5:     lemmaConcatThenSecondSubseqOfTot                                  body assertion: match exhaustiveness                                                                            trivial              0.0 
ListUtils.scala:740:5:     lemmaConcatThenSecondSubseqOfTot                                  postcondition                                                                                                   trivial              0.0 
ListUtils.scala:741:28:    lemmaConcatThenSecondSubseqOfTot                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:742:28:    lemmaConcatThenSecondSubseqOfTot                                  postcondition                                                                                                   valid from cache     0.0 
                           lemmaConcatTwoListThenFirstIsPrefix                               measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:274:5:     lemmaConcatTwoListThenFirstIsPrefix                               body assertion: match exhaustiveness                                                                            trivial              0.0 
ListUtils.scala:274:5:     lemmaConcatTwoListThenFirstIsPrefix                               postcondition                                                                                                   trivial              0.0 
ListUtils.scala:275:28:    lemmaConcatTwoListThenFirstIsPrefix                               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:276:28:    lemmaConcatTwoListThenFirstIsPrefix                               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:278:28:    lemmaConcatTwoListThenFirstIsPrefix                               non-negative measure                                                                                            valid from cache     0.0 
                           lemmaConcatTwoListsWhichNotContainThenTotNotContain               measure decreases                                                                                               valid from cache     0.0 
                           lemmaConcatTwoListsWhichNotContainThenTotNotContain               precond. (call lemmaConcatTwoListsWhichNotContainThe... (require 1/2))                                          valid from cache     0.0 
                           lemmaConcatTwoListsWhichNotContainThenTotNotContain               precond. (call lemmaConcatTwoListsWhichNotContainThe... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:757:5:     lemmaConcatTwoListsWhichNotContainThenTotNotContain               body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:757:5:     lemmaConcatTwoListsWhichNotContainThenTotNotContain               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:758:39:    lemmaConcatTwoListsWhichNotContainThenTotNotContain               body assertion: Inlined precondition of check                                                                   valid from cache     0.0 
ListUtils.scala:758:39:    lemmaConcatTwoListsWhichNotContainThenTotNotContain               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:760:9:     lemmaConcatTwoListsWhichNotContainThenTotNotContain               body assertion: Inlined precondition (1/2) of lemmaConcatTwoListsWhichNotContainThenTotNotContain               valid from cache     0.0 
ListUtils.scala:760:9:     lemmaConcatTwoListsWhichNotContainThenTotNotContain               body assertion: Inlined precondition (2/2) of lemmaConcatTwoListsWhichNotContainThenTotNotContain               valid from cache     0.0 
ListUtils.scala:760:9:     lemmaConcatTwoListsWhichNotContainThenTotNotContain               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:761:21:    lemmaConcatTwoListsWhichNotContainThenTotNotContain               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:763:17:    lemmaConcatTwoListsWhichNotContainThenTotNotContain               non-negative measure                                                                                            valid from cache     0.0 
                           lemmaConsecutiveSubseqThenSubseq                                  measure decreases                                                                                               valid from cache     0.0 
                           lemmaConsecutiveSubseqThenSubseq                                  measure decreases                                                                                               valid from cache     0.0 
                           lemmaConsecutiveSubseqThenSubseq                                  precond. (call lemmaConsecutiveSubseqThenSubseq[B](l...)                                                        valid from cache     0.0 
                           lemmaConsecutiveSubseqThenSubseq                                  precond. (call lemmaConsecutiveSubseqThenSubseq[B](l...)                                                        valid from cache     0.0 
ListUtils.scala:167:15:    lemmaConsecutiveSubseqThenSubseq                                  non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:170:9:     lemmaConsecutiveSubseqThenSubseq                                  body assertion: Inlined precondition of lemmaConsecutiveSubseqThenSubseq                                        valid from cache     0.0 
ListUtils.scala:170:9:     lemmaConsecutiveSubseqThenSubseq                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:172:9:     lemmaConsecutiveSubseqThenSubseq                                  body assertion: Inlined precondition of lemmaConsecutiveSubseqThenSubseq                                        valid from cache     0.0 
ListUtils.scala:172:9:     lemmaConsecutiveSubseqThenSubseq                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:173:17:    lemmaConsecutiveSubseqThenSubseq                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:180:7:     lemmaContainsAndNotHdThenTlContains                               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:182:13:    lemmaContainsAndNotHdThenTlContains                               precond. (call head[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:184:15:    lemmaContainsAndNotHdThenTlContains                               precond. (call tail[B](l))                                                                                      valid from cache     0.0 
                           lemmaForallContainsAddingElmtInPreserves                          measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallContainsAddingElmtInPreserves                          precond. (call lemmaForallContainsAddingElmtInPreser... (require 1/2))                                          valid from cache     0.0 
                           lemmaForallContainsAddingElmtInPreserves                          precond. (call lemmaForallContainsAddingElmtInPreser... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:869:5:     lemmaForallContainsAddingElmtInPreserves                          body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:869:5:     lemmaForallContainsAddingElmtInPreserves                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:871:9:     lemmaForallContainsAddingElmtInPreserves                          body assertion: Inlined precondition (1/2) of lemmaForallContainsAddingElmtInPreserves                          valid from cache     0.0 
ListUtils.scala:871:9:     lemmaForallContainsAddingElmtInPreserves                          body assertion: Inlined precondition (2/2) of lemmaForallContainsAddingElmtInPreserves                          valid from cache     0.0 
ListUtils.scala:871:9:     lemmaForallContainsAddingElmtInPreserves                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:872:21:    lemmaForallContainsAddingElmtInPreserves                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:875:23:    lemmaForallContainsAddingElmtInPreserves                          non-negative measure                                                                                            valid from cache     0.0 
                           lemmaForallContainsAddingInSndListPreserves                       measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallContainsAddingInSndListPreserves                       precond. (call lemmaForallContainsAddingInSndListPre...)                                                        valid from cache     0.0 
ListUtils.scala:850:5:     lemmaForallContainsAddingInSndListPreserves                       body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:850:5:     lemmaForallContainsAddingInSndListPreserves                       postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:852:9:     lemmaForallContainsAddingInSndListPreserves                       body assertion: Inlined precondition of lemmaForallContainsAddingInSndListPreserves                             valid from cache     0.0 
ListUtils.scala:852:9:     lemmaForallContainsAddingInSndListPreserves                       postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:853:21:    lemmaForallContainsAddingInSndListPreserves                       postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:856:15:    lemmaForallContainsAddingInSndListPreserves                       non-negative measure                                                                                            valid from cache     0.0 
                           lemmaForallContainsAndNoDuplicateThenSmallerList                  measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallContainsAndNoDuplicateThenSmallerList                  precond. (call lemmaForallContainsAndNoDuplicateThen... (require 1/2))                                          valid from cache     0.0 
                           lemmaForallContainsAndNoDuplicateThenSmallerList                  precond. (call lemmaForallContainsAndNoDuplicateThen... (require 2/2))                                          valid from cache     0.0 
                           lemmaForallContainsAndNoDuplicateThenSmallerList                  precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)                                                        valid from cache     0.0 
ListUtils.scala:817:15:    lemmaForallContainsAndNoDuplicateThenSmallerList                  non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:819:5:     lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:819:5:     lemmaForallContainsAndNoDuplicateThenSmallerList                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:822:9:     lemmaForallContainsAndNoDuplicateThenSmallerList                  precond. (call forallContainsSubset[B](lIn, l))                                                                 valid from cache     0.0 
ListUtils.scala:823:16:    lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:824:16:    lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:826:16:    lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:827:9:     lemmaForallContainsAndNoDuplicateThenSmallerList                  precond. (call subsetContains[B]((scrut.t): @DropVCs...)                                                        valid from cache     0.0 
ListUtils.scala:828:9:     lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion: Inlined precondition (1/2) of lemmaForallContainsAndNoDuplicateThenSmallerList                  valid from cache     0.0 
ListUtils.scala:828:9:     lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion: Inlined precondition (2/2) of lemmaForallContainsAndNoDuplicateThenSmallerList                  valid from cache     0.0 
ListUtils.scala:829:16:    lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:830:16:    lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:831:16:    lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:832:16:    lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:833:9:     lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller                                     valid from cache     0.0 
ListUtils.scala:834:9:     lemmaForallContainsAndNoDuplicateThenSmallerList                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:834:16:    lemmaForallContainsAndNoDuplicateThenSmallerList                  body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:836:21:    lemmaForallContainsAndNoDuplicateThenSmallerList                  postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallContainsConcatPreserves                                measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallContainsConcatPreserves                                precond. (call lemmaForallContainsConcatPreserves[B]... (require 1/2))                                          valid from cache     0.0 
                           lemmaForallContainsConcatPreserves                                precond. (call lemmaForallContainsConcatPreserves[B]... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:884:5:     lemmaForallContainsConcatPreserves                                body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:884:5:     lemmaForallContainsConcatPreserves                                postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:885:21:    lemmaForallContainsConcatPreserves                                postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:887:9:     lemmaForallContainsConcatPreserves                                body assertion: Inlined precondition (1/2) of lemmaForallContainsConcatPreserves                                valid from cache     0.0 
ListUtils.scala:887:9:     lemmaForallContainsConcatPreserves                                body assertion: Inlined precondition (2/2) of lemmaForallContainsConcatPreserves                                valid from cache     0.0 
ListUtils.scala:887:9:     lemmaForallContainsConcatPreserves                                postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:890:16:    lemmaForallContainsConcatPreserves                                non-negative measure                                                                                            valid from cache     0.0 
                           lemmaForallContainsPreservedIfSameContent                         measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallContainsPreservedIfSameContent                         precond. (call lemmaForallContainsPreservedIfSameCon... (require 1/2))                                          valid from cache     0.0 
                           lemmaForallContainsPreservedIfSameContent                         precond. (call lemmaForallContainsPreservedIfSameCon... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:915:5:     lemmaForallContainsPreservedIfSameContent                         body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:915:5:     lemmaForallContainsPreservedIfSameContent                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:916:21:    lemmaForallContainsPreservedIfSameContent                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:918:9:     lemmaForallContainsPreservedIfSameContent                         precond. (call forallContained[B](l1, (b: B) => cont...)                                                        valid from cache     0.0 
ListUtils.scala:919:9:     lemmaForallContainsPreservedIfSameContent                         body assertion: Inlined precondition (1/2) of lemmaForallContainsPreservedIfSameContent                         valid from cache     0.0 
ListUtils.scala:919:9:     lemmaForallContainsPreservedIfSameContent                         body assertion: Inlined precondition (2/2) of lemmaForallContainsPreservedIfSameContent                         valid from cache     0.0 
ListUtils.scala:919:9:     lemmaForallContainsPreservedIfSameContent                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:922:15:    lemmaForallContainsPreservedIfSameContent                         non-negative measure                                                                                            valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmt                            body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmt                            measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmt                            postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmt                            postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmt                            postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmt                            precond. (call lemmaForallContainsPreservedRemoveElm...)                                                        valid from cache     0.0 
ListUtils.scala:894:57:    lemmaForallContainsPreservedRemoveElmt                            non-negative measure                                                                                            valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmtInRefList                   body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmtInRefList                   measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmtInRefList                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmtInRefList                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmtInRefList                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmtInRefList                   precond. (call lemmaForallContainsPreservedRemoveElm... (require 1/3))                                          valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmtInRefList                   precond. (call lemmaForallContainsPreservedRemoveElm... (require 2/3))                                          valid from cache     0.0 
                           lemmaForallContainsPreservedRemoveElmtInRefList                   precond. (call lemmaForallContainsPreservedRemoveElm... (require 3/3))                                          valid from cache     0.0 
ListUtils.scala:901:66:    lemmaForallContainsPreservedRemoveElmtInRefList                   non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:797:7:     lemmaForallContainsThenForEqualLists                              postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallContainsThenInOtherList                                measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallContainsThenInOtherList                                precond. (call lemmaForallContainsThenInOtherList[B]... (require 1/2))                                          valid from cache     0.0 
                           lemmaForallContainsThenInOtherList                                precond. (call lemmaForallContainsThenInOtherList[B]... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:776:5:     lemmaForallContainsThenInOtherList                                body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:776:5:     lemmaForallContainsThenInOtherList                                non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:776:5:     lemmaForallContainsThenInOtherList                                postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:777:39:    lemmaForallContainsThenInOtherList                                postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:778:39:    lemmaForallContainsThenInOtherList                                body assertion: Inlined precondition (1/2) of lemmaForallContainsThenInOtherList                                valid from cache     0.0 
ListUtils.scala:778:39:    lemmaForallContainsThenInOtherList                                body assertion: Inlined precondition (2/2) of lemmaForallContainsThenInOtherList                                valid from cache     0.0 
ListUtils.scala:778:39:    lemmaForallContainsThenInOtherList                                postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:779:39:    lemmaForallContainsThenInOtherList                                postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainedNoDupThenConcatNoDup                       body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaForallNotContainedNoDupThenConcatNoDup                       measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallNotContainedNoDupThenConcatNoDup                       precond. (call lemmaForallNotContainedNoDupThenConca... (require 1/3))                                          valid from cache     0.0 
                           lemmaForallNotContainedNoDupThenConcatNoDup                       precond. (call lemmaForallNotContainedNoDupThenConca... (require 2/3))                                          valid from cache     0.0 
                           lemmaForallNotContainedNoDupThenConcatNoDup                       precond. (call lemmaForallNotContainedNoDupThenConca... (require 3/3))                                          valid from cache     0.0 
ListUtils.scala:976:62:    lemmaForallNotContainedNoDupThenConcatNoDup                       non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:981:15:    lemmaForallNotContainedNoDupThenConcatNoDup                       postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:981:15:    lemmaForallNotContainedNoDupThenConcatNoDup                       postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:981:15:    lemmaForallNotContainedNoDupThenConcatNoDup                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsCannotContain                               body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaForallNotContainsCannotContain                               measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallNotContainsCannotContain                               postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsCannotContain                               postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsCannotContain                               postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsCannotContain                               precond. (call lemmaForallNotContainsCannotContain[B... (require 1/2))                                          valid from cache     0.0 
                           lemmaForallNotContainsCannotContain                               precond. (call lemmaForallNotContainsCannotContain[B... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:949:54:    lemmaForallNotContainsCannotContain                               non-negative measure                                                                                            valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   precond. (call lemmaForallNotContainsForConcat[B]((s... (require 1/2))                                          valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   precond. (call lemmaForallNotContainsForConcat[B]((s... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:933:50:    lemmaForallNotContainsForConcat                                   non-negative measure                                                                                            valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   precond. (call lemmaForallNotContainsForConcat[B]((s... (require 1/2))                                          valid from cache     0.0 
                           lemmaForallNotContainsForConcat                                   precond. (call lemmaForallNotContainsForConcat[B]((s... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:941:50:    lemmaForallNotContainsForConcat                                   non-negative measure                                                                                            valid from cache     0.0 
                           lemmaForallNotContainsForSubseq                                   body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaForallNotContainsForSubseq                                   measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallNotContainsForSubseq                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsForSubseq                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsForSubseq                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsForSubseq                                   precond. (call lemmaForallNotContainsForSubseq[B]((s...)                                                        valid from cache     0.0 
ListUtils.scala:926:50:    lemmaForallNotContainsForSubseq                                   non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:972:51:    lemmaForallNotContainsNilRefList                                  non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:972:71:    lemmaForallNotContainsNilRefList                                  body assertion: match exhaustiveness                                                                            trivial              0.0 
ListUtils.scala:972:71:    lemmaForallNotContainsNilRefList                                  measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:972:71:    lemmaForallNotContainsNilRefList                                  postcondition                                                                                                   trivial              0.0 
ListUtils.scala:972:71:    lemmaForallNotContainsNilRefList                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:972:71:    lemmaForallNotContainsNilRefList                                  postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsPreservedAddNewElmtInRefList                body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaForallNotContainsPreservedAddNewElmtInRefList                measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallNotContainsPreservedAddNewElmtInRefList                postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsPreservedAddNewElmtInRefList                postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsPreservedAddNewElmtInRefList                postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallNotContainsPreservedAddNewElmtInRefList                precond. (call lemmaForallNotContainsPreservedAddNew... (require 1/2))                                          valid from cache     0.0 
                           lemmaForallNotContainsPreservedAddNewElmtInRefList                precond. (call lemmaForallNotContainsPreservedAddNew... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:964:69:    lemmaForallNotContainsPreservedAddNewElmtInRefList                non-negative measure                                                                                            valid from cache     0.0 
                           lemmaForallThenDisjunction1                                       body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaForallThenDisjunction1                                       measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallThenDisjunction1                                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallThenDisjunction1                                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallThenDisjunction1                                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallThenDisjunction1                                       precond. (call lemmaForallThenDisjunction1[B]((scrut...)                                                        valid from cache     0.0 
ListUtils.scala:791:46:    lemmaForallThenDisjunction1                                       non-negative measure                                                                                            valid from cache     0.0 
                           lemmaForallThenDisjunction2                                       body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaForallThenDisjunction2                                       measure decreases                                                                                               valid from cache     0.0 
                           lemmaForallThenDisjunction2                                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallThenDisjunction2                                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallThenDisjunction2                                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaForallThenDisjunction2                                       precond. (call lemmaForallThenDisjunction2[B]((scrut...)                                                        valid from cache     0.0 
ListUtils.scala:785:46:    lemmaForallThenDisjunction2                                       non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:235:7:     lemmaGetIndexBiggerAndHeadEqThenTailContains                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:242:13:    lemmaGetIndexBiggerAndHeadEqThenTailContains                      precond. (call head[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:243:13:    lemmaGetIndexBiggerAndHeadEqThenTailContains                      precond. (call getIndex[B](l, e1))                                                                              valid from cache     0.0 
ListUtils.scala:243:31:    lemmaGetIndexBiggerAndHeadEqThenTailContains                      precond. (call getIndex[B](l, e2))                                                                              valid from cache     0.0 
ListUtils.scala:245:15:    lemmaGetIndexBiggerAndHeadEqThenTailContains                      precond. (call tail[B](l))                                                                                      valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   measure decreases                                                                                               valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaContainsAndNotHdThenTlContains[B... (require 1/2))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaContainsAndNotHdThenTlContains[B... (require 2/2))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 1/4))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 2/4))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 3/4))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaGetIndexBiggerAndHeadEqThenTailC... (require 4/4))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaGetIndexBiggerAndHeadNotEqThenTa... (require 1/3))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaGetIndexBiggerAndHeadNotEqThenTa... (require 2/3))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaGetIndexBiggerAndHeadNotEqThenTa... (require 3/3))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 1/2))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 1/2))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 2/2))                                          valid from cache     0.0 
                           lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:195:13:    lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call getIndex[B](l, e1))                                                                              valid from cache     0.0 
ListUtils.scala:195:31:    lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call getIndex[B](l, e2))                                                                              valid from cache     0.0 
ListUtils.scala:198:5:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:200:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (1/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains                      valid from cache     0.0 
ListUtils.scala:200:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (2/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains                      valid from cache     0.0 
ListUtils.scala:200:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (3/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains                      valid from cache     0.0 
ListUtils.scala:200:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (4/4) of lemmaGetIndexBiggerAndHeadEqThenTailContains                      valid from cache     0.0 
ListUtils.scala:202:16:    lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:204:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (1/2) of lemmaContainsAndNotHdThenTlContains                               valid from cache     0.0 
ListUtils.scala:204:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (2/2) of lemmaContainsAndNotHdThenTlContains                               valid from cache     0.0 
ListUtils.scala:205:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (1/2) of lemmaNotHeadSoGetIndexTailIsMinusOne                              valid from cache     0.0 
ListUtils.scala:205:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (2/2) of lemmaNotHeadSoGetIndexTailIsMinusOne                              valid from cache     0.0 
ListUtils.scala:206:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (1/2) of lemmaNotHeadSoGetIndexTailIsMinusOne                              valid from cache     0.0 
ListUtils.scala:206:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (2/2) of lemmaNotHeadSoGetIndexTailIsMinusOne                              valid from cache     0.0 
ListUtils.scala:208:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (1/3) of lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   valid from cache     0.0 
ListUtils.scala:208:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (2/3) of lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   valid from cache     0.0 
ListUtils.scala:208:9:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition (3/3) of lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   valid from cache     0.0 
ListUtils.scala:210:21:    lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion: Inlined precondition of check                                                                   valid from cache     0.0 
ListUtils.scala:212:5:     lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:212:12:    lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:212:12:    lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:214:15:    lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:214:15:    lemmaGetIndexBiggerAndHeadNotEqThenTailContains                   precond. (call tail[B](l))                                                                                      valid from cache     0.0 
                           lemmaGetSuffixOnListWithItSelfIsEmpty                             measure decreases                                                                                               valid from cache     0.0 
                           lemmaGetSuffixOnListWithItSelfIsEmpty                             precond. (call lemmaIsPrefixRefl[B](l1, l2))                                                                    trivial              0.0 
ListUtils.scala:514:5:     lemmaGetSuffixOnListWithItSelfIsEmpty                             body assertion: Inlined precondition of lemmaIsPrefixRefl                                                       trivial              0.0 
ListUtils.scala:516:5:     lemmaGetSuffixOnListWithItSelfIsEmpty                             body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:516:5:     lemmaGetSuffixOnListWithItSelfIsEmpty                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:517:28:    lemmaGetSuffixOnListWithItSelfIsEmpty                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:518:28:    lemmaGetSuffixOnListWithItSelfIsEmpty                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:520:15:    lemmaGetSuffixOnListWithItSelfIsEmpty                             precond. (call getSuffix[B](l, l) (require 1/2))                                                                valid from cache     0.0 
ListUtils.scala:520:15:    lemmaGetSuffixOnListWithItSelfIsEmpty                             precond. (call getSuffix[B](l, l) (require 1/2))                                                                valid from cache     0.0 
ListUtils.scala:520:15:    lemmaGetSuffixOnListWithItSelfIsEmpty                             precond. (call getSuffix[B](l, l) (require 1/2))                                                                valid from cache     0.0 
ListUtils.scala:520:15:    lemmaGetSuffixOnListWithItSelfIsEmpty                             precond. (call getSuffix[B](l, l) (require 2/2))                                                                valid from cache     0.0 
ListUtils.scala:520:15:    lemmaGetSuffixOnListWithItSelfIsEmpty                             precond. (call getSuffix[B](l, l) (require 2/2))                                                                valid from cache     0.0 
ListUtils.scala:520:15:    lemmaGetSuffixOnListWithItSelfIsEmpty                             precond. (call getSuffix[B](l, l) (require 2/2))                                                                valid from cache     0.0 
ListUtils.scala:520:28:    lemmaGetSuffixOnListWithItSelfIsEmpty                             non-negative measure                                                                                            valid from cache     0.0 
                           lemmaIsPrefixRefl                                                 measure decreases                                                                                               valid from cache     0.0 
                           lemmaIsPrefixRefl                                                 non-negative measure                                                                                            valid from cache     0.0 
                           lemmaIsPrefixRefl                                                 precond. (call lemmaIsPrefixRefl[B](l1, l2))                                                                    valid from cache     0.0 
ListUtils.scala:264:5:     lemmaIsPrefixRefl                                                 body assertion: match exhaustiveness                                                                            trivial              0.0 
ListUtils.scala:264:5:     lemmaIsPrefixRefl                                                 postcondition                                                                                                   trivial              0.0 
ListUtils.scala:265:28:    lemmaIsPrefixRefl                                                 body assertion: Inlined precondition of lemmaIsPrefixRefl                                                       valid from cache     0.0 
ListUtils.scala:265:28:    lemmaIsPrefixRefl                                                 postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:265:50:    lemmaIsPrefixRefl                                                 precond. (call tail[B](l2))                                                                                     valid from cache     0.0 
ListUtils.scala:266:28:    lemmaIsPrefixRefl                                                 postcondition                                                                                                   valid from cache     0.0 
                           lemmaIsPrefixSameLengthThenSameList                               measure decreases                                                                                               valid from cache     0.0 
                           lemmaIsPrefixSameLengthThenSameList                               precond. (call lemmaIsPrefixSameLengthThenSameList[B... (require 1/3))                                          valid from cache     0.0 
                           lemmaIsPrefixSameLengthThenSameList                               precond. (call lemmaIsPrefixSameLengthThenSameList[B... (require 2/3))                                          valid from cache     0.0 
                           lemmaIsPrefixSameLengthThenSameList                               precond. (call lemmaIsPrefixSameLengthThenSameList[B... (require 3/3))                                          valid from cache     0.0 
ListUtils.scala:423:5:     lemmaIsPrefixSameLengthThenSameList                               body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:423:5:     lemmaIsPrefixSameLengthThenSameList                               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:425:9:     lemmaIsPrefixSameLengthThenSameList                               body assertion: Inlined precondition (1/3) of lemmaIsPrefixSameLengthThenSameList                               valid from cache     0.0 
ListUtils.scala:425:9:     lemmaIsPrefixSameLengthThenSameList                               body assertion: Inlined precondition (2/3) of lemmaIsPrefixSameLengthThenSameList                               valid from cache     0.0 
ListUtils.scala:425:9:     lemmaIsPrefixSameLengthThenSameList                               body assertion: Inlined precondition (3/3) of lemmaIsPrefixSameLengthThenSameList                               valid from cache     0.0 
ListUtils.scala:425:9:     lemmaIsPrefixSameLengthThenSameList                               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:425:49:    lemmaIsPrefixSameLengthThenSameList                               precond. (call tail[B](p2))                                                                                     valid from cache     0.0 
ListUtils.scala:425:58:    lemmaIsPrefixSameLengthThenSameList                               non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:425:58:    lemmaIsPrefixSameLengthThenSameList                               precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:426:21:    lemmaIsPrefixSameLengthThenSameList                               postcondition                                                                                                   valid from cache     0.0 
                           lemmaIsPrefixThenSmallerEqSize                                    measure decreases                                                                                               valid from cache     0.0 
                           lemmaIsPrefixThenSmallerEqSize                                    precond. (call lemmaIsPrefixThenSmallerEqSize[B](p, l))                                                         valid from cache     0.0 
ListUtils.scala:491:26:    lemmaIsPrefixThenSmallerEqSize                                    postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:492:26:    lemmaIsPrefixThenSmallerEqSize                                    postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:493:26:    lemmaIsPrefixThenSmallerEqSize                                    body assertion: Inlined precondition of lemmaIsPrefixThenSmallerEqSize                                          valid from cache     0.0 
ListUtils.scala:493:26:    lemmaIsPrefixThenSmallerEqSize                                    postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:493:57:    lemmaIsPrefixThenSmallerEqSize                                    precond. (call tail[B](scrut._1))                                                                               valid from cache     0.0 
ListUtils.scala:493:66:    lemmaIsPrefixThenSmallerEqSize                                    precond. (call tail[B](scrut._2))                                                                               valid from cache     0.0 
ListUtils.scala:495:25:    lemmaIsPrefixThenSmallerEqSize                                    non-negative measure                                                                                            valid from cache     0.0 
                           lemmaIsSuffixThenSubseq                                           measure decreases                                                                                               valid from cache     0.0 
                           lemmaIsSuffixThenSubseq                                           precond. (call lemmaIsSuffixThenSubseq[B](l1, l2))                                                              valid from cache     0.0 
ListUtils.scala:99:15:     lemmaIsSuffixThenSubseq                                           non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:101:56:    lemmaIsSuffixThenSubseq                                           body assertion: Inlined precondition of lemmaIsSuffixThenSubseq                                                 valid from cache     0.0 
ListUtils.scala:101:56:    lemmaIsSuffixThenSubseq                                           postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:102:56:    lemmaIsSuffixThenSubseq                                           postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:103:56:    lemmaIsSuffixThenSubseq                                           postcondition                                                                                                   valid from cache     0.0 
                           lemmaIsSuffixThenTailIsSuffix                                     measure decreases                                                                                               valid from cache     0.0 
                           lemmaIsSuffixThenTailIsSuffix                                     precond. (call lemmaIsSuffixThenTailIsSuffix[B](l, s...)                                                        valid from cache     0.0 
ListUtils.scala:113:15:    lemmaIsSuffixThenTailIsSuffix                                     non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:114:5:     lemmaIsSuffixThenTailIsSuffix                                     body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:114:5:     lemmaIsSuffixThenTailIsSuffix                                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:115:59:    lemmaIsSuffixThenTailIsSuffix                                     body assertion: Inlined precondition of lemmaIsSuffixThenTailIsSuffix                                           valid from cache     0.0 
ListUtils.scala:115:59:    lemmaIsSuffixThenTailIsSuffix                                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:117:16:    lemmaIsSuffixThenTailIsSuffix                                     body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:119:11:    lemmaIsSuffixThenTailIsSuffix                                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:119:18:    lemmaIsSuffixThenTailIsSuffix                                     body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:122:11:    lemmaIsSuffixThenTailIsSuffix                                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:122:18:    lemmaIsSuffixThenTailIsSuffix                                     body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:122:18:    lemmaIsSuffixThenTailIsSuffix                                     precond. (call head[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:122:33:    lemmaIsSuffixThenTailIsSuffix                                     precond. (call head[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:123:18:    lemmaIsSuffixThenTailIsSuffix                                     body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:123:18:    lemmaIsSuffixThenTailIsSuffix                                     precond. (call tail[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:123:33:    lemmaIsSuffixThenTailIsSuffix                                     precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:124:18:    lemmaIsSuffixThenTailIsSuffix                                     body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:124:27:    lemmaIsSuffixThenTailIsSuffix                                     precond. (call tail[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:130:42:    lemmaIsSuffixThenTailIsSuffix                                     precond. (call tail[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:130:42:    lemmaIsSuffixThenTailIsSuffix                                     precond. (call tail[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:130:42:    lemmaIsSuffixThenTailIsSuffix                                     precond. (call tail[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:130:42:    lemmaIsSuffixThenTailIsSuffix                                     precond. (call tail[B](suffix))                                                                                 valid from cache     0.0 
                           lemmaListContainsThenFilterContainsNotEmpty                       measure decreases                                                                                               valid from cache     0.0 
                           lemmaListContainsThenFilterContainsNotEmpty                       precond. (call lemmaListContainsThenFilterContainsNo... (require 1/2))                                          valid from cache     0.0 
                           lemmaListContainsThenFilterContainsNotEmpty                       precond. (call lemmaListContainsThenFilterContainsNo... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:1151:15:   lemmaListContainsThenFilterContainsNotEmpty                       non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:1152:5:    lemmaListContainsThenFilterContainsNotEmpty                       body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:1152:5:    lemmaListContainsThenFilterContainsNotEmpty                       postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1155:11:   lemmaListContainsThenFilterContainsNotEmpty                       body assertion: Inlined precondition (1/2) of lemmaListContainsThenFilterContainsNotEmpty                       valid from cache     0.0 
ListUtils.scala:1155:11:   lemmaListContainsThenFilterContainsNotEmpty                       body assertion: Inlined precondition (2/2) of lemmaListContainsThenFilterContainsNotEmpty                       valid from cache     0.0 
ListUtils.scala:1155:11:   lemmaListContainsThenFilterContainsNotEmpty                       postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1156:10:   lemmaListContainsThenFilterContainsNotEmpty                       postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1158:21:   lemmaListContainsThenFilterContainsNotEmpty                       body assertion: Inlined precondition of check                                                                   valid from cache     0.0 
ListUtils.scala:1158:21:   lemmaListContainsThenFilterContainsNotEmpty                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaListNotContainsThenFilterContainsEmpty                       measure decreases                                                                                               valid from cache     0.0 
                           lemmaListNotContainsThenFilterContainsEmpty                       precond. (call lemmaListNotContainsThenFilterContain... (require 1/2))                                          valid from cache     0.0 
                           lemmaListNotContainsThenFilterContainsEmpty                       precond. (call lemmaListNotContainsThenFilterContain... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:1167:15:   lemmaListNotContainsThenFilterContainsEmpty                       non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:1168:5:    lemmaListNotContainsThenFilterContainsEmpty                       body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:1168:5:    lemmaListNotContainsThenFilterContainsEmpty                       postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1170:9:    lemmaListNotContainsThenFilterContainsEmpty                       body assertion: Inlined precondition (1/2) of lemmaListNotContainsThenFilterContainsEmpty                       valid from cache     0.0 
ListUtils.scala:1170:9:    lemmaListNotContainsThenFilterContainsEmpty                       body assertion: Inlined precondition (2/2) of lemmaListNotContainsThenFilterContainsEmpty                       valid from cache     0.0 
ListUtils.scala:1170:9:    lemmaListNotContainsThenFilterContainsEmpty                       postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1172:21:   lemmaListNotContainsThenFilterContainsEmpty                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                measure decreases                                                                                               valid from cache     0.0 
                           lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 1/4))                                          valid from cache     0.0 
                           lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 2/4))                                          valid from cache     0.0 
                           lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 3/4))                                          valid from cache     0.0 
                           lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                precond. (call lemmaLongerPrefixContainsHeadOfSuffix... (require 4/4))                                          valid from cache     0.0 
ListUtils.scala:296:5:     lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:296:5:     lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:298:9:     lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                body assertion: Inlined precondition (1/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                valid from cache     0.0 
ListUtils.scala:298:9:     lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                body assertion: Inlined precondition (2/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                valid from cache     0.0 
ListUtils.scala:298:9:     lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                body assertion: Inlined precondition (3/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                valid from cache     0.0 
ListUtils.scala:298:9:     lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                body assertion: Inlined precondition (4/4) of lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                valid from cache     0.0 
ListUtils.scala:298:9:     lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:301:11:    lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                precond. (call tail[B](p2))                                                                                     valid from cache     0.0 
ListUtils.scala:302:11:    lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:302:11:    lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:304:21:    lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:306:27:    lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                precond. (call head[B](s1))                                                                                     valid from cache     0.0 
ListUtils.scala:306:27:    lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                precond. (call head[B](s1))                                                                                     valid from cache     0.0 
ListUtils.scala:306:27:    lemmaLongerPrefixContainsHeadOfSuffixOfSmallerPref                precond. (call head[B](s1))                                                                                     valid from cache     0.0 
                           lemmaMoveElementToOtherListKeepsConcatEq                          measure decreases                                                                                               valid from cache     0.0 
                           lemmaMoveElementToOtherListKeepsConcatEq                          precond. (call lemmaMoveElementToOtherListKeepsConca...)                                                        valid from cache     0.0 
ListUtils.scala:533:5:     lemmaMoveElementToOtherListKeepsConcatEq                          body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:533:5:     lemmaMoveElementToOtherListKeepsConcatEq                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:535:9:     lemmaMoveElementToOtherListKeepsConcatEq                          body assertion: Inlined precondition of lemmaMoveElementToOtherListKeepsConcatEq                                valid from cache     0.0 
ListUtils.scala:535:9:     lemmaMoveElementToOtherListKeepsConcatEq                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:535:65:    lemmaMoveElementToOtherListKeepsConcatEq                          precond. (call tail[B](tot))                                                                                    valid from cache     0.0 
ListUtils.scala:536:21:    lemmaMoveElementToOtherListKeepsConcatEq                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:539:43:    lemmaMoveElementToOtherListKeepsConcatEq                          non-negative measure                                                                                            valid from cache     0.0 
                           lemmaNoDuplicateConcatThenForallNotContains                       body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaNoDuplicateConcatThenForallNotContains                       measure decreases                                                                                               valid from cache     0.0 
                           lemmaNoDuplicateConcatThenForallNotContains                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaNoDuplicateConcatThenForallNotContains                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaNoDuplicateConcatThenForallNotContains                       postcondition                                                                                                   valid from cache     0.0 
                           lemmaNoDuplicateConcatThenForallNotContains                       precond. (call lemmaNoDuplicateConcatThenForallNotCo...)                                                        valid from cache     0.0 
ListUtils.scala:957:62:    lemmaNoDuplicateConcatThenForallNotContains                       non-negative measure                                                                                            valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaForallContainsAndNoDuplicateThen... (require 1/2))                                          valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaForallContainsAndNoDuplicateThen... (require 1/2))                                          valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaForallContainsAndNoDuplicateThen... (require 2/2))                                          valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaForallContainsAndNoDuplicateThen... (require 2/2))                                          valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaForallContainsPreservedRemoveElm... (require 1/3))                                          valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaForallContainsPreservedRemoveElm... (require 2/3))                                          valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaForallContainsPreservedRemoveElm... (require 3/3))                                          valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaForallContainsPreservedRemoveElm...)                                                        valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)                                                        valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 1/2))                                          valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 2/2))                                          valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaRemoveOneElmtPreservesNoDuplicat...)                                                        valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaSubsetContentThenForallContains[...)                                                        valid from cache     0.0 
                           lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaSubsetContentThenForallContains[...)                                                        valid from cache     0.0 
ListUtils.scala:1065:5:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition of lemmaSubsetContentThenForallContains                                    valid from cache     0.0 
ListUtils.scala:1066:5:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition of lemmaSubsetContentThenForallContains                                    valid from cache     0.0 
ListUtils.scala:1067:12:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1068:12:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1069:5:    lemmaNoDuplicatePreservedSameContent                              body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:1072:16:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1074:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition of lemmaRemoveOneElmtPreservesNoDuplicate                                  valid from cache     0.0 
ListUtils.scala:1075:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition (1/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         valid from cache     0.0 
ListUtils.scala:1075:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition (2/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         valid from cache     0.0 
ListUtils.scala:1077:16:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1078:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition of lemmaForallContainsPreservedRemoveElmt                                  valid from cache     0.0 
ListUtils.scala:1079:16:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1080:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition (1/2) of lemmaForallContainsAndNoDuplicateThenSmallerList                  valid from cache     0.0 
ListUtils.scala:1080:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition (2/2) of lemmaForallContainsAndNoDuplicateThenSmallerList                  valid from cache     0.0 
ListUtils.scala:1081:16:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1082:16:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1083:16:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1084:16:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1086:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition (1/3) of lemmaForallContainsPreservedRemoveElmtInRefList                   valid from cache     0.0 
ListUtils.scala:1086:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition (2/3) of lemmaForallContainsPreservedRemoveElmtInRefList                   valid from cache     0.0 
ListUtils.scala:1086:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition (3/3) of lemmaForallContainsPreservedRemoveElmtInRefList                   valid from cache     0.0 
ListUtils.scala:1087:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition of check                                                                   valid from cache     0.0 
ListUtils.scala:1088:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition (1/2) of lemmaForallContainsAndNoDuplicateThenSmallerList                  valid from cache     0.0 
ListUtils.scala:1088:9:    lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition (2/2) of lemmaForallContainsAndNoDuplicateThenSmallerList                  valid from cache     0.0 
ListUtils.scala:1089:16:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1091:11:   lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller                                     valid from cache     0.0 
ListUtils.scala:1092:18:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1093:18:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1094:18:   lemmaNoDuplicatePreservedSameContent                              body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1095:11:   lemmaNoDuplicatePreservedSameContent                              body assertion: Inlined precondition of check                                                                   valid from cache     0.0 
ListUtils.scala:1098:9:    lemmaNoDuplicatePreservedSameContent                              measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:1098:9:    lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaNoDuplicatePreservedSameContent[... (require 1/3))                                          valid from cache     0.0 
ListUtils.scala:1098:9:    lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaNoDuplicatePreservedSameContent[... (require 2/3))                                          valid from cache     0.0 
ListUtils.scala:1098:9:    lemmaNoDuplicatePreservedSameContent                              precond. (call lemmaNoDuplicatePreservedSameContent[... (require 3/3))                                          valid from cache     0.0 
ListUtils.scala:1101:15:   lemmaNoDuplicatePreservedSameContent                              postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1101:15:   lemmaNoDuplicatePreservedSameContent                              postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1101:15:   lemmaNoDuplicatePreservedSameContent                              postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1101:37:   lemmaNoDuplicatePreservedSameContent                              non-negative measure                                                                                            valid from cache     0.0 
                           lemmaNotHeadSoGetIndexTailIsMinusOne                              measure decreases                                                                                               valid from cache     0.0 
                           lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 1/2))                                          valid from cache     0.0 
                           lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call lemmaNotHeadSoGetIndexTailIsMinusOne[... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:251:13:    lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call head[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:254:9:     lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call head[B](tail[B](l)))                                                                             valid from cache     0.0 
ListUtils.scala:254:9:     lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:255:7:     lemmaNotHeadSoGetIndexTailIsMinusOne                              body assertion: Inlined precondition (1/2) of lemmaNotHeadSoGetIndexTailIsMinusOne                              valid from cache     0.0 
ListUtils.scala:255:7:     lemmaNotHeadSoGetIndexTailIsMinusOne                              body assertion: Inlined precondition (2/2) of lemmaNotHeadSoGetIndexTailIsMinusOne                              valid from cache     0.0 
ListUtils.scala:255:7:     lemmaNotHeadSoGetIndexTailIsMinusOne                              postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:255:44:    lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:256:6:     lemmaNotHeadSoGetIndexTailIsMinusOne                              postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:257:15:    lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call getIndex[B](l, e))                                                                               valid from cache     0.0 
ListUtils.scala:257:15:    lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call getIndex[B](l, e))                                                                               valid from cache     0.0 
ListUtils.scala:257:33:    lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call getIndex[B](tail[B](l), e))                                                                      valid from cache     0.0 
ListUtils.scala:257:33:    lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call getIndex[B](tail[B](l), e))                                                                      valid from cache     0.0 
ListUtils.scala:257:42:    lemmaNotHeadSoGetIndexTailIsMinusOne                              non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:257:42:    lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:257:42:    lemmaNotHeadSoGetIndexTailIsMinusOne                              precond. (call tail[B](l))                                                                                      valid from cache     0.0 
                           lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  measure decreases                                                                                               valid from cache     0.0 
                           lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  precond. (call lemmaPrefixFromSameListAndStrictlySma... (require 1/3))                                          valid from cache     0.0 
                           lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  precond. (call lemmaPrefixFromSameListAndStrictlySma... (require 2/3))                                          valid from cache     0.0 
                           lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  precond. (call lemmaPrefixFromSameListAndStrictlySma... (require 3/3))                                          valid from cache     0.0 
ListUtils.scala:553:5:     lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:553:5:     lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:555:9:     lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  body assertion: Inlined precondition (1/3) of lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  valid from cache     0.0 
ListUtils.scala:555:9:     lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  body assertion: Inlined precondition (2/3) of lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  valid from cache     0.0 
ListUtils.scala:555:9:     lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  body assertion: Inlined precondition (3/3) of lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  valid from cache     0.0 
ListUtils.scala:555:9:     lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:556:11:    lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  precond. (call tail[B](s1))                                                                                     valid from cache     0.0 
ListUtils.scala:558:11:    lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:558:11:    lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:560:18:    lemmaPrefixFromSameListAndStrictlySmallerThenPrefixFromEachOther  postcondition                                                                                                   valid from cache     0.0 
                           lemmaPrefixStaysPrefixWhenAddingToSuffix                          measure decreases                                                                                               valid from cache     0.0 
                           lemmaPrefixStaysPrefixWhenAddingToSuffix                          precond. (call lemmaPrefixStaysPrefixWhenAddingToSuf...)                                                        valid from cache     0.0 
ListUtils.scala:398:5:     lemmaPrefixStaysPrefixWhenAddingToSuffix                          body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:398:5:     lemmaPrefixStaysPrefixWhenAddingToSuffix                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:400:9:     lemmaPrefixStaysPrefixWhenAddingToSuffix                          body assertion: Inlined precondition of lemmaPrefixStaysPrefixWhenAddingToSuffix                                valid from cache     0.0 
ListUtils.scala:400:9:     lemmaPrefixStaysPrefixWhenAddingToSuffix                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:400:54:    lemmaPrefixStaysPrefixWhenAddingToSuffix                          precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:401:21:    lemmaPrefixStaysPrefixWhenAddingToSuffix                          postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:403:27:    lemmaPrefixStaysPrefixWhenAddingToSuffix                          non-negative measure                                                                                            valid from cache     0.0 
                           lemmaRemoveElmtContainedSizeSmaller                               measure decreases                                                                                               valid from cache     0.0 
                           lemmaRemoveElmtContainedSizeSmaller                               measure decreases                                                                                               valid from cache     0.0 
                           lemmaRemoveElmtContainedSizeSmaller                               precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)                                                        valid from cache     0.0 
                           lemmaRemoveElmtContainedSizeSmaller                               precond. (call lemmaRemoveElmtContainedSizeSmaller[B...)                                                        valid from cache     0.0 
ListUtils.scala:989:5:     lemmaRemoveElmtContainedSizeSmaller                               body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:989:5:     lemmaRemoveElmtContainedSizeSmaller                               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:991:16:    lemmaRemoveElmtContainedSizeSmaller                               body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:993:11:    lemmaRemoveElmtContainedSizeSmaller                               body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller                                     valid from cache     0.0 
ListUtils.scala:993:11:    lemmaRemoveElmtContainedSizeSmaller                               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:994:10:    lemmaRemoveElmtContainedSizeSmaller                               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:996:28:    lemmaRemoveElmtContainedSizeSmaller                               body assertion: Inlined precondition of lemmaRemoveElmtContainedSizeSmaller                                     valid from cache     0.0 
ListUtils.scala:996:28:    lemmaRemoveElmtContainedSizeSmaller                               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:997:28:    lemmaRemoveElmtContainedSizeSmaller                               body assertion: Inlined precondition of check                                                                   valid from cache     0.0 
ListUtils.scala:997:28:    lemmaRemoveElmtContainedSizeSmaller                               postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:999:30:    lemmaRemoveElmtContainedSizeSmaller                               non-negative measure                                                                                            valid from cache     0.0 
                           lemmaRemoveLastConcatenatedPrefixStillPrefix                      measure decreases                                                                                               valid from cache     0.0 
                           lemmaRemoveLastConcatenatedPrefixStillPrefix                      precond. (call lemmaRemoveLastConcatenatedPrefixStil...)                                                        valid from cache     0.0 
ListUtils.scala:366:5:     lemmaRemoveLastConcatenatedPrefixStillPrefix                      body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:366:5:     lemmaRemoveLastConcatenatedPrefixStillPrefix                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:368:9:     lemmaRemoveLastConcatenatedPrefixStillPrefix                      body assertion: Inlined precondition of lemmaRemoveLastConcatenatedPrefixStillPrefix                            valid from cache     0.0 
ListUtils.scala:368:9:     lemmaRemoveLastConcatenatedPrefixStillPrefix                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:368:64:    lemmaRemoveLastConcatenatedPrefixStillPrefix                      precond. (call tail[B](tot))                                                                                    valid from cache     0.0 
ListUtils.scala:369:21:    lemmaRemoveLastConcatenatedPrefixStillPrefix                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:371:24:    lemmaRemoveLastConcatenatedPrefixStillPrefix                      non-negative measure                                                                                            valid from cache     0.0 
                           lemmaRemoveLastFromBothSidePreservesEq                            measure decreases                                                                                               valid from cache     0.0 
                           lemmaRemoveLastFromBothSidePreservesEq                            precond. (call lemmaRemoveLastFromBothSidePreservesE... (require 1/2))                                          valid from cache     0.0 
                           lemmaRemoveLastFromBothSidePreservesEq                            precond. (call lemmaRemoveLastFromBothSidePreservesE... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:442:5:     lemmaRemoveLastFromBothSidePreservesEq                            body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:442:5:     lemmaRemoveLastFromBothSidePreservesEq                            postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:443:28:    lemmaRemoveLastFromBothSidePreservesEq                            body assertion: Inlined precondition (1/2) of lemmaRemoveLastFromBothSidePreservesEq                            valid from cache     0.0 
ListUtils.scala:443:28:    lemmaRemoveLastFromBothSidePreservesEq                            body assertion: Inlined precondition (2/2) of lemmaRemoveLastFromBothSidePreservesEq                            valid from cache     0.0 
ListUtils.scala:443:28:    lemmaRemoveLastFromBothSidePreservesEq                            postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:443:74:    lemmaRemoveLastFromBothSidePreservesEq                            precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:444:28:    lemmaRemoveLastFromBothSidePreservesEq                            postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:446:20:    lemmaRemoveLastFromBothSidePreservesEq                            precond. (call removeLast[B](s))                                                                                valid from cache     0.0 
ListUtils.scala:446:20:    lemmaRemoveLastFromBothSidePreservesEq                            precond. (call removeLast[B](s))                                                                                valid from cache     0.0 
ListUtils.scala:446:20:    lemmaRemoveLastFromBothSidePreservesEq                            precond. (call removeLast[B](s))                                                                                valid from cache     0.0 
ListUtils.scala:446:37:    lemmaRemoveLastFromBothSidePreservesEq                            precond. (call removeLast[B](l))                                                                                valid from cache     0.0 
ListUtils.scala:446:37:    lemmaRemoveLastFromBothSidePreservesEq                            precond. (call removeLast[B](l))                                                                                valid from cache     0.0 
ListUtils.scala:446:37:    lemmaRemoveLastFromBothSidePreservesEq                            precond. (call removeLast[B](l))                                                                                valid from cache     0.0 
ListUtils.scala:446:48:    lemmaRemoveLastFromBothSidePreservesEq                            non-negative measure                                                                                            valid from cache     0.0 
                           lemmaRemoveLastFromLMakesItPrefix                                 measure decreases                                                                                               valid from cache     0.0 
                           lemmaRemoveLastFromLMakesItPrefix                                 precond. (call lemmaRemoveLastFromLMakesItPrefix[B](l))                                                         trivial              0.0 
ListUtils.scala:454:5:     lemmaRemoveLastFromLMakesItPrefix                                 body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:454:5:     lemmaRemoveLastFromLMakesItPrefix                                 postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:455:31:    lemmaRemoveLastFromLMakesItPrefix                                 postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:456:31:    lemmaRemoveLastFromLMakesItPrefix                                 body assertion: Inlined precondition of lemmaRemoveLastFromLMakesItPrefix                                       valid from cache     0.0 
ListUtils.scala:456:31:    lemmaRemoveLastFromLMakesItPrefix                                 postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:459:24:    lemmaRemoveLastFromLMakesItPrefix                                 precond. (call removeLast[B](l))                                                                                trivial              0.0 
ListUtils.scala:459:24:    lemmaRemoveLastFromLMakesItPrefix                                 precond. (call removeLast[B](l))                                                                                valid from cache     0.0 
ListUtils.scala:459:24:    lemmaRemoveLastFromLMakesItPrefix                                 precond. (call removeLast[B](l))                                                                                trivial              0.0 
ListUtils.scala:459:39:    lemmaRemoveLastFromLMakesItPrefix                                 non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:407:7:     lemmaRemoveLastPrefixDecreasesSize                                postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:409:15:    lemmaRemoveLastPrefixDecreasesSize                                precond. (call removeLast[B](l))                                                                                valid from cache     0.0 
                           lemmaRemoveLastPrefixStillPrefix                                  measure decreases                                                                                               valid from cache     0.0 
                           lemmaRemoveLastPrefixStillPrefix                                  precond. (call lemmaRemoveLastPrefixStillPrefix[B](p... (require 1/3))                                          valid from cache     0.0 
                           lemmaRemoveLastPrefixStillPrefix                                  precond. (call lemmaRemoveLastPrefixStillPrefix[B](p... (require 2/3))                                          valid from cache     0.0 
                           lemmaRemoveLastPrefixStillPrefix                                  precond. (call lemmaRemoveLastPrefixStillPrefix[B](p... (require 3/3))                                          valid from cache     0.0 
ListUtils.scala:381:5:     lemmaRemoveLastPrefixStillPrefix                                  body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:381:5:     lemmaRemoveLastPrefixStillPrefix                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:382:28:    lemmaRemoveLastPrefixStillPrefix                                  body assertion: Inlined precondition (1/3) of lemmaRemoveLastPrefixStillPrefix                                  valid from cache     0.0 
ListUtils.scala:382:28:    lemmaRemoveLastPrefixStillPrefix                                  body assertion: Inlined precondition (2/3) of lemmaRemoveLastPrefixStillPrefix                                  valid from cache     0.0 
ListUtils.scala:382:28:    lemmaRemoveLastPrefixStillPrefix                                  body assertion: Inlined precondition (3/3) of lemmaRemoveLastPrefixStillPrefix                                  valid from cache     0.0 
ListUtils.scala:382:28:    lemmaRemoveLastPrefixStillPrefix                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:382:65:    lemmaRemoveLastPrefixStillPrefix                                  precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:383:28:    lemmaRemoveLastPrefixStillPrefix                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:386:27:    lemmaRemoveLastPrefixStillPrefix                                  precond. (call removeLast[B](l))                                                                                valid from cache     0.0 
ListUtils.scala:386:27:    lemmaRemoveLastPrefixStillPrefix                                  precond. (call removeLast[B](l))                                                                                valid from cache     0.0 
ListUtils.scala:386:27:    lemmaRemoveLastPrefixStillPrefix                                  precond. (call removeLast[B](l))                                                                                valid from cache     0.0 
ListUtils.scala:386:38:    lemmaRemoveLastPrefixStillPrefix                                  non-negative measure                                                                                            valid from cache     0.0 
                           lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         measure decreases                                                                                               valid from cache     0.0 
                           lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 1/2))                                          valid from cache     0.0 
                           lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         precond. (call lemmaRemoveOneElmtNoDuplicateSizeMinu... (require 2/2))                                          valid from cache     0.0 
                           lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         precond. (call lemmaRemoveOneElmtNotContainedSameLis...)                                                        valid from cache     0.0 
ListUtils.scala:1008:5:    lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:1008:5:    lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1009:39:   lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1010:39:   lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         body assertion: Inlined precondition of lemmaRemoveOneElmtNotContainedSameList                                  valid from cache     0.0 
ListUtils.scala:1010:39:   lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1011:39:   lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         body assertion: Inlined precondition (1/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         valid from cache     0.0 
ListUtils.scala:1011:39:   lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         body assertion: Inlined precondition (2/2) of lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         valid from cache     0.0 
ListUtils.scala:1011:39:   lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1014:44:   lemmaRemoveOneElmtNoDuplicateSizeMinusOne                         non-negative measure                                                                                            valid from cache     0.0 
                           lemmaRemoveOneElmtNotContainedSameList                            body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaRemoveOneElmtNotContainedSameList                            measure decreases                                                                                               valid from cache     0.0 
                           lemmaRemoveOneElmtNotContainedSameList                            postcondition                                                                                                   valid from cache     0.0 
                           lemmaRemoveOneElmtNotContainedSameList                            postcondition                                                                                                   valid from cache     0.0 
                           lemmaRemoveOneElmtNotContainedSameList                            postcondition                                                                                                   valid from cache     0.0 
                           lemmaRemoveOneElmtNotContainedSameList                            precond. (call lemmaRemoveOneElmtNotContainedSameLis...)                                                        valid from cache     0.0 
ListUtils.scala:1105:57:   lemmaRemoveOneElmtNotContainedSameList                            non-negative measure                                                                                            valid from cache     0.0 
                           lemmaRemoveOneElmtPreservesNoDuplicate                            body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaRemoveOneElmtPreservesNoDuplicate                            measure decreases                                                                                               valid from cache     0.0 
                           lemmaRemoveOneElmtPreservesNoDuplicate                            precond. (call lemmaRemoveOneElmtPreservesNoDuplicat...)                                                        valid from cache     0.0 
ListUtils.scala:1112:57:   lemmaRemoveOneElmtPreservesNoDuplicate                            non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:1115:15:   lemmaRemoveOneElmtPreservesNoDuplicate                            postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1115:15:   lemmaRemoveOneElmtPreservesNoDuplicate                            postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1115:15:   lemmaRemoveOneElmtPreservesNoDuplicate                            postcondition                                                                                                   valid from cache     0.0 
                           lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      measure decreases                                                                                               valid from cache     0.0 
                           lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call lemmaRemovingHeadOfSuffixThenGetPrefi...)                                                        valid from cache     0.0 
ListUtils.scala:135:15:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:137:5:     lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:137:5:     lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:138:55:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:140:9:     lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      body assertion: Inlined precondition of lemmaRemovingHeadOfSuffixThenGetPrefixLonger                            valid from cache     0.0 
ListUtils.scala:140:9:     lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:142:21:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:145:33:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call getPrefix[B](l, suffix))                                                                         valid from cache     0.0 
ListUtils.scala:145:33:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call getPrefix[B](l, suffix))                                                                         valid from cache     0.0 
ListUtils.scala:145:33:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call getPrefix[B](l, suffix))                                                                         valid from cache     0.0 
ListUtils.scala:145:33:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call getPrefix[B](l, suffix))                                                                         valid from cache     0.0 
ListUtils.scala:145:62:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call head[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:145:62:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call head[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:145:62:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call head[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:145:62:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call head[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:145:78:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call getPrefix[B](l, tail[B](suffix)))                                                                valid from cache     0.0 
ListUtils.scala:145:78:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call getPrefix[B](l, tail[B](suffix)))                                                                valid from cache     0.0 
ListUtils.scala:145:78:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call getPrefix[B](l, tail[B](suffix)))                                                                valid from cache     0.0 
ListUtils.scala:145:78:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call getPrefix[B](l, tail[B](suffix)))                                                                valid from cache     0.0 
ListUtils.scala:145:91:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call tail[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:145:91:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call tail[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:145:91:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call tail[B](suffix))                                                                                 valid from cache     0.0 
ListUtils.scala:145:91:    lemmaRemovingHeadOfSuffixThenGetPrefixLonger                      precond. (call tail[B](suffix))                                                                                 valid from cache     0.0 
                           lemmaSameContentSameSizeSmallerEqOneSameList                      measure decreases                                                                                               valid from cache     0.0 
                           lemmaSameContentSameSizeSmallerEqOneSameList                      precond. (call lemmaSameContentSameSizeSmallerEqOneS... (require 1/3))                                          valid from cache     0.0 
                           lemmaSameContentSameSizeSmallerEqOneSameList                      precond. (call lemmaSameContentSameSizeSmallerEqOneS... (require 2/3))                                          valid from cache     0.0 
                           lemmaSameContentSameSizeSmallerEqOneSameList                      precond. (call lemmaSameContentSameSizeSmallerEqOneS... (require 3/3))                                          valid from cache     0.0 
ListUtils.scala:1182:15:   lemmaSameContentSameSizeSmallerEqOneSameList                      non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:1184:5:    lemmaSameContentSameSizeSmallerEqOneSameList                      body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:1184:5:    lemmaSameContentSameSizeSmallerEqOneSameList                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1186:9:    lemmaSameContentSameSizeSmallerEqOneSameList                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1186:16:   lemmaSameContentSameSizeSmallerEqOneSameList                      body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1189:16:   lemmaSameContentSameSizeSmallerEqOneSameList                      body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1189:16:   lemmaSameContentSameSizeSmallerEqOneSameList                      precond. (call head[B](l2))                                                                                     valid from cache     0.0 
ListUtils.scala:1190:16:   lemmaSameContentSameSizeSmallerEqOneSameList                      body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1191:9:    lemmaSameContentSameSizeSmallerEqOneSameList                      body assertion: Inlined precondition (1/3) of lemmaSameContentSameSizeSmallerEqOneSameList                      valid from cache     0.0 
ListUtils.scala:1191:9:    lemmaSameContentSameSizeSmallerEqOneSameList                      body assertion: Inlined precondition (2/3) of lemmaSameContentSameSizeSmallerEqOneSameList                      valid from cache     0.0 
ListUtils.scala:1191:9:    lemmaSameContentSameSizeSmallerEqOneSameList                      body assertion: Inlined precondition (3/3) of lemmaSameContentSameSizeSmallerEqOneSameList                      valid from cache     0.0 
ListUtils.scala:1191:9:    lemmaSameContentSameSizeSmallerEqOneSameList                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1191:58:   lemmaSameContentSameSizeSmallerEqOneSameList                      precond. (call tail[B](l2))                                                                                     valid from cache     0.0 
                           lemmaSameIndexThenSameElement                                     measure decreases                                                                                               valid from cache     0.0 
                           lemmaSameIndexThenSameElement                                     precond. (call lemmaSameIndexThenSameElement[B](l, e... (require 1/3))                                          valid from cache     0.0 
                           lemmaSameIndexThenSameElement                                     precond. (call lemmaSameIndexThenSameElement[B](l, e... (require 2/3))                                          valid from cache     0.0 
                           lemmaSameIndexThenSameElement                                     precond. (call lemmaSameIndexThenSameElement[B](l, e... (require 3/3))                                          valid from cache     0.0 
ListUtils.scala:221:13:    lemmaSameIndexThenSameElement                                     precond. (call getIndex[B](l, e1))                                                                              valid from cache     0.0 
ListUtils.scala:221:32:    lemmaSameIndexThenSameElement                                     precond. (call getIndex[B](l, e2))                                                                              valid from cache     0.0 
ListUtils.scala:224:9:     lemmaSameIndexThenSameElement                                     precond. (call getIndex[B](l, e1))                                                                              valid from cache     0.0 
ListUtils.scala:225:7:     lemmaSameIndexThenSameElement                                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:225:14:    lemmaSameIndexThenSameElement                                     body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:225:14:    lemmaSameIndexThenSameElement                                     precond. (call head[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:226:14:    lemmaSameIndexThenSameElement                                     body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:226:14:    lemmaSameIndexThenSameElement                                     precond. (call head[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:227:14:    lemmaSameIndexThenSameElement                                     body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:229:7:     lemmaSameIndexThenSameElement                                     body assertion: Inlined precondition (1/3) of lemmaSameIndexThenSameElement                                     valid from cache     0.0 
ListUtils.scala:229:7:     lemmaSameIndexThenSameElement                                     body assertion: Inlined precondition (2/3) of lemmaSameIndexThenSameElement                                     valid from cache     0.0 
ListUtils.scala:229:7:     lemmaSameIndexThenSameElement                                     body assertion: Inlined precondition (3/3) of lemmaSameIndexThenSameElement                                     valid from cache     0.0 
ListUtils.scala:229:7:     lemmaSameIndexThenSameElement                                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:229:37:    lemmaSameIndexThenSameElement                                     non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:229:37:    lemmaSameIndexThenSameElement                                     precond. (call tail[B](l))                                                                                      valid from cache     0.0 
                           lemmaSamePrefixThenSameSuffix                                     measure decreases                                                                                               valid from cache     0.0 
                           lemmaSamePrefixThenSameSuffix                                     precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 1/5))                                          valid from cache     0.0 
                           lemmaSamePrefixThenSameSuffix                                     precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 2/5))                                          valid from cache     0.0 
                           lemmaSamePrefixThenSameSuffix                                     precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 3/5))                                          valid from cache     0.0 
                           lemmaSamePrefixThenSameSuffix                                     precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 4/5))                                          valid from cache     0.0 
                           lemmaSamePrefixThenSameSuffix                                     precond. (call lemmaSamePrefixThenSameSuffix[B](p1, ... (require 5/5))                                          valid from cache     0.0 
ListUtils.scala:477:5:     lemmaSamePrefixThenSameSuffix                                     body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:477:5:     lemmaSamePrefixThenSameSuffix                                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:479:9:     lemmaSamePrefixThenSameSuffix                                     body assertion: Inlined precondition (1/5) of lemmaSamePrefixThenSameSuffix                                     valid from cache     0.0 
ListUtils.scala:479:9:     lemmaSamePrefixThenSameSuffix                                     body assertion: Inlined precondition (2/5) of lemmaSamePrefixThenSameSuffix                                     valid from cache     0.0 
ListUtils.scala:479:9:     lemmaSamePrefixThenSameSuffix                                     body assertion: Inlined precondition (3/5) of lemmaSamePrefixThenSameSuffix                                     valid from cache     0.0 
ListUtils.scala:479:9:     lemmaSamePrefixThenSameSuffix                                     body assertion: Inlined precondition (4/5) of lemmaSamePrefixThenSameSuffix                                     valid from cache     0.0 
ListUtils.scala:479:9:     lemmaSamePrefixThenSameSuffix                                     body assertion: Inlined precondition (5/5) of lemmaSamePrefixThenSameSuffix                                     valid from cache     0.0 
ListUtils.scala:479:9:     lemmaSamePrefixThenSameSuffix                                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:479:47:    lemmaSamePrefixThenSameSuffix                                     precond. (call tail[B](p2))                                                                                     valid from cache     0.0 
ListUtils.scala:479:60:    lemmaSamePrefixThenSameSuffix                                     non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:479:60:    lemmaSamePrefixThenSameSuffix                                     precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:480:21:    lemmaSamePrefixThenSameSuffix                                     postcondition                                                                                                   valid from cache     0.0 
                           lemmaSubSeqAddSameElmtPreserves                                   measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubSeqAddSameElmtPreserves                                   measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubSeqAddSameElmtPreserves                                   measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubSeqAddSameElmtPreserves                                   precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)                                                        valid from cache     0.0 
                           lemmaSubSeqAddSameElmtPreserves                                   precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)                                                        valid from cache     0.0 
                           lemmaSubSeqAddSameElmtPreserves                                   precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)                                                        valid from cache     0.0 
ListUtils.scala:711:15:    lemmaSubSeqAddSameElmtPreserves                                   non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:712:5:     lemmaSubSeqAddSameElmtPreserves                                   body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:712:5:     lemmaSubSeqAddSameElmtPreserves                                   postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:713:39:    lemmaSubSeqAddSameElmtPreserves                                   postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:714:39:    lemmaSubSeqAddSameElmtPreserves                                   body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves                                         valid from cache     0.0 
ListUtils.scala:714:39:    lemmaSubSeqAddSameElmtPreserves                                   postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:717:11:    lemmaSubSeqAddSameElmtPreserves                                   body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves                                         valid from cache     0.0 
ListUtils.scala:717:11:    lemmaSubSeqAddSameElmtPreserves                                   postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:719:18:    lemmaSubSeqAddSameElmtPreserves                                   body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:720:11:    lemmaSubSeqAddSameElmtPreserves                                   body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves                                         valid from cache     0.0 
ListUtils.scala:720:11:    lemmaSubSeqAddSameElmtPreserves                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaSubSeqTransitive                                             measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubSeqTransitive                                             measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubSeqTransitive                                             measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubSeqTransitive                                             measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubSeqTransitive                                             measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubSeqTransitive                                             measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubSeqTransitive                                             measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubSeqTransitive                                             non-negative measure                                                                                            valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))                                              valid from cache     0.0 
                           lemmaSubSeqTransitive                                             precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))                                              valid from cache     0.0 
ListUtils.scala:676:9:     lemmaSubSeqTransitive                                             body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:676:9:     lemmaSubSeqTransitive                                             body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:676:9:     lemmaSubSeqTransitive                                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:682:15:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:682:15:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:682:15:    lemmaSubSeqTransitive                                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:684:15:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:684:15:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:684:15:    lemmaSubSeqTransitive                                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:687:13:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:687:13:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:687:13:    lemmaSubSeqTransitive                                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:692:15:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:692:15:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:692:15:    lemmaSubSeqTransitive                                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:694:15:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:694:15:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:694:15:    lemmaSubSeqTransitive                                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:697:13:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:697:13:    lemmaSubSeqTransitive                                             body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:697:13:    lemmaSubSeqTransitive                                             postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:702:17:    lemmaSubSeqTransitive                                             postcondition                                                                                                   valid from cache     0.0 
                           lemmaSubseqOfEmptyIsEmpty                                         body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaSubseqOfEmptyIsEmpty                                         measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubseqOfEmptyIsEmpty                                         postcondition                                                                                                   valid from cache     0.0 
                           lemmaSubseqOfEmptyIsEmpty                                         postcondition                                                                                                   valid from cache     0.0 
                           lemmaSubseqOfEmptyIsEmpty                                         postcondition                                                                                                   valid from cache     0.0 
                           lemmaSubseqOfEmptyIsEmpty                                         precond. (call lemmaSubseqOfEmptyIsEmpty[B]((scrut.t... (require 1/2))                                          valid from cache     0.0 
                           lemmaSubseqOfEmptyIsEmpty                                         precond. (call lemmaSubseqOfEmptyIsEmpty[B]((scrut.t... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:628:44:    lemmaSubseqOfEmptyIsEmpty                                         non-negative measure                                                                                            valid from cache     0.0 
                           lemmaSubseqRefl                                                   measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:619:15:    lemmaSubseqRefl                                                   non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:620:5:     lemmaSubseqRefl                                                   body assertion: match exhaustiveness                                                                            trivial              0.0 
ListUtils.scala:620:5:     lemmaSubseqRefl                                                   postcondition                                                                                                   trivial              0.0 
ListUtils.scala:621:28:    lemmaSubseqRefl                                                   postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:622:28:    lemmaSubseqRefl                                                   postcondition                                                                                                   valid from cache     0.0 
                           lemmaSubsetContentThenForallContains                              body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           lemmaSubsetContentThenForallContains                              measure decreases                                                                                               valid from cache     0.0 
                           lemmaSubsetContentThenForallContains                              postcondition                                                                                                   valid from cache     0.0 
                           lemmaSubsetContentThenForallContains                              postcondition                                                                                                   valid from cache     0.0 
                           lemmaSubsetContentThenForallContains                              postcondition                                                                                                   valid from cache     0.0 
                           lemmaSubsetContentThenForallContains                              precond. (call lemmaSubsetContentThenForallContains[...)                                                        valid from cache     0.0 
ListUtils.scala:1119:55:   lemmaSubsetContentThenForallContains                              non-negative measure                                                                                            valid from cache     0.0 
                           lemmaTailIsSubseqOfBiggerList                                     precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))                                              valid from cache     0.0 
                           lemmaTailIsSubseqOfBiggerList                                     precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))                                              valid from cache     0.0 
ListUtils.scala:662:7:     lemmaTailIsSubseqOfBiggerList                                     body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:662:7:     lemmaTailIsSubseqOfBiggerList                                     body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:662:7:     lemmaTailIsSubseqOfBiggerList                                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:662:29:    lemmaTailIsSubseqOfBiggerList                                     precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:664:6:     lemmaTailIsSubseqOfBiggerList                                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:665:45:    lemmaTailIsSubseqOfBiggerList                                     precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:665:45:    lemmaTailIsSubseqOfBiggerList                                     precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:636:5:     lemmaTailIsSubseqOfList                                           body assertion: match exhaustiveness                                                                            trivial              0.0 
ListUtils.scala:636:5:     lemmaTailIsSubseqOfList                                           postcondition                                                                                                   trivial              0.0 
ListUtils.scala:637:21:    lemmaTailIsSubseqOfList                                           postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:640:9:     lemmaTailIsSubseqOfList                                           precond. (call subseqTail[B](l, l))                                                                             valid from cache     0.0 
ListUtils.scala:641:9:     lemmaTailIsSubseqOfList                                           postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:641:16:    lemmaTailIsSubseqOfList                                           body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:643:42:    lemmaTailIsSubseqOfList                                           postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:650:5:     lemmaTailIsSubseqOfListBis                                        body assertion: match exhaustiveness                                                                            trivial              0.0 
ListUtils.scala:650:5:     lemmaTailIsSubseqOfListBis                                        postcondition                                                                                                   trivial              0.0 
ListUtils.scala:651:28:    lemmaTailIsSubseqOfListBis                                        postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:652:28:    lemmaTailIsSubseqOfListBis                                        postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:654:45:    lemmaTailIsSubseqOfListBis                                        precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:654:45:    lemmaTailIsSubseqOfListBis                                        precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:654:45:    lemmaTailIsSubseqOfListBis                                        precond. (call tail[B](l))                                                                                      trivial              0.0 
                           lemmaTwoListsConcatAssociativity                                  measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:333:15:    lemmaTwoListsConcatAssociativity                                  non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:334:5:     lemmaTwoListsConcatAssociativity                                  body assertion: match exhaustiveness                                                                            trivial              0.0 
ListUtils.scala:334:5:     lemmaTwoListsConcatAssociativity                                  postcondition                                                                                                   trivial              0.0 
ListUtils.scala:336:9:     lemmaTwoListsConcatAssociativity                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:338:21:    lemmaTwoListsConcatAssociativity                                  postcondition                                                                                                   valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreserves                        measure decreases                                                                                               valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreserves                        precond. (call noDuplicateConcatListNotContainedPres... (require 1/3))                                          valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreserves                        precond. (call noDuplicateConcatListNotContainedPres... (require 2/3))                                          valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreserves                        precond. (call noDuplicateConcatListNotContainedPres... (require 3/3))                                          valid from cache     0.0 
ListUtils.scala:1032:5:    noDuplicateConcatListNotContainedPreserves                        body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:1032:5:    noDuplicateConcatListNotContainedPreserves                        postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1033:28:   noDuplicateConcatListNotContainedPreserves                        body assertion: Inlined precondition (1/3) of noDuplicateConcatListNotContainedPreserves                        valid from cache     0.0 
ListUtils.scala:1033:28:   noDuplicateConcatListNotContainedPreserves                        body assertion: Inlined precondition (2/3) of noDuplicateConcatListNotContainedPreserves                        valid from cache     0.0 
ListUtils.scala:1033:28:   noDuplicateConcatListNotContainedPreserves                        body assertion: Inlined precondition (3/3) of noDuplicateConcatListNotContainedPreserves                        valid from cache     0.0 
ListUtils.scala:1033:28:   noDuplicateConcatListNotContainedPreserves                        postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1034:28:   noDuplicateConcatListNotContainedPreserves                        postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1037:35:   noDuplicateConcatListNotContainedPreserves                        non-negative measure                                                                                            valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreservesBis                     measure decreases                                                                                               valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreservesBis                     precond. (call lemmaForallNotContainsForConcat[B](l,... (require 1/2))                                          valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreservesBis                     precond. (call lemmaForallNotContainsForConcat[B](l,... (require 2/2))                                          valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreservesBis                     precond. (call lemmaForallNotContainsForSubseq[B](l,...)                                                        valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreservesBis                     precond. (call noDuplicateConcatListNotContainedPres... (require 1/4))                                          valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreservesBis                     precond. (call noDuplicateConcatListNotContainedPres... (require 2/4))                                          valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreservesBis                     precond. (call noDuplicateConcatListNotContainedPres... (require 3/4))                                          valid from cache     0.0 
                           noDuplicateConcatListNotContainedPreservesBis                     precond. (call noDuplicateConcatListNotContainedPres... (require 4/4))                                          valid from cache     0.0 
ListUtils.scala:1048:5:    noDuplicateConcatListNotContainedPreservesBis                     body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:1048:5:    noDuplicateConcatListNotContainedPreservesBis                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1050:16:   noDuplicateConcatListNotContainedPreservesBis                     body assertion                                                                                                  valid from cache     0.0 
ListUtils.scala:1051:9:    noDuplicateConcatListNotContainedPreservesBis                     body assertion: Inlined precondition (1/2) of lemmaForallNotContainsForConcat                                   valid from cache     0.0 
ListUtils.scala:1051:9:    noDuplicateConcatListNotContainedPreservesBis                     body assertion: Inlined precondition (2/2) of lemmaForallNotContainsForConcat                                   valid from cache     0.0 
ListUtils.scala:1052:9:    noDuplicateConcatListNotContainedPreservesBis                     body assertion: Inlined precondition of lemmaForallNotContainsForSubseq                                         valid from cache     0.0 
ListUtils.scala:1053:9:    noDuplicateConcatListNotContainedPreservesBis                     body assertion: Inlined precondition (1/4) of noDuplicateConcatListNotContainedPreservesBis                     valid from cache     0.0 
ListUtils.scala:1053:9:    noDuplicateConcatListNotContainedPreservesBis                     body assertion: Inlined precondition (2/4) of noDuplicateConcatListNotContainedPreservesBis                     valid from cache     0.0 
ListUtils.scala:1053:9:    noDuplicateConcatListNotContainedPreservesBis                     body assertion: Inlined precondition (3/4) of noDuplicateConcatListNotContainedPreservesBis                     valid from cache     0.0 
ListUtils.scala:1053:9:    noDuplicateConcatListNotContainedPreservesBis                     body assertion: Inlined precondition (4/4) of noDuplicateConcatListNotContainedPreservesBis                     valid from cache     0.0 
ListUtils.scala:1053:9:    noDuplicateConcatListNotContainedPreservesBis                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1055:21:   noDuplicateConcatListNotContainedPreservesBis                     postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:1057:35:   noDuplicateConcatListNotContainedPreservesBis                     non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:1018:7:    noDuplicateConcatNotContainedPreserves                            postcondition                                                                                                   valid from cache     0.0 
                           notContainsAThenTailNotContains                                   body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           notContainsAThenTailNotContains                                   measure decreases                                                                                               valid from cache     0.0 
                           notContainsAThenTailNotContains                                   postcondition                                                                                                   valid from cache     0.0 
                           notContainsAThenTailNotContains                                   postcondition                                                                                                   valid from cache     0.0 
                           notContainsAThenTailNotContains                                   postcondition                                                                                                   valid from cache     0.0 
                           notContainsAThenTailNotContains                                   precond. (call notContainsAThenTailNotContains[B]((s...)                                                        valid from cache     0.0 
ListUtils.scala:1139:15:   notContainsAThenTailNotContains                                   non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:1144:29:   notContainsAThenTailNotContains                                   precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:1144:29:   notContainsAThenTailNotContains                                   precond. (call tail[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:1144:29:   notContainsAThenTailNotContains                                   precond. (call tail[B](l))                                                                                      valid from cache     0.0 
                           notContainsAddNotEqThenNotContains                                body assertion: match exhaustiveness                                                                            valid from cache     0.0 
                           notContainsAddNotEqThenNotContains                                measure decreases                                                                                               valid from cache     0.0 
                           notContainsAddNotEqThenNotContains                                postcondition                                                                                                   valid from cache     0.0 
                           notContainsAddNotEqThenNotContains                                postcondition                                                                                                   valid from cache     0.0 
                           notContainsAddNotEqThenNotContains                                postcondition                                                                                                   valid from cache     0.0 
                           notContainsAddNotEqThenNotContains                                precond. (call notContainsAddNotEqThenNotContains[B]... (require 1/2))                                          valid from cache     0.0 
                           notContainsAddNotEqThenNotContains                                precond. (call notContainsAddNotEqThenNotContains[B]... (require 2/2))                                          valid from cache     0.0 
ListUtils.scala:1127:15:   notContainsAddNotEqThenNotContains                                non-negative measure                                                                                            valid from cache     0.0 
                           removeDuplicates                                                  precond. (call lemmaForallNotContainsPreservedAddNew... (require 1/2))                                          valid from cache     0.0 
                           removeDuplicates                                                  precond. (call lemmaForallNotContainsPreservedAddNew... (require 2/2))                                          valid from cache     0.0 
                           removeDuplicates                                                  precond. (call lemmaIsSuffixThenTailIsSuffix[B](l, s...)                                                        valid from cache     0.0 
                           removeDuplicates                                                  precond. (call lemmaIsSuffixThenTailIsSuffix[B](l, s...)                                                        valid from cache     0.0 
                           removeDuplicates                                                  precond. (call lemmaRemovingHeadOfSuffixThenGetPrefi...)                                                        valid from cache     0.0 
                           removeDuplicates                                                  precond. (call lemmaRemovingHeadOfSuffixThenGetPrefi...)                                                        valid from cache     0.0 
                           removeDuplicates                                                  precond. (call lemmaSubSeqAddSameElmtPreserves[B](lS...)                                                        valid from cache     0.0 
                           removeDuplicates                                                  precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))                                              valid from cache     0.0 
                           removeDuplicates                                                  precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 1/2))                                              valid from cache     0.0 
                           removeDuplicates                                                  precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))                                              valid from cache     0.0 
                           removeDuplicates                                                  precond. (call lemmaSubSeqTransitive[B](l1, l2, l3) (require 2/2))                                              valid from cache     0.0 
                           removeDuplicates                                                  precond. (call noDuplicateConcatListNotContainedPres... (require 1/4))                                          valid from cache     0.0 
                           removeDuplicates                                                  precond. (call noDuplicateConcatListNotContainedPres... (require 2/4))                                          valid from cache     0.0 
                           removeDuplicates                                                  precond. (call noDuplicateConcatListNotContainedPres... (require 3/4))                                          valid from cache     0.0 
                           removeDuplicates                                                  precond. (call noDuplicateConcatListNotContainedPres... (require 4/4))                                          valid from cache     0.0 
ListUtils.scala:585:35:    removeDuplicates                                                  precond. (call getPrefix[B](totList, list))                                                                     valid from cache     0.0 
ListUtils.scala:589:5:     removeDuplicates                                                  body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:589:5:     removeDuplicates                                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:591:9:     removeDuplicates                                                  body assertion: Inlined precondition of lemmaIsSuffixThenTailIsSuffix                                           valid from cache     0.0 
ListUtils.scala:592:9:     removeDuplicates                                                  body assertion: Inlined precondition of lemmaRemovingHeadOfSuffixThenGetPrefixLonger                            valid from cache     0.0 
ListUtils.scala:593:41:    removeDuplicates                                                  precond. (call getPrefix[B](totList, list))                                                                     valid from cache     0.0 
ListUtils.scala:594:9:     removeDuplicates                                                  body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:594:9:     removeDuplicates                                                  body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:594:36:    removeDuplicates                                                  precond. (call getPrefix[B](totList, list))                                                                     valid from cache     0.0 
ListUtils.scala:594:62:    removeDuplicates                                                  precond. (call getPrefix[B](totList, list))                                                                     valid from cache     0.0 
ListUtils.scala:596:9:     removeDuplicates                                                  measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:596:9:     removeDuplicates                                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:596:9:     removeDuplicates                                                  precond. (call removeDuplicates[B](totList, (scrut.t... (require 1/4))                                          valid from cache     0.0 
ListUtils.scala:596:9:     removeDuplicates                                                  precond. (call removeDuplicates[B](totList, (scrut.t... (require 2/4))                                          valid from cache     0.0 
ListUtils.scala:596:9:     removeDuplicates                                                  precond. (call removeDuplicates[B](totList, (scrut.t... (require 3/4))                                          valid from cache     0.0 
ListUtils.scala:596:9:     removeDuplicates                                                  precond. (call removeDuplicates[B](totList, (scrut.t... (require 4/4))                                          valid from cache     0.0 
ListUtils.scala:599:9:     removeDuplicates                                                  body assertion: Inlined precondition of lemmaIsSuffixThenTailIsSuffix                                           valid from cache     0.0 
ListUtils.scala:600:9:     removeDuplicates                                                  body assertion: Inlined precondition of lemmaRemovingHeadOfSuffixThenGetPrefixLonger                            valid from cache     0.0 
ListUtils.scala:601:41:    removeDuplicates                                                  precond. (call getPrefix[B](totList, list))                                                                     valid from cache     0.0 
ListUtils.scala:602:9:     removeDuplicates                                                  body assertion: Inlined precondition (1/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:602:9:     removeDuplicates                                                  body assertion: Inlined precondition (2/2) of lemmaSubSeqTransitive                                             valid from cache     0.0 
ListUtils.scala:602:36:    removeDuplicates                                                  precond. (call getPrefix[B](totList, list))                                                                     valid from cache     0.0 
ListUtils.scala:602:62:    removeDuplicates                                                  precond. (call getPrefix[B](totList, list))                                                                     valid from cache     0.0 
ListUtils.scala:604:9:     removeDuplicates                                                  body assertion: Inlined precondition of lemmaSubSeqAddSameElmtPreserves                                         valid from cache     0.0 
ListUtils.scala:604:46:    removeDuplicates                                                  precond. (call getPrefix[B](totList, list))                                                                     valid from cache     0.0 
ListUtils.scala:607:9:     removeDuplicates                                                  body assertion: Inlined precondition (1/2) of lemmaForallNotContainsPreservedAddNewElmtInRefList                valid from cache     0.0 
ListUtils.scala:607:9:     removeDuplicates                                                  body assertion: Inlined precondition (2/2) of lemmaForallNotContainsPreservedAddNewElmtInRefList                valid from cache     0.0 
ListUtils.scala:608:9:     removeDuplicates                                                  body assertion: Inlined precondition (1/4) of noDuplicateConcatListNotContainedPreservesBis                     valid from cache     0.0 
ListUtils.scala:608:9:     removeDuplicates                                                  body assertion: Inlined precondition (2/4) of noDuplicateConcatListNotContainedPreservesBis                     valid from cache     0.0 
ListUtils.scala:608:9:     removeDuplicates                                                  body assertion: Inlined precondition (3/4) of noDuplicateConcatListNotContainedPreservesBis                     valid from cache     0.0 
ListUtils.scala:608:9:     removeDuplicates                                                  body assertion: Inlined precondition (4/4) of noDuplicateConcatListNotContainedPreservesBis                     valid from cache     0.0 
ListUtils.scala:610:9:     removeDuplicates                                                  measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:610:9:     removeDuplicates                                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:610:9:     removeDuplicates                                                  precond. (call removeDuplicates[B](totList, (scrut.t... (require 1/4))                                          valid from cache     0.0 
ListUtils.scala:610:9:     removeDuplicates                                                  precond. (call removeDuplicates[B](totList, (scrut.t... (require 2/4))                                          valid from cache     0.0 
ListUtils.scala:610:9:     removeDuplicates                                                  precond. (call removeDuplicates[B](totList, (scrut.t... (require 3/4))                                          valid from cache     0.0 
ListUtils.scala:610:9:     removeDuplicates                                                  precond. (call removeDuplicates[B](totList, (scrut.t... (require 4/4))                                          valid from cache     0.0 
ListUtils.scala:614:100:   removeDuplicates                                                  non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:614:108:   removeDuplicates                                                  postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:582:24:    removeDuplicates$default$3                                        postcondition                                                                                                   trivial              0.1 
ListUtils.scala:21:24:     removeLast                                                        body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:21:24:     removeLast                                                        postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:22:31:     removeLast                                                        postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:23:31:     removeLast                                                        postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:23:40:     removeLast                                                        measure decreases                                                                                               valid from cache     0.0 
ListUtils.scala:23:40:     removeLast                                                        precond. (call removeLast[B]((scrut.t): @DropVCs ))                                                             valid from cache     0.0 
ListUtils.scala:26:34:     removeLast                                                        precond. (call last[B](l))                                                                                      valid from cache     0.0 
ListUtils.scala:26:34:     removeLast                                                        precond. (call last[B](l))                                                                                      trivial              0.0 
ListUtils.scala:26:34:     removeLast                                                        precond. (call last[B](l))                                                                                      trivial              0.0 
ListUtils.scala:26:45:     removeLast                                                        non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:30:5:      reverseList                                                       body assertion: match exhaustiveness                                                                            trivial              0.0 
ListUtils.scala:30:5:      reverseList                                                       non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:31:28:     reverseList                                                       measure decreases                                                                                               valid from cache     0.0 
                           subseqForall                                                      measure decreases                                                                                               valid from cache     0.0 
                           subseqForall                                                      precond. (call lemmaTailIsSubseqOfBiggerList[B](l, l...)                                                        valid from cache     0.0 
                           subseqForall                                                      precond. (call subseqForall[B](l, lSub, p) (require 1/2))                                                       valid from cache     0.0 
                           subseqForall                                                      precond. (call subseqForall[B](l, lSub, p) (require 2/2))                                                       valid from cache     0.0 
ListUtils.scala:152:15:    subseqForall                                                      non-negative measure                                                                                            valid from cache     0.0 
ListUtils.scala:153:5:     subseqForall                                                      body assertion: match exhaustiveness                                                                            valid from cache     0.0 
ListUtils.scala:153:5:     subseqForall                                                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:155:9:     subseqForall                                                      body assertion: Inlined precondition of lemmaTailIsSubseqOfBiggerList                                           valid from cache     0.0 
ListUtils.scala:156:9:     subseqForall                                                      precond. (call subseqContains[B](lSub, l, (scrut.h):...)                                                        valid from cache     0.0 
ListUtils.scala:157:9:     subseqForall                                                      precond. (call forallContained[B](l, p, (scrut.h): @...)                                                        valid from cache     0.0 
ListUtils.scala:158:9:     subseqForall                                                      body assertion: Inlined precondition (1/2) of subseqForall                                                      valid from cache     0.0 
ListUtils.scala:158:9:     subseqForall                                                      body assertion: Inlined precondition (2/2) of subseqForall                                                      valid from cache     0.0 
ListUtils.scala:158:9:     subseqForall                                                      postcondition                                                                                                   valid from cache     0.0 
ListUtils.scala:160:21:    subseqForall                                                      postcondition                                                                                                   valid from cache     0.0 
.......................................................................................................................................................................................................................................
total: 982  valid: 982  (950 from cache, 32 trivial) invalid: 0    unknown: 0    time:    0.56                                                                                                                                        

Verification pipeline summary:
  cache, anti-aliasing, imperative elimination, 
  no-inc:smt-z3:z3, smt-cvc4, smt-z3, batched
Shutting down executor service.
